// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WMS_backend.Data;

#nullable disable

namespace WMS_backend.Migrations
{
    [DbContext(typeof(WMSDbContext))]
    [Migration("20240914053743_sample-data")]
    partial class sampledata
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "uuid-ossp");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WMS_backend.Models.DBModels.Company", b =>
                {
                    b.Property<Guid>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("companyid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("address");

                    b.Property<string>("Contact")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("contact");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("createddatetime");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("email");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("boolean")
                        .HasColumnName("isarchived");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("name");

                    b.Property<string>("Phone")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("phone");

                    b.HasKey("CompanyId")
                        .HasName("pk_company");

                    b.ToTable("company", (string)null);

                    b.HasData(
                        new
                        {
                            CompanyId = new Guid("58d6ac23-b9ba-53a2-4892-7f8b5d6e9896"),
                            CreatedDateTime = new DateTime(2024, 9, 14, 5, 4, 4, 357, DateTimeKind.Utc).AddTicks(7693),
                            IsArchived = false,
                            Name = "Reymundo Mayer"
                        },
                        new
                        {
                            CompanyId = new Guid("2f08a644-f120-b99d-7a50-0e8ef1e502a2"),
                            CreatedDateTime = new DateTime(2024, 9, 13, 15, 26, 36, 863, DateTimeKind.Utc).AddTicks(4407),
                            IsArchived = false,
                            Name = "Lonny Swift"
                        },
                        new
                        {
                            CompanyId = new Guid("f26fcf2f-e7ed-59fb-861b-85c1f532c2c7"),
                            CreatedDateTime = new DateTime(2024, 9, 13, 16, 44, 56, 643, DateTimeKind.Utc).AddTicks(3448),
                            IsArchived = false,
                            Name = "Lillian Hodkiewicz"
                        },
                        new
                        {
                            CompanyId = new Guid("ff1d66b5-0328-033a-8da6-5bcc805718c8"),
                            CreatedDateTime = new DateTime(2024, 9, 13, 15, 12, 55, 424, DateTimeKind.Utc).AddTicks(1681),
                            IsArchived = false,
                            Name = "Lila Ullrich"
                        },
                        new
                        {
                            CompanyId = new Guid("9825481b-9e16-8ef4-195c-2f1d50869c89"),
                            CreatedDateTime = new DateTime(2024, 9, 14, 0, 55, 32, 144, DateTimeKind.Utc).AddTicks(1341),
                            IsArchived = false,
                            Name = "Yasmin Graham"
                        });
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.CompanyPermission", b =>
                {
                    b.Property<Guid>("CompanyPermissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("companypermissionid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uuid")
                        .HasColumnName("companyid");

                    b.Property<int>("PermissionType")
                        .HasColumnType("integer")
                        .HasColumnName("permissiontype");

                    b.HasKey("CompanyPermissionId")
                        .HasName("pk_companypermission");

                    b.HasIndex("CompanyId")
                        .HasDatabaseName("ix_companypermission_companyid");

                    b.ToTable("companypermission", (string)null);
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.Inventory", b =>
                {
                    b.Property<Guid>("InventoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("inventoryid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("createddatetime");

                    b.Property<DateTime?>("ExpirationDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("expirationdate");

                    b.Property<DateTime>("ModifiedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("modifieddatetime");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid")
                        .HasColumnName("productid");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer")
                        .HasColumnName("quantity");

                    b.Property<Guid>("RackId")
                        .HasColumnType("uuid")
                        .HasColumnName("rackid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("userid");

                    b.Property<int>("XSlot")
                        .HasColumnType("integer")
                        .HasColumnName("xslot");

                    b.Property<int>("YSlot")
                        .HasColumnType("integer")
                        .HasColumnName("yslot");

                    b.HasKey("InventoryId")
                        .HasName("pk_inventory");

                    b.HasIndex("ProductId")
                        .HasDatabaseName("ix_inventory_productid");

                    b.HasIndex("RackId")
                        .HasDatabaseName("ix_inventory_rackid");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_inventory_userid");

                    b.ToTable("inventory", (string)null);
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.Location", b =>
                {
                    b.Property<Guid>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("locationid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("address");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uuid")
                        .HasColumnName("companyid");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("boolean")
                        .HasColumnName("isarchived");

                    b.Property<int>("LocationType")
                        .HasColumnType("integer")
                        .HasColumnName("locationtype");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("name");

                    b.Property<string>("Phone")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("phone");

                    b.HasKey("LocationId")
                        .HasName("pk_location");

                    b.HasIndex("CompanyId")
                        .HasDatabaseName("ix_location_companyid");

                    b.ToTable("location", (string)null);
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.Notification", b =>
                {
                    b.Property<Guid>("NotificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("notificationid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("createddatetime");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("description");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("boolean")
                        .HasColumnName("isarchived");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("name");

                    b.Property<int>("NotificationType")
                        .HasColumnType("integer")
                        .HasColumnName("notificationtype");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("userid");

                    b.HasKey("NotificationId")
                        .HasName("pk_notification");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_notification_userid");

                    b.ToTable("notification", (string)null);
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.PermissionType", b =>
                {
                    b.Property<int>("PermissionTypeId")
                        .HasColumnType("integer")
                        .HasColumnName("permissiontypeid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("name");

                    b.HasKey("PermissionTypeId")
                        .HasName("pk_permissiontype");

                    b.ToTable("permissiontype", (string)null);

                    b.HasData(
                        new
                        {
                            PermissionTypeId = 4,
                            Name = "Order"
                        },
                        new
                        {
                            PermissionTypeId = 13,
                            Name = "Inbound"
                        },
                        new
                        {
                            PermissionTypeId = 20,
                            Name = "Putaway"
                        },
                        new
                        {
                            PermissionTypeId = 30,
                            Name = "Quality"
                        },
                        new
                        {
                            PermissionTypeId = 40,
                            Name = "Outbound"
                        },
                        new
                        {
                            PermissionTypeId = 50,
                            Name = "Picking"
                        },
                        new
                        {
                            PermissionTypeId = 60,
                            Name = "Packing"
                        },
                        new
                        {
                            PermissionTypeId = 70,
                            Name = "Shipping"
                        },
                        new
                        {
                            PermissionTypeId = 80,
                            Name = "Product"
                        },
                        new
                        {
                            PermissionTypeId = 90,
                            Name = "Stock"
                        },
                        new
                        {
                            PermissionTypeId = 95,
                            Name = "Location"
                        },
                        new
                        {
                            PermissionTypeId = 100,
                            Name = "PurchaseOrder"
                        },
                        new
                        {
                            PermissionTypeId = 110,
                            Name = "PurchaseRequest"
                        },
                        new
                        {
                            PermissionTypeId = 120,
                            Name = "Supplier"
                        },
                        new
                        {
                            PermissionTypeId = 130,
                            Name = "ReportOrder"
                        },
                        new
                        {
                            PermissionTypeId = 140,
                            Name = "ReportPurchaseOrder"
                        },
                        new
                        {
                            PermissionTypeId = 150,
                            Name = "ReportInventory"
                        },
                        new
                        {
                            PermissionTypeId = 170,
                            Name = "ManageCompany"
                        },
                        new
                        {
                            PermissionTypeId = 180,
                            Name = "ManageTeam"
                        });
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.Product", b =>
                {
                    b.Property<Guid>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("productid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<string>("Barcode")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("barcode");

                    b.Property<string>("Barcode1")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("barcode1");

                    b.Property<string>("Barcode2")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("barcode2");

                    b.Property<string>("Barcode3")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("barcode3");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("description");

                    b.Property<double?>("Height")
                        .HasColumnType("double precision")
                        .HasColumnName("height");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("boolean")
                        .HasColumnName("isarchived");

                    b.Property<double?>("Length")
                        .HasColumnType("double precision")
                        .HasColumnName("length");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("name");

                    b.Property<float>("PurchasePrice")
                        .HasColumnType("real")
                        .HasColumnName("purchaseprice");

                    b.Property<float>("RetailPrice")
                        .HasColumnType("real")
                        .HasColumnName("retailprice");

                    b.Property<string>("SKU")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("sku");

                    b.Property<Guid?>("SupplierId")
                        .HasColumnType("uuid")
                        .HasColumnName("supplierid");

                    b.Property<float>("TaxRate")
                        .HasColumnType("real")
                        .HasColumnName("taxrate");

                    b.Property<double?>("Weight")
                        .HasColumnType("double precision")
                        .HasColumnName("weight");

                    b.Property<double?>("Width")
                        .HasColumnType("double precision")
                        .HasColumnName("width");

                    b.HasKey("ProductId")
                        .HasName("pk_product");

                    b.HasIndex("SupplierId")
                        .HasDatabaseName("ix_product_supplierid");

                    b.ToTable("product", (string)null);
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.PurchaseOrder", b =>
                {
                    b.Property<Guid>("PurchaseOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("purchaseorderid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("createddatetime");

                    b.Property<DateTime>("ExpectedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("expecteddate");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("boolean")
                        .HasColumnName("isarchived");

                    b.Property<Guid>("LocationId")
                        .HasColumnType("uuid")
                        .HasColumnName("locationid");

                    b.Property<DateTime>("ModifiedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("modifieddatetime");

                    b.Property<string>("Note")
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)")
                        .HasColumnName("note");

                    b.Property<int>("POStatus")
                        .HasColumnType("integer")
                        .HasColumnName("postatus");

                    b.Property<string>("PurchaseOrderNumber")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("purchaseordernumber");

                    b.Property<float>("Shipping")
                        .HasColumnType("real")
                        .HasColumnName("shipping");

                    b.Property<string>("ShippingCarrier")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("shippingcarrier");

                    b.Property<float>("Subtotal")
                        .HasColumnType("real")
                        .HasColumnName("subtotal");

                    b.Property<Guid>("SupplierId")
                        .HasColumnType("uuid")
                        .HasColumnName("supplierid");

                    b.Property<float>("Tax")
                        .HasColumnType("real")
                        .HasColumnName("tax");

                    b.Property<float>("Total")
                        .HasColumnType("real")
                        .HasColumnName("total");

                    b.Property<string>("TrackingNumber")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("trackingnumber");

                    b.Property<int>("UnitOrders")
                        .HasColumnType("integer")
                        .HasColumnName("unitorders");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("userid");

                    b.HasKey("PurchaseOrderId")
                        .HasName("pk_purchaseorder");

                    b.HasIndex("LocationId")
                        .HasDatabaseName("ix_purchaseorder_locationid");

                    b.HasIndex("SupplierId")
                        .HasDatabaseName("ix_purchaseorder_supplierid");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_purchaseorder_userid");

                    b.ToTable("purchaseorder", (string)null);
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.PurchaseOrderItem", b =>
                {
                    b.Property<Guid>("PurchaseOrderItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("purchaseorderitemid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid")
                        .HasColumnName("productid");

                    b.Property<Guid>("PurchaseOrderId")
                        .HasColumnType("uuid")
                        .HasColumnName("purchaseorderid");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer")
                        .HasColumnName("quantity");

                    b.HasKey("PurchaseOrderItemId")
                        .HasName("pk_purchaseorderitem");

                    b.HasIndex("ProductId")
                        .HasDatabaseName("ix_purchaseorderitem_productid");

                    b.HasIndex("PurchaseOrderId")
                        .HasDatabaseName("ix_purchaseorderitem_purchaseorderid");

                    b.ToTable("purchaseorderitem", (string)null);
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.PurchaseRequest", b =>
                {
                    b.Property<Guid>("PurchaseRequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("purchaserequestid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("createddatetime");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("boolean")
                        .HasColumnName("isarchived");

                    b.Property<string>("MessageFromTeam")
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)")
                        .HasColumnName("messagefromteam");

                    b.Property<string>("MessageToTeam")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)")
                        .HasColumnName("messagetoteam");

                    b.Property<int>("Staus")
                        .HasColumnType("integer")
                        .HasColumnName("staus");

                    b.Property<Guid>("TeamId")
                        .HasColumnType("uuid")
                        .HasColumnName("teamid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("userid");

                    b.HasKey("PurchaseRequestId")
                        .HasName("pk_purchaserequest");

                    b.HasIndex("TeamId")
                        .HasDatabaseName("ix_purchaserequest_teamid");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_purchaserequest_userid");

                    b.ToTable("purchaserequest", (string)null);
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.Rack", b =>
                {
                    b.Property<Guid>("RackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("rackid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("boolean")
                        .HasColumnName("isarchived");

                    b.Property<Guid>("LoactionId")
                        .HasColumnType("uuid")
                        .HasColumnName("loactionid");

                    b.Property<Guid>("LocationId")
                        .HasColumnType("uuid")
                        .HasColumnName("locationid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("name");

                    b.Property<int>("XSlotMax")
                        .HasColumnType("integer")
                        .HasColumnName("xslotmax");

                    b.Property<int>("YSlotMax")
                        .HasColumnType("integer")
                        .HasColumnName("yslotmax");

                    b.HasKey("RackId")
                        .HasName("pk_rack");

                    b.HasIndex("LocationId")
                        .HasDatabaseName("ix_rack_locationid");

                    b.ToTable("rack", (string)null);
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.Supplier", b =>
                {
                    b.Property<Guid>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("supplierid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("address");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uuid")
                        .HasColumnName("companyid");

                    b.Property<string>("Contact")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("contact");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("email");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("boolean")
                        .HasColumnName("isarchived");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("name");

                    b.Property<string>("Phone")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("phone");

                    b.HasKey("SupplierId")
                        .HasName("pk_supplier");

                    b.HasIndex("CompanyId")
                        .HasDatabaseName("ix_supplier_companyid");

                    b.ToTable("supplier", (string)null);
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.Team", b =>
                {
                    b.Property<Guid>("TeamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("teamid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uuid")
                        .HasColumnName("companyid");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("boolean")
                        .HasColumnName("isarchived");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("name");

                    b.HasKey("TeamId")
                        .HasName("pk_team");

                    b.HasIndex("CompanyId")
                        .HasDatabaseName("ix_team_companyid");

                    b.ToTable("team", (string)null);
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.TeamUser", b =>
                {
                    b.Property<Guid>("TeamUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("teamuserid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<Guid>("TeamId")
                        .HasColumnType("uuid")
                        .HasColumnName("teamid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("userid");

                    b.HasKey("TeamUserId")
                        .HasName("pk_teamuser");

                    b.HasIndex("TeamId")
                        .HasDatabaseName("ix_teamuser_teamid");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_teamuser_userid");

                    b.ToTable("teamuser", (string)null);
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.Tote", b =>
                {
                    b.Property<Guid>("ToteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("toteid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<int>("CountMax")
                        .HasColumnType("integer")
                        .HasColumnName("countmax");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("boolean")
                        .HasColumnName("isarchived");

                    b.Property<Guid>("LoactionId")
                        .HasColumnType("uuid")
                        .HasColumnName("loactionid");

                    b.Property<Guid>("LocationId")
                        .HasColumnType("uuid")
                        .HasColumnName("locationid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("name");

                    b.HasKey("ToteId")
                        .HasName("pk_tote");

                    b.HasIndex("LocationId")
                        .HasDatabaseName("ix_tote_locationid");

                    b.ToTable("tote", (string)null);
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("userid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<Guid?>("CompanyId")
                        .HasColumnType("uuid")
                        .HasColumnName("companyid");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("createddatetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("firstname");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("boolean")
                        .HasColumnName("isarchived");

                    b.Property<DateTime?>("LastLoginDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("lastlogindatetime");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("lastname");

                    b.Property<DateTime>("ModifiedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("modifieddatetime");

                    b.Property<Guid?>("ModifiedUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("modifieduserid");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("bytea")
                        .HasColumnName("passwordhash");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("bytea")
                        .HasColumnName("passwordsalt");

                    b.Property<string>("Phone")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("phone");

                    b.HasKey("UserId")
                        .HasName("pk_user");

                    b.HasIndex("CompanyId")
                        .HasDatabaseName("ix_user_companyid");

                    b.HasIndex("ModifiedUserId")
                        .HasDatabaseName("ix_user_modifieduserid");

                    b.ToTable("user", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = new Guid("e3b2ef46-b36d-4f2a-0569-dd691af2feff"),
                            CompanyId = new Guid("58d6ac23-b9ba-53a2-4892-7f8b5d6e9896"),
                            CreatedDateTime = new DateTime(2024, 9, 13, 8, 29, 56, 776, DateTimeKind.Utc).AddTicks(7607),
                            Email = "Roy_Terry43@yahoo.com",
                            FirstName = "Lucienne",
                            IsArchived = false,
                            LastName = "Gleichner",
                            ModifiedDateTime = new DateTime(2024, 9, 13, 9, 49, 5, 664, DateTimeKind.Utc).AddTicks(7096)
                        },
                        new
                        {
                            UserId = new Guid("cde4450a-b7a3-8ed7-c468-64b8e5ec4eee"),
                            CompanyId = new Guid("58d6ac23-b9ba-53a2-4892-7f8b5d6e9896"),
                            CreatedDateTime = new DateTime(2024, 9, 13, 15, 32, 5, 429, DateTimeKind.Utc).AddTicks(3033),
                            Email = "Stacy85@hotmail.com",
                            FirstName = "Sheldon",
                            IsArchived = false,
                            LastName = "Ward",
                            ModifiedDateTime = new DateTime(2024, 9, 13, 18, 19, 17, 674, DateTimeKind.Utc).AddTicks(7925)
                        },
                        new
                        {
                            UserId = new Guid("7a126f0a-3b91-2b0f-200a-219c39b24364"),
                            CompanyId = new Guid("f26fcf2f-e7ed-59fb-861b-85c1f532c2c7"),
                            CreatedDateTime = new DateTime(2024, 9, 13, 11, 30, 32, 159, DateTimeKind.Utc).AddTicks(7752),
                            Email = "Darien.Farrell94@hotmail.com",
                            FirstName = "Reilly",
                            IsArchived = false,
                            LastName = "Lueilwitz",
                            ModifiedDateTime = new DateTime(2024, 9, 13, 20, 44, 41, 784, DateTimeKind.Utc).AddTicks(8749)
                        },
                        new
                        {
                            UserId = new Guid("beb75c48-d47c-acfc-687b-49d728a8bacb"),
                            CompanyId = new Guid("ff1d66b5-0328-033a-8da6-5bcc805718c8"),
                            CreatedDateTime = new DateTime(2024, 9, 13, 12, 53, 49, 569, DateTimeKind.Utc).AddTicks(6546),
                            Email = "Kaycee_Sporer27@hotmail.com",
                            FirstName = "Naomie",
                            IsArchived = false,
                            LastName = "Bartell",
                            ModifiedDateTime = new DateTime(2024, 9, 13, 20, 59, 2, 532, DateTimeKind.Utc).AddTicks(4986)
                        },
                        new
                        {
                            UserId = new Guid("cc5defbe-ac2b-c786-ce69-4ba4c73d05da"),
                            CompanyId = new Guid("f26fcf2f-e7ed-59fb-861b-85c1f532c2c7"),
                            CreatedDateTime = new DateTime(2024, 9, 13, 5, 38, 47, 542, DateTimeKind.Utc).AddTicks(47),
                            Email = "Jazmyn.Bartell60@yahoo.com",
                            FirstName = "Magnus",
                            IsArchived = false,
                            LastName = "Berge",
                            ModifiedDateTime = new DateTime(2024, 9, 13, 7, 45, 30, 445, DateTimeKind.Utc).AddTicks(2481)
                        },
                        new
                        {
                            UserId = new Guid("9e947675-e5ce-3db2-bd0a-ae1e2ba2e1eb"),
                            CompanyId = new Guid("ff1d66b5-0328-033a-8da6-5bcc805718c8"),
                            CreatedDateTime = new DateTime(2024, 9, 14, 0, 54, 5, 885, DateTimeKind.Utc).AddTicks(255),
                            Email = "Oral7@hotmail.com",
                            FirstName = "Nakia",
                            IsArchived = false,
                            LastName = "Graham",
                            ModifiedDateTime = new DateTime(2024, 9, 13, 16, 31, 21, 974, DateTimeKind.Utc).AddTicks(700)
                        },
                        new
                        {
                            UserId = new Guid("9f91f2ef-5490-c864-1050-3acb7dbf1400"),
                            CompanyId = new Guid("2f08a644-f120-b99d-7a50-0e8ef1e502a2"),
                            CreatedDateTime = new DateTime(2024, 9, 13, 10, 15, 55, 496, DateTimeKind.Utc).AddTicks(91),
                            Email = "Josefina95@yahoo.com",
                            FirstName = "Naomie",
                            IsArchived = false,
                            LastName = "Yost",
                            ModifiedDateTime = new DateTime(2024, 9, 13, 9, 47, 16, 358, DateTimeKind.Utc).AddTicks(7631)
                        },
                        new
                        {
                            UserId = new Guid("3c1f054f-b57e-9e75-f5c0-ab1d7959ba62"),
                            CompanyId = new Guid("ff1d66b5-0328-033a-8da6-5bcc805718c8"),
                            CreatedDateTime = new DateTime(2024, 9, 13, 17, 58, 19, 807, DateTimeKind.Utc).AddTicks(6600),
                            Email = "Eddie.Jones@yahoo.com",
                            FirstName = "Eleanore",
                            IsArchived = false,
                            LastName = "Kertzmann",
                            ModifiedDateTime = new DateTime(2024, 9, 14, 0, 45, 23, 628, DateTimeKind.Utc).AddTicks(6054)
                        },
                        new
                        {
                            UserId = new Guid("e99a56a5-4fa4-bcb1-055e-a9d4d28555de"),
                            CompanyId = new Guid("2f08a644-f120-b99d-7a50-0e8ef1e502a2"),
                            CreatedDateTime = new DateTime(2024, 9, 14, 1, 40, 31, 98, DateTimeKind.Utc).AddTicks(6207),
                            Email = "Maryse_Muller12@hotmail.com",
                            FirstName = "Vaughn",
                            IsArchived = false,
                            LastName = "Lubowitz",
                            ModifiedDateTime = new DateTime(2024, 9, 13, 12, 46, 56, 369, DateTimeKind.Utc).AddTicks(235)
                        },
                        new
                        {
                            UserId = new Guid("59e55857-4a5b-0f58-1f04-0b1b5c6bbd54"),
                            CompanyId = new Guid("9825481b-9e16-8ef4-195c-2f1d50869c89"),
                            CreatedDateTime = new DateTime(2024, 9, 13, 18, 45, 18, 430, DateTimeKind.Utc).AddTicks(5641),
                            Email = "Beau30@hotmail.com",
                            FirstName = "Cierra",
                            IsArchived = false,
                            LastName = "Schamberger",
                            ModifiedDateTime = new DateTime(2024, 9, 13, 11, 45, 13, 585, DateTimeKind.Utc).AddTicks(7322)
                        },
                        new
                        {
                            UserId = new Guid("3ec5d0c6-7568-bfe6-5a63-1f054d897975"),
                            CompanyId = new Guid("f26fcf2f-e7ed-59fb-861b-85c1f532c2c7"),
                            CreatedDateTime = new DateTime(2024, 9, 14, 3, 48, 56, 43, DateTimeKind.Utc).AddTicks(423),
                            Email = "General13@gmail.com",
                            FirstName = "Vladimir",
                            IsArchived = false,
                            LastName = "Satterfield",
                            ModifiedDateTime = new DateTime(2024, 9, 13, 23, 29, 25, 887, DateTimeKind.Utc).AddTicks(2955)
                        },
                        new
                        {
                            UserId = new Guid("1564ffb6-46bc-ed01-8487-4ae09c96349d"),
                            CompanyId = new Guid("f26fcf2f-e7ed-59fb-861b-85c1f532c2c7"),
                            CreatedDateTime = new DateTime(2024, 9, 14, 2, 24, 53, 378, DateTimeKind.Utc).AddTicks(5020),
                            Email = "Jena_Fadel@gmail.com",
                            FirstName = "Melvin",
                            IsArchived = false,
                            LastName = "Keebler",
                            ModifiedDateTime = new DateTime(2024, 9, 14, 4, 15, 57, 207, DateTimeKind.Utc).AddTicks(9811)
                        },
                        new
                        {
                            UserId = new Guid("07761ee1-3937-ee82-bee7-5b44a7d90360"),
                            CompanyId = new Guid("2f08a644-f120-b99d-7a50-0e8ef1e502a2"),
                            CreatedDateTime = new DateTime(2024, 9, 13, 12, 6, 34, 732, DateTimeKind.Utc).AddTicks(2446),
                            Email = "Shaylee36@hotmail.com",
                            FirstName = "Nakia",
                            IsArchived = false,
                            LastName = "Hauck",
                            ModifiedDateTime = new DateTime(2024, 9, 13, 10, 32, 12, 838, DateTimeKind.Utc).AddTicks(8730)
                        },
                        new
                        {
                            UserId = new Guid("830d6557-acbb-f90a-64e2-767d50115ead"),
                            CompanyId = new Guid("f26fcf2f-e7ed-59fb-861b-85c1f532c2c7"),
                            CreatedDateTime = new DateTime(2024, 9, 13, 22, 21, 14, 592, DateTimeKind.Utc).AddTicks(7012),
                            Email = "Esperanza.Hudson@yahoo.com",
                            FirstName = "Rodrick",
                            IsArchived = false,
                            LastName = "Lakin",
                            ModifiedDateTime = new DateTime(2024, 9, 13, 11, 32, 22, 326, DateTimeKind.Utc).AddTicks(5657)
                        },
                        new
                        {
                            UserId = new Guid("b984b58c-1c1a-f959-e11c-e03b2cae39ad"),
                            CompanyId = new Guid("2f08a644-f120-b99d-7a50-0e8ef1e502a2"),
                            CreatedDateTime = new DateTime(2024, 9, 14, 1, 22, 53, 446, DateTimeKind.Utc).AddTicks(2874),
                            Email = "Asia.Bosco79@yahoo.com",
                            FirstName = "Justice",
                            IsArchived = false,
                            LastName = "Bergnaum",
                            ModifiedDateTime = new DateTime(2024, 9, 14, 5, 30, 51, 86, DateTimeKind.Utc).AddTicks(4988)
                        },
                        new
                        {
                            UserId = new Guid("13fd8ae1-5402-2068-5575-abc85a235730"),
                            CompanyId = new Guid("9825481b-9e16-8ef4-195c-2f1d50869c89"),
                            CreatedDateTime = new DateTime(2024, 9, 13, 19, 38, 17, 617, DateTimeKind.Utc).AddTicks(4512),
                            Email = "Ezequiel.Crooks72@yahoo.com",
                            FirstName = "Abe",
                            IsArchived = false,
                            LastName = "Jast",
                            ModifiedDateTime = new DateTime(2024, 9, 14, 0, 35, 4, 832, DateTimeKind.Utc).AddTicks(775)
                        },
                        new
                        {
                            UserId = new Guid("f2bf73b1-6369-7803-6ee4-08dee6c38de4"),
                            CompanyId = new Guid("58d6ac23-b9ba-53a2-4892-7f8b5d6e9896"),
                            CreatedDateTime = new DateTime(2024, 9, 13, 12, 22, 44, 226, DateTimeKind.Utc).AddTicks(8266),
                            Email = "Creola.Murazik2@hotmail.com",
                            FirstName = "Henri",
                            IsArchived = false,
                            LastName = "Christiansen",
                            ModifiedDateTime = new DateTime(2024, 9, 14, 5, 16, 13, 38, DateTimeKind.Utc).AddTicks(6867)
                        },
                        new
                        {
                            UserId = new Guid("16844e84-e1e1-b7ad-ac95-82416556abe9"),
                            CompanyId = new Guid("ff1d66b5-0328-033a-8da6-5bcc805718c8"),
                            CreatedDateTime = new DateTime(2024, 9, 13, 21, 37, 7, 92, DateTimeKind.Utc).AddTicks(6542),
                            Email = "Jamar98@gmail.com",
                            FirstName = "Jeramie",
                            IsArchived = false,
                            LastName = "Block",
                            ModifiedDateTime = new DateTime(2024, 9, 14, 0, 54, 58, 60, DateTimeKind.Utc).AddTicks(7798)
                        },
                        new
                        {
                            UserId = new Guid("8b674291-2e0b-cdb5-7f29-e9cd26fd390c"),
                            CompanyId = new Guid("ff1d66b5-0328-033a-8da6-5bcc805718c8"),
                            CreatedDateTime = new DateTime(2024, 9, 13, 7, 37, 34, 573, DateTimeKind.Utc).AddTicks(1801),
                            Email = "Reagan.White@yahoo.com",
                            FirstName = "Casper",
                            IsArchived = false,
                            LastName = "Collins",
                            ModifiedDateTime = new DateTime(2024, 9, 13, 22, 17, 38, 849, DateTimeKind.Utc).AddTicks(7369)
                        },
                        new
                        {
                            UserId = new Guid("7d39fed6-b6a0-09f9-4f6b-50208a548c97"),
                            CompanyId = new Guid("2f08a644-f120-b99d-7a50-0e8ef1e502a2"),
                            CreatedDateTime = new DateTime(2024, 9, 13, 21, 30, 33, 969, DateTimeKind.Utc).AddTicks(1447),
                            Email = "Jensen.Sauer@hotmail.com",
                            FirstName = "Kurtis",
                            IsArchived = false,
                            LastName = "Wolff",
                            ModifiedDateTime = new DateTime(2024, 9, 13, 6, 16, 26, 255, DateTimeKind.Utc).AddTicks(5119)
                        },
                        new
                        {
                            UserId = new Guid("58e59519-0689-90ef-57b6-94028932d41d"),
                            CompanyId = new Guid("58d6ac23-b9ba-53a2-4892-7f8b5d6e9896"),
                            CreatedDateTime = new DateTime(2024, 9, 14, 1, 21, 44, 890, DateTimeKind.Utc).AddTicks(9034),
                            Email = "Dorothy.Kshlerin48@yahoo.com",
                            FirstName = "Jalen",
                            IsArchived = false,
                            LastName = "Marks",
                            ModifiedDateTime = new DateTime(2024, 9, 13, 14, 10, 22, 504, DateTimeKind.Utc).AddTicks(3093)
                        },
                        new
                        {
                            UserId = new Guid("82e6681d-58e8-9d41-6323-f7e14931fafd"),
                            CompanyId = new Guid("9825481b-9e16-8ef4-195c-2f1d50869c89"),
                            CreatedDateTime = new DateTime(2024, 9, 14, 1, 49, 48, 169, DateTimeKind.Utc).AddTicks(2854),
                            Email = "Orion3@gmail.com",
                            FirstName = "Dayana",
                            IsArchived = false,
                            LastName = "O'Reilly",
                            ModifiedDateTime = new DateTime(2024, 9, 13, 12, 44, 36, 469, DateTimeKind.Utc).AddTicks(1371)
                        },
                        new
                        {
                            UserId = new Guid("9ab89b64-f689-a551-d128-7134aba94795"),
                            CompanyId = new Guid("2f08a644-f120-b99d-7a50-0e8ef1e502a2"),
                            CreatedDateTime = new DateTime(2024, 9, 14, 1, 33, 18, 752, DateTimeKind.Utc).AddTicks(439),
                            Email = "Vince_Spinka8@yahoo.com",
                            FirstName = "Wava",
                            IsArchived = false,
                            LastName = "Johns",
                            ModifiedDateTime = new DateTime(2024, 9, 13, 10, 36, 43, 569, DateTimeKind.Utc).AddTicks(5363)
                        },
                        new
                        {
                            UserId = new Guid("7373943f-d5a3-f454-a6e4-c99a018fa460"),
                            CompanyId = new Guid("2f08a644-f120-b99d-7a50-0e8ef1e502a2"),
                            CreatedDateTime = new DateTime(2024, 9, 13, 10, 50, 20, 562, DateTimeKind.Utc).AddTicks(1737),
                            Email = "Weston.Funk@hotmail.com",
                            FirstName = "Fae",
                            IsArchived = false,
                            LastName = "Kreiger",
                            ModifiedDateTime = new DateTime(2024, 9, 13, 12, 47, 58, 782, DateTimeKind.Utc).AddTicks(7143)
                        },
                        new
                        {
                            UserId = new Guid("d1d521c1-7455-6831-1210-5db4cd5e56b5"),
                            CompanyId = new Guid("9825481b-9e16-8ef4-195c-2f1d50869c89"),
                            CreatedDateTime = new DateTime(2024, 9, 14, 2, 58, 43, 958, DateTimeKind.Utc).AddTicks(3744),
                            Email = "Desiree.Stark91@hotmail.com",
                            FirstName = "Martin",
                            IsArchived = false,
                            LastName = "Senger",
                            ModifiedDateTime = new DateTime(2024, 9, 13, 19, 4, 36, 71, DateTimeKind.Utc).AddTicks(5055)
                        },
                        new
                        {
                            UserId = new Guid("5c8f62ff-7839-1415-331f-d48e5568987d"),
                            CompanyId = new Guid("9825481b-9e16-8ef4-195c-2f1d50869c89"),
                            CreatedDateTime = new DateTime(2024, 9, 13, 16, 44, 0, 0, DateTimeKind.Utc).AddTicks(9481),
                            Email = "Jennie27@hotmail.com",
                            FirstName = "Tyreek",
                            IsArchived = false,
                            LastName = "Zemlak",
                            ModifiedDateTime = new DateTime(2024, 9, 14, 0, 21, 56, 922, DateTimeKind.Utc).AddTicks(9367)
                        },
                        new
                        {
                            UserId = new Guid("5364d89a-d9a6-ef7e-3206-83b4233bb84a"),
                            CompanyId = new Guid("2f08a644-f120-b99d-7a50-0e8ef1e502a2"),
                            CreatedDateTime = new DateTime(2024, 9, 13, 15, 31, 41, 96, DateTimeKind.Utc).AddTicks(7459),
                            Email = "Clint.Schulist@hotmail.com",
                            FirstName = "Mariana",
                            IsArchived = false,
                            LastName = "Maggio",
                            ModifiedDateTime = new DateTime(2024, 9, 13, 9, 57, 31, 648, DateTimeKind.Utc).AddTicks(5358)
                        },
                        new
                        {
                            UserId = new Guid("fd4219db-80ec-a6d6-dd3c-afdf78fb1066"),
                            CompanyId = new Guid("ff1d66b5-0328-033a-8da6-5bcc805718c8"),
                            CreatedDateTime = new DateTime(2024, 9, 13, 21, 17, 34, 873, DateTimeKind.Utc).AddTicks(8701),
                            Email = "Alfonzo_Torphy@yahoo.com",
                            FirstName = "Augustine",
                            IsArchived = false,
                            LastName = "Stoltenberg",
                            ModifiedDateTime = new DateTime(2024, 9, 14, 3, 59, 19, 695, DateTimeKind.Utc).AddTicks(8616)
                        },
                        new
                        {
                            UserId = new Guid("a3416341-84bd-7a19-fd64-ac351a02dd7d"),
                            CompanyId = new Guid("ff1d66b5-0328-033a-8da6-5bcc805718c8"),
                            CreatedDateTime = new DateTime(2024, 9, 14, 3, 57, 49, 399, DateTimeKind.Utc).AddTicks(7145),
                            Email = "Erick.Will84@gmail.com",
                            FirstName = "Madisen",
                            IsArchived = false,
                            LastName = "Reichel",
                            ModifiedDateTime = new DateTime(2024, 9, 13, 16, 57, 46, 143, DateTimeKind.Utc).AddTicks(8567)
                        },
                        new
                        {
                            UserId = new Guid("13f94d5a-1e4b-3e0c-7265-3a7f2bc6fefd"),
                            CompanyId = new Guid("2f08a644-f120-b99d-7a50-0e8ef1e502a2"),
                            CreatedDateTime = new DateTime(2024, 9, 14, 3, 43, 10, 211, DateTimeKind.Utc).AddTicks(444),
                            Email = "Ashly_Kuhic@gmail.com",
                            FirstName = "Ken",
                            IsArchived = false,
                            LastName = "Kihn",
                            ModifiedDateTime = new DateTime(2024, 9, 13, 16, 47, 32, 859, DateTimeKind.Utc).AddTicks(5178)
                        },
                        new
                        {
                            UserId = new Guid("5270c29c-e156-9e33-bf2c-045161160ec4"),
                            CompanyId = new Guid("f26fcf2f-e7ed-59fb-861b-85c1f532c2c7"),
                            CreatedDateTime = new DateTime(2024, 9, 13, 17, 56, 53, 901, DateTimeKind.Utc).AddTicks(8924),
                            Email = "Stanford.Fay76@gmail.com",
                            FirstName = "Nicklaus",
                            IsArchived = false,
                            LastName = "Streich",
                            ModifiedDateTime = new DateTime(2024, 9, 13, 14, 28, 2, 43, DateTimeKind.Utc).AddTicks(2861)
                        },
                        new
                        {
                            UserId = new Guid("ec58ee12-8976-82ee-49cd-200e594b8c06"),
                            CompanyId = new Guid("ff1d66b5-0328-033a-8da6-5bcc805718c8"),
                            CreatedDateTime = new DateTime(2024, 9, 13, 16, 34, 51, 664, DateTimeKind.Utc).AddTicks(982),
                            Email = "Tressa_Cassin88@yahoo.com",
                            FirstName = "Marcelino",
                            IsArchived = false,
                            LastName = "Flatley",
                            ModifiedDateTime = new DateTime(2024, 9, 13, 9, 14, 10, 637, DateTimeKind.Utc).AddTicks(2763)
                        },
                        new
                        {
                            UserId = new Guid("9ea31fec-26ec-211f-b066-3f8dc87294c4"),
                            CompanyId = new Guid("2f08a644-f120-b99d-7a50-0e8ef1e502a2"),
                            CreatedDateTime = new DateTime(2024, 9, 13, 23, 6, 53, 502, DateTimeKind.Utc).AddTicks(3711),
                            Email = "Rene.Pagac@yahoo.com",
                            FirstName = "Rebekah",
                            IsArchived = false,
                            LastName = "Cartwright",
                            ModifiedDateTime = new DateTime(2024, 9, 13, 7, 20, 3, 248, DateTimeKind.Utc).AddTicks(9096)
                        },
                        new
                        {
                            UserId = new Guid("bca9d7d7-a2c2-fa17-0262-a62f33e73a29"),
                            CompanyId = new Guid("9825481b-9e16-8ef4-195c-2f1d50869c89"),
                            CreatedDateTime = new DateTime(2024, 9, 13, 22, 38, 14, 218, DateTimeKind.Utc).AddTicks(1989),
                            Email = "Shirley.Mraz72@yahoo.com",
                            FirstName = "Colt",
                            IsArchived = false,
                            LastName = "Harvey",
                            ModifiedDateTime = new DateTime(2024, 9, 13, 19, 35, 38, 208, DateTimeKind.Utc).AddTicks(2980)
                        },
                        new
                        {
                            UserId = new Guid("a90ade96-c557-4ee2-4778-f3a49d76cd70"),
                            CompanyId = new Guid("58d6ac23-b9ba-53a2-4892-7f8b5d6e9896"),
                            CreatedDateTime = new DateTime(2024, 9, 14, 0, 2, 1, 631, DateTimeKind.Utc).AddTicks(2902),
                            Email = "Danyka_Lehner40@hotmail.com",
                            FirstName = "Madeline",
                            IsArchived = false,
                            LastName = "Cremin",
                            ModifiedDateTime = new DateTime(2024, 9, 13, 14, 0, 26, 992, DateTimeKind.Utc).AddTicks(901)
                        },
                        new
                        {
                            UserId = new Guid("0482f077-777f-8062-1cf7-b94f6a5199f2"),
                            CompanyId = new Guid("ff1d66b5-0328-033a-8da6-5bcc805718c8"),
                            CreatedDateTime = new DateTime(2024, 9, 13, 17, 26, 9, 231, DateTimeKind.Utc).AddTicks(4105),
                            Email = "Parker_Murray@yahoo.com",
                            FirstName = "Junior",
                            IsArchived = false,
                            LastName = "Kunze",
                            ModifiedDateTime = new DateTime(2024, 9, 14, 3, 3, 45, 506, DateTimeKind.Utc).AddTicks(8169)
                        },
                        new
                        {
                            UserId = new Guid("57061e34-d303-589d-6b5d-c573742d3af5"),
                            CompanyId = new Guid("2f08a644-f120-b99d-7a50-0e8ef1e502a2"),
                            CreatedDateTime = new DateTime(2024, 9, 13, 7, 26, 1, 762, DateTimeKind.Utc).AddTicks(6921),
                            Email = "Eliza76@gmail.com",
                            FirstName = "Genoveva",
                            IsArchived = false,
                            LastName = "Mante",
                            ModifiedDateTime = new DateTime(2024, 9, 13, 22, 40, 12, 740, DateTimeKind.Utc).AddTicks(8019)
                        },
                        new
                        {
                            UserId = new Guid("b175c4da-5f7a-0a7e-4244-79c4f3e6b111"),
                            CompanyId = new Guid("2f08a644-f120-b99d-7a50-0e8ef1e502a2"),
                            CreatedDateTime = new DateTime(2024, 9, 14, 0, 44, 19, 738, DateTimeKind.Utc).AddTicks(3982),
                            Email = "Kaden_Klocko45@yahoo.com",
                            FirstName = "Jeanne",
                            IsArchived = false,
                            LastName = "Dare",
                            ModifiedDateTime = new DateTime(2024, 9, 14, 0, 58, 23, 324, DateTimeKind.Utc).AddTicks(4891)
                        },
                        new
                        {
                            UserId = new Guid("956f19b6-8269-f8e6-d9e3-b9e365f469ea"),
                            CompanyId = new Guid("f26fcf2f-e7ed-59fb-861b-85c1f532c2c7"),
                            CreatedDateTime = new DateTime(2024, 9, 13, 9, 44, 43, 306, DateTimeKind.Utc).AddTicks(2234),
                            Email = "Layla57@gmail.com",
                            FirstName = "Ryan",
                            IsArchived = false,
                            LastName = "Walsh",
                            ModifiedDateTime = new DateTime(2024, 9, 14, 4, 50, 36, 896, DateTimeKind.Utc).AddTicks(7605)
                        },
                        new
                        {
                            UserId = new Guid("080ca897-9d74-b37c-c7f0-d3af0f420dee"),
                            CompanyId = new Guid("f26fcf2f-e7ed-59fb-861b-85c1f532c2c7"),
                            CreatedDateTime = new DateTime(2024, 9, 13, 7, 43, 9, 307, DateTimeKind.Utc).AddTicks(6859),
                            Email = "Jayde57@hotmail.com",
                            FirstName = "Elyse",
                            IsArchived = false,
                            LastName = "Ryan",
                            ModifiedDateTime = new DateTime(2024, 9, 13, 22, 54, 52, 591, DateTimeKind.Utc).AddTicks(8068)
                        },
                        new
                        {
                            UserId = new Guid("99197927-90d0-fa48-ea3d-ecd06e1b66b2"),
                            CompanyId = new Guid("f26fcf2f-e7ed-59fb-861b-85c1f532c2c7"),
                            CreatedDateTime = new DateTime(2024, 9, 14, 3, 34, 0, 900, DateTimeKind.Utc).AddTicks(5738),
                            Email = "Sigrid_Zemlak6@yahoo.com",
                            FirstName = "Shany",
                            IsArchived = false,
                            LastName = "Klocko",
                            ModifiedDateTime = new DateTime(2024, 9, 13, 18, 59, 53, 115, DateTimeKind.Utc).AddTicks(9586)
                        },
                        new
                        {
                            UserId = new Guid("9d4ea7f4-4228-75ee-0299-2e2043661557"),
                            CompanyId = new Guid("9825481b-9e16-8ef4-195c-2f1d50869c89"),
                            CreatedDateTime = new DateTime(2024, 9, 13, 13, 21, 21, 554, DateTimeKind.Utc).AddTicks(7088),
                            Email = "Rocky.Ryan@yahoo.com",
                            FirstName = "Ezra",
                            IsArchived = false,
                            LastName = "King",
                            ModifiedDateTime = new DateTime(2024, 9, 13, 8, 24, 33, 460, DateTimeKind.Utc).AddTicks(5867)
                        },
                        new
                        {
                            UserId = new Guid("037d1980-5276-deb4-5352-9ca0c48e80a5"),
                            CompanyId = new Guid("2f08a644-f120-b99d-7a50-0e8ef1e502a2"),
                            CreatedDateTime = new DateTime(2024, 9, 13, 20, 2, 20, 536, DateTimeKind.Utc).AddTicks(5579),
                            Email = "Claire_Purdy91@yahoo.com",
                            FirstName = "Fredrick",
                            IsArchived = false,
                            LastName = "Hudson",
                            ModifiedDateTime = new DateTime(2024, 9, 13, 14, 45, 28, 991, DateTimeKind.Utc).AddTicks(2280)
                        },
                        new
                        {
                            UserId = new Guid("9203a05b-0c31-c15b-d4f8-ff23db6b6413"),
                            CompanyId = new Guid("58d6ac23-b9ba-53a2-4892-7f8b5d6e9896"),
                            CreatedDateTime = new DateTime(2024, 9, 13, 23, 25, 49, 818, DateTimeKind.Utc).AddTicks(802),
                            Email = "Skyla.Howe32@hotmail.com",
                            FirstName = "Kailey",
                            IsArchived = false,
                            LastName = "Ryan",
                            ModifiedDateTime = new DateTime(2024, 9, 13, 6, 17, 35, 881, DateTimeKind.Utc).AddTicks(7113)
                        },
                        new
                        {
                            UserId = new Guid("2bc3a1f9-d45b-5813-3e50-c06b9368ccab"),
                            CompanyId = new Guid("9825481b-9e16-8ef4-195c-2f1d50869c89"),
                            CreatedDateTime = new DateTime(2024, 9, 13, 17, 41, 43, 644, DateTimeKind.Utc).AddTicks(8882),
                            Email = "Christy_Mohr3@yahoo.com",
                            FirstName = "Nella",
                            IsArchived = false,
                            LastName = "Mitchell",
                            ModifiedDateTime = new DateTime(2024, 9, 14, 5, 16, 43, 796, DateTimeKind.Utc).AddTicks(728)
                        },
                        new
                        {
                            UserId = new Guid("76341cc7-1295-62d5-2011-cda34ec81226"),
                            CompanyId = new Guid("ff1d66b5-0328-033a-8da6-5bcc805718c8"),
                            CreatedDateTime = new DateTime(2024, 9, 13, 6, 26, 33, 281, DateTimeKind.Utc).AddTicks(8642),
                            Email = "Leilani4@hotmail.com",
                            FirstName = "Dennis",
                            IsArchived = false,
                            LastName = "Buckridge",
                            ModifiedDateTime = new DateTime(2024, 9, 13, 15, 31, 3, 469, DateTimeKind.Utc).AddTicks(1891)
                        },
                        new
                        {
                            UserId = new Guid("d58a48fd-932f-70e3-4c3c-09d92a58bd06"),
                            CompanyId = new Guid("58d6ac23-b9ba-53a2-4892-7f8b5d6e9896"),
                            CreatedDateTime = new DateTime(2024, 9, 13, 8, 4, 30, 563, DateTimeKind.Utc).AddTicks(5708),
                            Email = "Mikayla_Jacobson@yahoo.com",
                            FirstName = "Geovany",
                            IsArchived = false,
                            LastName = "Schmitt",
                            ModifiedDateTime = new DateTime(2024, 9, 13, 7, 2, 25, 768, DateTimeKind.Utc).AddTicks(3232)
                        },
                        new
                        {
                            UserId = new Guid("1b8edb47-7688-8c4f-158d-d74ae139c0dd"),
                            CompanyId = new Guid("2f08a644-f120-b99d-7a50-0e8ef1e502a2"),
                            CreatedDateTime = new DateTime(2024, 9, 13, 20, 29, 0, 44, DateTimeKind.Utc).AddTicks(8240),
                            Email = "Lola63@hotmail.com",
                            FirstName = "Justen",
                            IsArchived = false,
                            LastName = "Bernier",
                            ModifiedDateTime = new DateTime(2024, 9, 13, 11, 57, 49, 143, DateTimeKind.Utc).AddTicks(2969)
                        },
                        new
                        {
                            UserId = new Guid("a36266dd-416c-9ecc-4b07-e230b3938a9e"),
                            CompanyId = new Guid("ff1d66b5-0328-033a-8da6-5bcc805718c8"),
                            CreatedDateTime = new DateTime(2024, 9, 13, 18, 40, 2, 742, DateTimeKind.Utc).AddTicks(9674),
                            Email = "Milo.Schamberger90@hotmail.com",
                            FirstName = "Connie",
                            IsArchived = false,
                            LastName = "Simonis",
                            ModifiedDateTime = new DateTime(2024, 9, 14, 1, 27, 48, 236, DateTimeKind.Utc).AddTicks(6700)
                        },
                        new
                        {
                            UserId = new Guid("fc51b91f-1dc0-998e-e829-7120967d42ed"),
                            CompanyId = new Guid("f26fcf2f-e7ed-59fb-861b-85c1f532c2c7"),
                            CreatedDateTime = new DateTime(2024, 9, 13, 12, 12, 56, 280, DateTimeKind.Utc).AddTicks(6093),
                            Email = "Rebekah98@yahoo.com",
                            FirstName = "Enrico",
                            IsArchived = false,
                            LastName = "Dooley",
                            ModifiedDateTime = new DateTime(2024, 9, 13, 21, 11, 49, 126, DateTimeKind.Utc).AddTicks(8147)
                        },
                        new
                        {
                            UserId = new Guid("6436429c-c69b-1467-ace5-fa0b211325fa"),
                            CompanyId = new Guid("9825481b-9e16-8ef4-195c-2f1d50869c89"),
                            CreatedDateTime = new DateTime(2024, 9, 13, 9, 46, 45, 384, DateTimeKind.Utc).AddTicks(1496),
                            Email = "Orlando.Kuphal30@hotmail.com",
                            FirstName = "Euna",
                            IsArchived = false,
                            LastName = "Bode",
                            ModifiedDateTime = new DateTime(2024, 9, 14, 5, 22, 2, 135, DateTimeKind.Utc).AddTicks(3111)
                        },
                        new
                        {
                            UserId = new Guid("80c1a3e2-4d9e-8020-4b62-838eaab981d0"),
                            CompanyId = new Guid("2f08a644-f120-b99d-7a50-0e8ef1e502a2"),
                            CreatedDateTime = new DateTime(2024, 9, 13, 19, 24, 12, 770, DateTimeKind.Utc).AddTicks(2492),
                            Email = "Leone27@gmail.com",
                            FirstName = "Layne",
                            IsArchived = false,
                            LastName = "Schulist",
                            ModifiedDateTime = new DateTime(2024, 9, 13, 19, 29, 45, 964, DateTimeKind.Utc).AddTicks(6604)
                        },
                        new
                        {
                            UserId = new Guid("ccb807a0-1c7d-34cf-8570-eb655bbd0092"),
                            CompanyId = new Guid("f26fcf2f-e7ed-59fb-861b-85c1f532c2c7"),
                            CreatedDateTime = new DateTime(2024, 9, 13, 15, 36, 17, 12, DateTimeKind.Utc).AddTicks(9619),
                            Email = "Nettie59@yahoo.com",
                            FirstName = "Mona",
                            IsArchived = false,
                            LastName = "Grant",
                            ModifiedDateTime = new DateTime(2024, 9, 14, 3, 32, 46, 188, DateTimeKind.Utc).AddTicks(5776)
                        },
                        new
                        {
                            UserId = new Guid("e459f19b-0514-bebb-ac19-c87ee467bf76"),
                            CompanyId = new Guid("2f08a644-f120-b99d-7a50-0e8ef1e502a2"),
                            CreatedDateTime = new DateTime(2024, 9, 13, 7, 10, 1, 342, DateTimeKind.Utc).AddTicks(8286),
                            Email = "Vicenta.Hammes46@hotmail.com",
                            FirstName = "Cortney",
                            IsArchived = false,
                            LastName = "Little",
                            ModifiedDateTime = new DateTime(2024, 9, 14, 4, 7, 17, 188, DateTimeKind.Utc).AddTicks(2927)
                        },
                        new
                        {
                            UserId = new Guid("f14ab8de-b4a4-80b8-ddda-a05ce6a99c10"),
                            CompanyId = new Guid("58d6ac23-b9ba-53a2-4892-7f8b5d6e9896"),
                            CreatedDateTime = new DateTime(2024, 9, 13, 21, 47, 26, 245, DateTimeKind.Utc).AddTicks(7234),
                            Email = "Marjory.Sipes61@yahoo.com",
                            FirstName = "Brennan",
                            IsArchived = false,
                            LastName = "Upton",
                            ModifiedDateTime = new DateTime(2024, 9, 13, 23, 18, 36, 796, DateTimeKind.Utc).AddTicks(9026)
                        },
                        new
                        {
                            UserId = new Guid("b418ac2d-1dc0-dd66-0562-2823c92ce7e2"),
                            CompanyId = new Guid("58d6ac23-b9ba-53a2-4892-7f8b5d6e9896"),
                            CreatedDateTime = new DateTime(2024, 9, 13, 11, 28, 26, 548, DateTimeKind.Utc).AddTicks(8670),
                            Email = "Tania32@hotmail.com",
                            FirstName = "Chad",
                            IsArchived = false,
                            LastName = "Nitzsche",
                            ModifiedDateTime = new DateTime(2024, 9, 13, 8, 57, 50, 669, DateTimeKind.Utc).AddTicks(1274)
                        },
                        new
                        {
                            UserId = new Guid("07b7e844-eb28-9476-8ad4-c426e03e7fcc"),
                            CompanyId = new Guid("9825481b-9e16-8ef4-195c-2f1d50869c89"),
                            CreatedDateTime = new DateTime(2024, 9, 14, 0, 52, 36, 531, DateTimeKind.Utc).AddTicks(4392),
                            Email = "Kaley_Bradtke@gmail.com",
                            FirstName = "Celestine",
                            IsArchived = false,
                            LastName = "Feest",
                            ModifiedDateTime = new DateTime(2024, 9, 13, 20, 14, 9, 397, DateTimeKind.Utc).AddTicks(5500)
                        },
                        new
                        {
                            UserId = new Guid("32d12f50-26cd-f7d9-d97e-25fe393cac35"),
                            CompanyId = new Guid("58d6ac23-b9ba-53a2-4892-7f8b5d6e9896"),
                            CreatedDateTime = new DateTime(2024, 9, 14, 0, 2, 53, 81, DateTimeKind.Utc).AddTicks(6809),
                            Email = "Ludie57@hotmail.com",
                            FirstName = "Justine",
                            IsArchived = false,
                            LastName = "Lowe",
                            ModifiedDateTime = new DateTime(2024, 9, 14, 3, 22, 36, 52, DateTimeKind.Utc).AddTicks(9408)
                        },
                        new
                        {
                            UserId = new Guid("bd383332-7318-99f2-9b47-c258079d4de8"),
                            CompanyId = new Guid("2f08a644-f120-b99d-7a50-0e8ef1e502a2"),
                            CreatedDateTime = new DateTime(2024, 9, 14, 0, 41, 1, 935, DateTimeKind.Utc).AddTicks(144),
                            Email = "Oswaldo.Ernser50@hotmail.com",
                            FirstName = "Taryn",
                            IsArchived = false,
                            LastName = "Murray",
                            ModifiedDateTime = new DateTime(2024, 9, 13, 15, 26, 53, 819, DateTimeKind.Utc).AddTicks(5431)
                        },
                        new
                        {
                            UserId = new Guid("afd9dca0-ce4f-f49d-a5bf-1b65b20c9fa1"),
                            CompanyId = new Guid("58d6ac23-b9ba-53a2-4892-7f8b5d6e9896"),
                            CreatedDateTime = new DateTime(2024, 9, 13, 9, 5, 54, 803, DateTimeKind.Utc).AddTicks(5128),
                            Email = "Georgette.Herzog@gmail.com",
                            FirstName = "Sylvia",
                            IsArchived = false,
                            LastName = "Ratke",
                            ModifiedDateTime = new DateTime(2024, 9, 13, 11, 13, 53, 58, DateTimeKind.Utc).AddTicks(272)
                        },
                        new
                        {
                            UserId = new Guid("38b0bbcb-d9dc-4d5c-51bd-c197738a69a9"),
                            CompanyId = new Guid("9825481b-9e16-8ef4-195c-2f1d50869c89"),
                            CreatedDateTime = new DateTime(2024, 9, 13, 12, 28, 16, 805, DateTimeKind.Utc).AddTicks(6574),
                            Email = "Lillie_Auer40@gmail.com",
                            FirstName = "Daniella",
                            IsArchived = false,
                            LastName = "Donnelly",
                            ModifiedDateTime = new DateTime(2024, 9, 13, 23, 37, 23, 296, DateTimeKind.Utc).AddTicks(5900)
                        },
                        new
                        {
                            UserId = new Guid("1278a5b0-30c8-0273-e244-6de2410965ba"),
                            CompanyId = new Guid("9825481b-9e16-8ef4-195c-2f1d50869c89"),
                            CreatedDateTime = new DateTime(2024, 9, 13, 15, 38, 42, 831, DateTimeKind.Utc).AddTicks(5227),
                            Email = "Weston81@yahoo.com",
                            FirstName = "Winnifred",
                            IsArchived = false,
                            LastName = "Feest",
                            ModifiedDateTime = new DateTime(2024, 9, 14, 3, 25, 53, 361, DateTimeKind.Utc).AddTicks(5663)
                        },
                        new
                        {
                            UserId = new Guid("e53ee8e3-a2ce-3ef3-aba7-d9aaf966ff87"),
                            CompanyId = new Guid("2f08a644-f120-b99d-7a50-0e8ef1e502a2"),
                            CreatedDateTime = new DateTime(2024, 9, 13, 10, 40, 57, 296, DateTimeKind.Utc).AddTicks(1543),
                            Email = "Avery.Smith12@yahoo.com",
                            FirstName = "Kareem",
                            IsArchived = false,
                            LastName = "Adams",
                            ModifiedDateTime = new DateTime(2024, 9, 14, 0, 19, 44, 474, DateTimeKind.Utc).AddTicks(5291)
                        },
                        new
                        {
                            UserId = new Guid("ce0edcea-72f7-4cff-8bc3-fc75caef025e"),
                            CompanyId = new Guid("58d6ac23-b9ba-53a2-4892-7f8b5d6e9896"),
                            CreatedDateTime = new DateTime(2024, 9, 14, 2, 21, 37, 769, DateTimeKind.Utc).AddTicks(9315),
                            Email = "Raymond_Schmitt47@hotmail.com",
                            FirstName = "Tyrell",
                            IsArchived = false,
                            LastName = "Miller",
                            ModifiedDateTime = new DateTime(2024, 9, 13, 11, 42, 1, 682, DateTimeKind.Utc).AddTicks(9629)
                        },
                        new
                        {
                            UserId = new Guid("6c5952c1-cdf3-09da-629c-d8e138f91974"),
                            CompanyId = new Guid("9825481b-9e16-8ef4-195c-2f1d50869c89"),
                            CreatedDateTime = new DateTime(2024, 9, 13, 11, 40, 19, 123, DateTimeKind.Utc).AddTicks(4762),
                            Email = "Zita66@gmail.com",
                            FirstName = "Ciara",
                            IsArchived = false,
                            LastName = "O'Connell",
                            ModifiedDateTime = new DateTime(2024, 9, 14, 1, 2, 44, 422, DateTimeKind.Utc).AddTicks(827)
                        },
                        new
                        {
                            UserId = new Guid("a5ea611a-5cf4-19b0-3dfa-315609a7f0e6"),
                            CompanyId = new Guid("2f08a644-f120-b99d-7a50-0e8ef1e502a2"),
                            CreatedDateTime = new DateTime(2024, 9, 13, 11, 54, 44, 146, DateTimeKind.Utc).AddTicks(1065),
                            Email = "Colt_Thiel74@gmail.com",
                            FirstName = "Nora",
                            IsArchived = false,
                            LastName = "Dietrich",
                            ModifiedDateTime = new DateTime(2024, 9, 13, 15, 11, 5, 488, DateTimeKind.Utc).AddTicks(4056)
                        },
                        new
                        {
                            UserId = new Guid("20bd01d7-7b88-b338-781e-bda77c301ebc"),
                            CompanyId = new Guid("2f08a644-f120-b99d-7a50-0e8ef1e502a2"),
                            CreatedDateTime = new DateTime(2024, 9, 13, 18, 54, 12, 914, DateTimeKind.Utc).AddTicks(1309),
                            Email = "Lee.Lemke80@hotmail.com",
                            FirstName = "Kylie",
                            IsArchived = false,
                            LastName = "Collier",
                            ModifiedDateTime = new DateTime(2024, 9, 13, 8, 45, 35, 291, DateTimeKind.Utc).AddTicks(7491)
                        },
                        new
                        {
                            UserId = new Guid("5f142dbb-6432-d9da-1880-daa8dad1f477"),
                            CompanyId = new Guid("2f08a644-f120-b99d-7a50-0e8ef1e502a2"),
                            CreatedDateTime = new DateTime(2024, 9, 14, 3, 32, 29, 286, DateTimeKind.Utc).AddTicks(161),
                            Email = "Davonte.Gusikowski@yahoo.com",
                            FirstName = "Deshaun",
                            IsArchived = false,
                            LastName = "Hammes",
                            ModifiedDateTime = new DateTime(2024, 9, 13, 15, 24, 46, 252, DateTimeKind.Utc).AddTicks(3781)
                        },
                        new
                        {
                            UserId = new Guid("8f58390d-af59-899d-7c85-64bf8b43a257"),
                            CompanyId = new Guid("58d6ac23-b9ba-53a2-4892-7f8b5d6e9896"),
                            CreatedDateTime = new DateTime(2024, 9, 14, 3, 32, 50, 766, DateTimeKind.Utc).AddTicks(1306),
                            Email = "Gerson_Murazik48@yahoo.com",
                            FirstName = "Della",
                            IsArchived = false,
                            LastName = "Huel",
                            ModifiedDateTime = new DateTime(2024, 9, 13, 8, 8, 42, 378, DateTimeKind.Utc).AddTicks(3131)
                        },
                        new
                        {
                            UserId = new Guid("fdd92483-16e7-562d-a080-88262a0b5154"),
                            CompanyId = new Guid("ff1d66b5-0328-033a-8da6-5bcc805718c8"),
                            CreatedDateTime = new DateTime(2024, 9, 13, 7, 14, 55, 544, DateTimeKind.Utc).AddTicks(9626),
                            Email = "Hailee.Hilll0@hotmail.com",
                            FirstName = "Joanne",
                            IsArchived = false,
                            LastName = "Sanford",
                            ModifiedDateTime = new DateTime(2024, 9, 13, 18, 35, 1, 219, DateTimeKind.Utc).AddTicks(4454)
                        },
                        new
                        {
                            UserId = new Guid("51e55d72-d7e5-1959-65a2-887ca85eec01"),
                            CompanyId = new Guid("ff1d66b5-0328-033a-8da6-5bcc805718c8"),
                            CreatedDateTime = new DateTime(2024, 9, 13, 16, 33, 46, 842, DateTimeKind.Utc).AddTicks(844),
                            Email = "Eli20@gmail.com",
                            FirstName = "Fay",
                            IsArchived = false,
                            LastName = "Cummings",
                            ModifiedDateTime = new DateTime(2024, 9, 13, 6, 0, 58, 874, DateTimeKind.Utc).AddTicks(2796)
                        },
                        new
                        {
                            UserId = new Guid("adbd7e2b-09ff-6800-baf9-ba2ea24fd0f2"),
                            CompanyId = new Guid("f26fcf2f-e7ed-59fb-861b-85c1f532c2c7"),
                            CreatedDateTime = new DateTime(2024, 9, 14, 4, 19, 9, 42, DateTimeKind.Utc).AddTicks(6864),
                            Email = "Gardner8@hotmail.com",
                            FirstName = "Irwin",
                            IsArchived = false,
                            LastName = "Tromp",
                            ModifiedDateTime = new DateTime(2024, 9, 13, 20, 43, 14, 333, DateTimeKind.Utc).AddTicks(3930)
                        },
                        new
                        {
                            UserId = new Guid("3120ccde-ff01-445d-acda-5cb7a37e7b40"),
                            CompanyId = new Guid("ff1d66b5-0328-033a-8da6-5bcc805718c8"),
                            CreatedDateTime = new DateTime(2024, 9, 14, 3, 21, 19, 163, DateTimeKind.Utc).AddTicks(6217),
                            Email = "Robert89@hotmail.com",
                            FirstName = "Kane",
                            IsArchived = false,
                            LastName = "Koelpin",
                            ModifiedDateTime = new DateTime(2024, 9, 13, 18, 39, 38, 709, DateTimeKind.Utc).AddTicks(817)
                        },
                        new
                        {
                            UserId = new Guid("32415cfe-f994-a20e-2b34-4789f8bad15e"),
                            CompanyId = new Guid("58d6ac23-b9ba-53a2-4892-7f8b5d6e9896"),
                            CreatedDateTime = new DateTime(2024, 9, 13, 7, 12, 21, 861, DateTimeKind.Utc).AddTicks(6439),
                            Email = "Deion60@hotmail.com",
                            FirstName = "Adam",
                            IsArchived = false,
                            LastName = "Gerlach",
                            ModifiedDateTime = new DateTime(2024, 9, 13, 12, 39, 2, 783, DateTimeKind.Utc).AddTicks(8222)
                        },
                        new
                        {
                            UserId = new Guid("1780f77c-8481-56db-0100-02794662a901"),
                            CompanyId = new Guid("2f08a644-f120-b99d-7a50-0e8ef1e502a2"),
                            CreatedDateTime = new DateTime(2024, 9, 13, 16, 40, 48, 803, DateTimeKind.Utc).AddTicks(6819),
                            Email = "Petra_Lowe@gmail.com",
                            FirstName = "Britney",
                            IsArchived = false,
                            LastName = "Pouros",
                            ModifiedDateTime = new DateTime(2024, 9, 13, 12, 20, 13, 209, DateTimeKind.Utc).AddTicks(3039)
                        },
                        new
                        {
                            UserId = new Guid("969d2106-2141-9cdd-7c17-2213b2c3ada1"),
                            CompanyId = new Guid("f26fcf2f-e7ed-59fb-861b-85c1f532c2c7"),
                            CreatedDateTime = new DateTime(2024, 9, 13, 17, 1, 22, 401, DateTimeKind.Utc).AddTicks(2214),
                            Email = "Paula75@hotmail.com",
                            FirstName = "Janet",
                            IsArchived = false,
                            LastName = "Nitzsche",
                            ModifiedDateTime = new DateTime(2024, 9, 13, 13, 25, 6, 191, DateTimeKind.Utc).AddTicks(2533)
                        },
                        new
                        {
                            UserId = new Guid("f0fd3a27-0320-2df3-7eba-b96abfe09baa"),
                            CompanyId = new Guid("ff1d66b5-0328-033a-8da6-5bcc805718c8"),
                            CreatedDateTime = new DateTime(2024, 9, 13, 23, 24, 40, 564, DateTimeKind.Utc).AddTicks(8965),
                            Email = "Hans.Witting37@gmail.com",
                            FirstName = "Meaghan",
                            IsArchived = false,
                            LastName = "Welch",
                            ModifiedDateTime = new DateTime(2024, 9, 13, 8, 1, 39, 797, DateTimeKind.Utc).AddTicks(6682)
                        },
                        new
                        {
                            UserId = new Guid("96d2a4fa-8290-fa6e-a39e-8bf61f1f8444"),
                            CompanyId = new Guid("f26fcf2f-e7ed-59fb-861b-85c1f532c2c7"),
                            CreatedDateTime = new DateTime(2024, 9, 13, 21, 27, 33, 786, DateTimeKind.Utc).AddTicks(8783),
                            Email = "Ike.Ruecker@gmail.com",
                            FirstName = "Hester",
                            IsArchived = false,
                            LastName = "Graham",
                            ModifiedDateTime = new DateTime(2024, 9, 14, 0, 8, 27, 868, DateTimeKind.Utc).AddTicks(2143)
                        },
                        new
                        {
                            UserId = new Guid("cdf23ed4-1ea4-e11a-f989-ab2328e751e6"),
                            CompanyId = new Guid("f26fcf2f-e7ed-59fb-861b-85c1f532c2c7"),
                            CreatedDateTime = new DateTime(2024, 9, 13, 18, 12, 28, 72, DateTimeKind.Utc).AddTicks(2192),
                            Email = "Samir_Lehner7@gmail.com",
                            FirstName = "Justen",
                            IsArchived = false,
                            LastName = "Mertz",
                            ModifiedDateTime = new DateTime(2024, 9, 13, 17, 33, 48, 244, DateTimeKind.Utc).AddTicks(1656)
                        },
                        new
                        {
                            UserId = new Guid("9f6da6f4-9e85-ad63-3008-d5fa6ddb3d26"),
                            CompanyId = new Guid("2f08a644-f120-b99d-7a50-0e8ef1e502a2"),
                            CreatedDateTime = new DateTime(2024, 9, 13, 19, 34, 43, 489, DateTimeKind.Utc).AddTicks(5914),
                            Email = "Unique_Kuvalis60@hotmail.com",
                            FirstName = "Prudence",
                            IsArchived = false,
                            LastName = "Harber",
                            ModifiedDateTime = new DateTime(2024, 9, 13, 10, 9, 19, 445, DateTimeKind.Utc).AddTicks(8207)
                        },
                        new
                        {
                            UserId = new Guid("012db46d-3354-269c-3b8c-e92685c53a21"),
                            CompanyId = new Guid("9825481b-9e16-8ef4-195c-2f1d50869c89"),
                            CreatedDateTime = new DateTime(2024, 9, 13, 12, 30, 30, 820, DateTimeKind.Utc).AddTicks(1165),
                            Email = "Brittany_Reichert@gmail.com",
                            FirstName = "Eldon",
                            IsArchived = false,
                            LastName = "Sauer",
                            ModifiedDateTime = new DateTime(2024, 9, 13, 14, 4, 38, 339, DateTimeKind.Utc).AddTicks(3964)
                        },
                        new
                        {
                            UserId = new Guid("11331ab0-a5d7-4292-f5f8-020681c6d0b5"),
                            CompanyId = new Guid("58d6ac23-b9ba-53a2-4892-7f8b5d6e9896"),
                            CreatedDateTime = new DateTime(2024, 9, 13, 15, 41, 55, 743, DateTimeKind.Utc).AddTicks(4268),
                            Email = "Ari.Waters@yahoo.com",
                            FirstName = "Evie",
                            IsArchived = false,
                            LastName = "Hansen",
                            ModifiedDateTime = new DateTime(2024, 9, 13, 12, 50, 32, 467, DateTimeKind.Utc).AddTicks(2741)
                        },
                        new
                        {
                            UserId = new Guid("eb9c05e7-18bb-aaa9-8381-f229b4449443"),
                            CompanyId = new Guid("ff1d66b5-0328-033a-8da6-5bcc805718c8"),
                            CreatedDateTime = new DateTime(2024, 9, 13, 21, 57, 17, 529, DateTimeKind.Utc).AddTicks(8336),
                            Email = "Cade35@gmail.com",
                            FirstName = "Kane",
                            IsArchived = false,
                            LastName = "Murray",
                            ModifiedDateTime = new DateTime(2024, 9, 13, 12, 29, 42, 963, DateTimeKind.Utc).AddTicks(4958)
                        },
                        new
                        {
                            UserId = new Guid("b65fe502-94ed-645a-be8d-a50a3de95dd7"),
                            CompanyId = new Guid("58d6ac23-b9ba-53a2-4892-7f8b5d6e9896"),
                            CreatedDateTime = new DateTime(2024, 9, 14, 4, 22, 35, 105, DateTimeKind.Utc).AddTicks(8050),
                            Email = "Glennie69@hotmail.com",
                            FirstName = "Pink",
                            IsArchived = false,
                            LastName = "Cormier",
                            ModifiedDateTime = new DateTime(2024, 9, 13, 21, 53, 46, 930, DateTimeKind.Utc).AddTicks(9397)
                        },
                        new
                        {
                            UserId = new Guid("9cd2df81-92e8-5b6b-16c4-4acc945ece4f"),
                            CompanyId = new Guid("f26fcf2f-e7ed-59fb-861b-85c1f532c2c7"),
                            CreatedDateTime = new DateTime(2024, 9, 13, 13, 55, 27, 484, DateTimeKind.Utc).AddTicks(6657),
                            Email = "Anika_McClure83@gmail.com",
                            FirstName = "Ava",
                            IsArchived = false,
                            LastName = "Sanford",
                            ModifiedDateTime = new DateTime(2024, 9, 13, 23, 56, 54, 196, DateTimeKind.Utc).AddTicks(6513)
                        },
                        new
                        {
                            UserId = new Guid("07347aa6-8b58-1302-7b91-21a4139ee1d3"),
                            CompanyId = new Guid("f26fcf2f-e7ed-59fb-861b-85c1f532c2c7"),
                            CreatedDateTime = new DateTime(2024, 9, 13, 12, 12, 35, 881, DateTimeKind.Utc).AddTicks(4107),
                            Email = "Bernie18@yahoo.com",
                            FirstName = "Lafayette",
                            IsArchived = false,
                            LastName = "Wehner",
                            ModifiedDateTime = new DateTime(2024, 9, 14, 3, 35, 52, 522, DateTimeKind.Utc).AddTicks(9058)
                        },
                        new
                        {
                            UserId = new Guid("654ce664-930a-4a1b-c5e1-e1bdf140924b"),
                            CompanyId = new Guid("ff1d66b5-0328-033a-8da6-5bcc805718c8"),
                            CreatedDateTime = new DateTime(2024, 9, 14, 1, 13, 24, 872, DateTimeKind.Utc).AddTicks(5467),
                            Email = "Vance.Dach@gmail.com",
                            FirstName = "Haskell",
                            IsArchived = false,
                            LastName = "Towne",
                            ModifiedDateTime = new DateTime(2024, 9, 13, 19, 7, 1, 677, DateTimeKind.Utc).AddTicks(9948)
                        },
                        new
                        {
                            UserId = new Guid("9be31292-ede4-ef30-271b-c616878e89c8"),
                            CompanyId = new Guid("9825481b-9e16-8ef4-195c-2f1d50869c89"),
                            CreatedDateTime = new DateTime(2024, 9, 13, 16, 58, 2, 803, DateTimeKind.Utc).AddTicks(2534),
                            Email = "Kavon.Moen@yahoo.com",
                            FirstName = "Trinity",
                            IsArchived = false,
                            LastName = "Bartell",
                            ModifiedDateTime = new DateTime(2024, 9, 13, 18, 41, 23, 658, DateTimeKind.Utc).AddTicks(9811)
                        },
                        new
                        {
                            UserId = new Guid("3ddf74e3-ebc3-ce83-0009-6729fdf38d02"),
                            CompanyId = new Guid("2f08a644-f120-b99d-7a50-0e8ef1e502a2"),
                            CreatedDateTime = new DateTime(2024, 9, 13, 20, 37, 31, 641, DateTimeKind.Utc).AddTicks(684),
                            Email = "Griffin20@yahoo.com",
                            FirstName = "Nyasia",
                            IsArchived = false,
                            LastName = "Leffler",
                            ModifiedDateTime = new DateTime(2024, 9, 13, 5, 57, 23, 967, DateTimeKind.Utc).AddTicks(8699)
                        },
                        new
                        {
                            UserId = new Guid("5da0066e-cae9-0ce4-09bb-0fea58db92b9"),
                            CompanyId = new Guid("ff1d66b5-0328-033a-8da6-5bcc805718c8"),
                            CreatedDateTime = new DateTime(2024, 9, 13, 11, 34, 31, 696, DateTimeKind.Utc).AddTicks(9539),
                            Email = "Mikayla.Hayes@yahoo.com",
                            FirstName = "Raven",
                            IsArchived = false,
                            LastName = "Casper",
                            ModifiedDateTime = new DateTime(2024, 9, 13, 16, 33, 57, 819, DateTimeKind.Utc).AddTicks(4692)
                        },
                        new
                        {
                            UserId = new Guid("0da17a93-1d9a-a1ef-7c7d-2ea2209c44f1"),
                            CompanyId = new Guid("58d6ac23-b9ba-53a2-4892-7f8b5d6e9896"),
                            CreatedDateTime = new DateTime(2024, 9, 14, 2, 40, 37, 678, DateTimeKind.Utc).AddTicks(8238),
                            Email = "Madie.Purdy12@gmail.com",
                            FirstName = "Alejandra",
                            IsArchived = false,
                            LastName = "Stokes",
                            ModifiedDateTime = new DateTime(2024, 9, 13, 10, 15, 14, 894, DateTimeKind.Utc).AddTicks(703)
                        },
                        new
                        {
                            UserId = new Guid("b76f1f9d-4207-3736-6a6a-fb20f1fbb75f"),
                            CompanyId = new Guid("58d6ac23-b9ba-53a2-4892-7f8b5d6e9896"),
                            CreatedDateTime = new DateTime(2024, 9, 13, 12, 10, 29, 290, DateTimeKind.Utc).AddTicks(877),
                            Email = "Elisa_Pfannerstill@gmail.com",
                            FirstName = "Reymundo",
                            IsArchived = false,
                            LastName = "Barton",
                            ModifiedDateTime = new DateTime(2024, 9, 13, 18, 22, 27, 214, DateTimeKind.Utc).AddTicks(9911)
                        },
                        new
                        {
                            UserId = new Guid("cfea94ec-c524-bd41-5182-0cc52660e965"),
                            CompanyId = new Guid("f26fcf2f-e7ed-59fb-861b-85c1f532c2c7"),
                            CreatedDateTime = new DateTime(2024, 9, 13, 9, 29, 7, 596, DateTimeKind.Utc).AddTicks(5956),
                            Email = "Steve80@yahoo.com",
                            FirstName = "Dominic",
                            IsArchived = false,
                            LastName = "Armstrong",
                            ModifiedDateTime = new DateTime(2024, 9, 13, 10, 6, 50, 989, DateTimeKind.Utc).AddTicks(9529)
                        },
                        new
                        {
                            UserId = new Guid("319bfa5d-5b0d-613b-55a1-4c9a4536df33"),
                            CompanyId = new Guid("58d6ac23-b9ba-53a2-4892-7f8b5d6e9896"),
                            CreatedDateTime = new DateTime(2024, 9, 14, 3, 20, 7, 367, DateTimeKind.Utc).AddTicks(918),
                            Email = "Ardella83@gmail.com",
                            FirstName = "Winfield",
                            IsArchived = false,
                            LastName = "Ledner",
                            ModifiedDateTime = new DateTime(2024, 9, 13, 18, 13, 27, 933, DateTimeKind.Utc).AddTicks(735)
                        },
                        new
                        {
                            UserId = new Guid("b9a5cb26-a02d-3338-6846-221f74b18ac4"),
                            CompanyId = new Guid("9825481b-9e16-8ef4-195c-2f1d50869c89"),
                            CreatedDateTime = new DateTime(2024, 9, 13, 9, 44, 22, 409, DateTimeKind.Utc).AddTicks(1435),
                            Email = "Vinnie_Ziemann@gmail.com",
                            FirstName = "Tod",
                            IsArchived = false,
                            LastName = "Mosciski",
                            ModifiedDateTime = new DateTime(2024, 9, 14, 2, 58, 45, 188, DateTimeKind.Utc).AddTicks(8153)
                        },
                        new
                        {
                            UserId = new Guid("d38c48f7-3c84-81a0-3470-bc9c74ab6212"),
                            CompanyId = new Guid("f26fcf2f-e7ed-59fb-861b-85c1f532c2c7"),
                            CreatedDateTime = new DateTime(2024, 9, 13, 7, 38, 16, 16, DateTimeKind.Utc).AddTicks(9135),
                            Email = "Major.Jenkins@gmail.com",
                            FirstName = "Toney",
                            IsArchived = false,
                            LastName = "Towne",
                            ModifiedDateTime = new DateTime(2024, 9, 13, 9, 58, 36, 49, DateTimeKind.Utc).AddTicks(9837)
                        },
                        new
                        {
                            UserId = new Guid("6e495146-d8f9-fb30-a9f0-a694c1e67ff3"),
                            CompanyId = new Guid("9825481b-9e16-8ef4-195c-2f1d50869c89"),
                            CreatedDateTime = new DateTime(2024, 9, 13, 18, 15, 30, 534, DateTimeKind.Utc).AddTicks(1521),
                            Email = "Evelyn50@gmail.com",
                            FirstName = "Bailee",
                            IsArchived = false,
                            LastName = "Connelly",
                            ModifiedDateTime = new DateTime(2024, 9, 13, 7, 42, 50, 212, DateTimeKind.Utc).AddTicks(914)
                        },
                        new
                        {
                            UserId = new Guid("5671febb-ec84-5754-f64e-38c576e36b78"),
                            CompanyId = new Guid("f26fcf2f-e7ed-59fb-861b-85c1f532c2c7"),
                            CreatedDateTime = new DateTime(2024, 9, 14, 5, 36, 4, 937, DateTimeKind.Utc).AddTicks(9128),
                            Email = "Ezra76@yahoo.com",
                            FirstName = "Brad",
                            IsArchived = false,
                            LastName = "Greenholt",
                            ModifiedDateTime = new DateTime(2024, 9, 13, 11, 33, 20, 953, DateTimeKind.Utc).AddTicks(1758)
                        },
                        new
                        {
                            UserId = new Guid("d95a0f97-1a74-c084-1d31-89536bb9406a"),
                            CompanyId = new Guid("ff1d66b5-0328-033a-8da6-5bcc805718c8"),
                            CreatedDateTime = new DateTime(2024, 9, 13, 15, 37, 50, 387, DateTimeKind.Utc).AddTicks(2372),
                            Email = "Toney6@gmail.com",
                            FirstName = "Nestor",
                            IsArchived = false,
                            LastName = "Heaney",
                            ModifiedDateTime = new DateTime(2024, 9, 13, 14, 18, 0, 45, DateTimeKind.Utc).AddTicks(4050)
                        },
                        new
                        {
                            UserId = new Guid("9062b0c4-a4f3-db32-5544-fd1dd91e41b5"),
                            CompanyId = new Guid("2f08a644-f120-b99d-7a50-0e8ef1e502a2"),
                            CreatedDateTime = new DateTime(2024, 9, 14, 1, 31, 43, 209, DateTimeKind.Utc).AddTicks(7162),
                            Email = "Tyson_Gaylord@hotmail.com",
                            FirstName = "Kelsie",
                            IsArchived = false,
                            LastName = "Boyle",
                            ModifiedDateTime = new DateTime(2024, 9, 14, 5, 26, 44, 187, DateTimeKind.Utc).AddTicks(8755)
                        });
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.UserPermission", b =>
                {
                    b.Property<Guid>("UserPermissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("userpermissionid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<bool>("IsCrud")
                        .HasColumnType("boolean")
                        .HasColumnName("iscrud");

                    b.Property<int>("PermissionType")
                        .HasColumnType("integer")
                        .HasColumnName("permissiontype");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("userid");

                    b.HasKey("UserPermissionId")
                        .HasName("pk_userpermission");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_userpermission_userid");

                    b.ToTable("userpermission", (string)null);
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.UserPreference", b =>
                {
                    b.Property<Guid>("UserPreferenceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("userpreferenceid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<int>("PreferenceType")
                        .HasColumnType("integer")
                        .HasColumnName("preferencetype");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("userid");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("value");

                    b.HasKey("UserPreferenceId")
                        .HasName("pk_userpreference");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_userpreference_userid");

                    b.ToTable("userpreference", (string)null);
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.CompanyPermission", b =>
                {
                    b.HasOne("WMS_backend.Models.DBModels.Company", "Company")
                        .WithMany("CompanyPermissions")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_companypermission_company_companyid");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.Inventory", b =>
                {
                    b.HasOne("WMS_backend.Models.DBModels.Product", "Product")
                        .WithMany("Inventories")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_inventory_product_productid");

                    b.HasOne("WMS_backend.Models.DBModels.Rack", "Rack")
                        .WithMany("Inventories")
                        .HasForeignKey("RackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_inventory_rack_rackid");

                    b.HasOne("WMS_backend.Models.DBModels.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_inventory_user_userid");

                    b.Navigation("Product");

                    b.Navigation("Rack");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.Location", b =>
                {
                    b.HasOne("WMS_backend.Models.DBModels.Company", "Company")
                        .WithMany("Locations")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_location_company_companyid");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.Notification", b =>
                {
                    b.HasOne("WMS_backend.Models.DBModels.User", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_notification_user_userid");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.Product", b =>
                {
                    b.HasOne("WMS_backend.Models.DBModels.Supplier", "Supplier")
                        .WithMany("Products")
                        .HasForeignKey("SupplierId")
                        .HasConstraintName("fk_product_supplier_supplierid");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.PurchaseOrder", b =>
                {
                    b.HasOne("WMS_backend.Models.DBModels.Location", "Location")
                        .WithMany("PurchaseOrders")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_purchaseorder_location_locationid");

                    b.HasOne("WMS_backend.Models.DBModels.Supplier", "Supplier")
                        .WithMany("PurchaseOrders")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_purchaseorder_supplier_supplierid");

                    b.HasOne("WMS_backend.Models.DBModels.User", "User")
                        .WithMany("PurchaseOrders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_purchaseorder_user_userid");

                    b.Navigation("Location");

                    b.Navigation("Supplier");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.PurchaseOrderItem", b =>
                {
                    b.HasOne("WMS_backend.Models.DBModels.Product", "Product")
                        .WithMany("PurchaseOrderItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_purchaseorderitem_product_productid");

                    b.HasOne("WMS_backend.Models.DBModels.PurchaseOrder", "PurchaseOrder")
                        .WithMany("PurchaseOrderItems")
                        .HasForeignKey("PurchaseOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_purchaseorderitem_purchaseorder_purchaseorderid");

                    b.Navigation("Product");

                    b.Navigation("PurchaseOrder");
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.PurchaseRequest", b =>
                {
                    b.HasOne("WMS_backend.Models.DBModels.Team", "Team")
                        .WithMany("PurchaseRequests")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_purchaserequest_team_teamid");

                    b.HasOne("WMS_backend.Models.DBModels.User", "User")
                        .WithMany("PurchaseRequests")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_purchaserequest_user_userid");

                    b.Navigation("Team");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.Rack", b =>
                {
                    b.HasOne("WMS_backend.Models.DBModels.Location", "Location")
                        .WithMany("Racks")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_rack_location_locationid");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.Supplier", b =>
                {
                    b.HasOne("WMS_backend.Models.DBModels.Company", "Company")
                        .WithMany("Suppliers")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_supplier_company_companyid");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.Team", b =>
                {
                    b.HasOne("WMS_backend.Models.DBModels.Company", "Company")
                        .WithMany("Teams")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_team_company_companyid");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.TeamUser", b =>
                {
                    b.HasOne("WMS_backend.Models.DBModels.Team", "Team")
                        .WithMany("TeamUsers")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_teamuser_team_teamid");

                    b.HasOne("WMS_backend.Models.DBModels.User", "User")
                        .WithMany("TeamUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_teamuser_user_userid");

                    b.Navigation("Team");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.Tote", b =>
                {
                    b.HasOne("WMS_backend.Models.DBModels.Location", "Location")
                        .WithMany("Totes")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_tote_location_locationid");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.User", b =>
                {
                    b.HasOne("WMS_backend.Models.DBModels.Company", "Company")
                        .WithMany("Users")
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_user_company_companyid");

                    b.HasOne("WMS_backend.Models.DBModels.User", "ModifiedUser")
                        .WithMany()
                        .HasForeignKey("ModifiedUserId")
                        .HasConstraintName("fk_user_user_modifieduserid");

                    b.Navigation("Company");

                    b.Navigation("ModifiedUser");
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.UserPermission", b =>
                {
                    b.HasOne("WMS_backend.Models.DBModels.User", "User")
                        .WithMany("UserPermissions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_userpermission_user_userid");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.UserPreference", b =>
                {
                    b.HasOne("WMS_backend.Models.DBModels.User", "User")
                        .WithMany("UserPreferences")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_userpreference_user_userid");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.Company", b =>
                {
                    b.Navigation("CompanyPermissions");

                    b.Navigation("Locations");

                    b.Navigation("Suppliers");

                    b.Navigation("Teams");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.Location", b =>
                {
                    b.Navigation("PurchaseOrders");

                    b.Navigation("Racks");

                    b.Navigation("Totes");
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.Product", b =>
                {
                    b.Navigation("Inventories");

                    b.Navigation("PurchaseOrderItems");
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.PurchaseOrder", b =>
                {
                    b.Navigation("PurchaseOrderItems");
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.Rack", b =>
                {
                    b.Navigation("Inventories");
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.Supplier", b =>
                {
                    b.Navigation("Products");

                    b.Navigation("PurchaseOrders");
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.Team", b =>
                {
                    b.Navigation("PurchaseRequests");

                    b.Navigation("TeamUsers");
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.User", b =>
                {
                    b.Navigation("Notifications");

                    b.Navigation("PurchaseOrders");

                    b.Navigation("PurchaseRequests");

                    b.Navigation("TeamUsers");

                    b.Navigation("UserPermissions");

                    b.Navigation("UserPreferences");
                });
#pragma warning restore 612, 618
        }
    }
}
