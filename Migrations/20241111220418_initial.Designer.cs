// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Taxi_Backend.Data;

#nullable disable

namespace Taxi_Backend.Migrations
{
    [DbContext(typeof(TaxiDBContext))]
    [Migration("20241111220418_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "uuid-ossp");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<long>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("claimtype");

                    b.Property<string>("ClaimValue")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("claimvalue");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint")
                        .HasColumnName("roleid");

                    b.HasKey("Id")
                        .HasName("pk_aspnetroleclaims");

                    b.HasIndex("RoleId")
                        .HasDatabaseName("ix_aspnetroleclaims_roleid");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<long>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("claimtype");

                    b.Property<string>("ClaimValue")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("claimvalue");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("userid");

                    b.HasKey("Id")
                        .HasName("pk_aspnetuserclaims");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_aspnetuserclaims_userid");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<long>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("loginprovider");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("providerkey");

                    b.Property<string>("ProviderDisplayName")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("providerdisplayname");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("userid");

                    b.HasKey("LoginProvider", "ProviderKey")
                        .HasName("pk_aspnetuserlogins");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_aspnetuserlogins_userid");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<long>", b =>
                {
                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("userid");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("loginprovider");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("name");

                    b.Property<string>("Value")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("value");

                    b.HasKey("UserId", "LoginProvider", "Name")
                        .HasName("pk_aspnetusertokens");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Taxi_Backend.Models.DBModels.AppRole", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("concurrencystamp");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("name");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("normalizedname");

                    b.HasKey("Id")
                        .HasName("pk_aspnetroles");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "DRIVER"
                        },
                        new
                        {
                            Id = 2L,
                            Name = "CUSTOMER"
                        },
                        new
                        {
                            Id = 3L,
                            Name = "COMPANY"
                        },
                        new
                        {
                            Id = 4L,
                            Name = "DISPATCHER"
                        });
                });

            modelBuilder.Entity("Taxi_Backend.Models.DBModels.AppUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer")
                        .HasColumnName("accessfailedcount");

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint")
                        .HasColumnName("companyid");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("concurrencystamp");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("createddatetime");

                    b.Property<long?>("CreatedUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("createduserid");

                    b.Property<string>("DriverNumber")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("drivernumber");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("email");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean")
                        .HasColumnName("emailconfirmed");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("firstname");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("boolean")
                        .HasColumnName("isarchived");

                    b.Property<DateTime?>("LastLoginDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("lastlogindatetime");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("lastname");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean")
                        .HasColumnName("lockoutenabled");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("lockoutend");

                    b.Property<DateTime>("ModifiedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("modifieddatetime");

                    b.Property<long?>("ModifiedUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("modifieduserid");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("normalizedemail");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("normalizedusername");

                    b.Property<string>("PasswordHash")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("passwordhash");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("phonenumber");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean")
                        .HasColumnName("phonenumberconfirmed");

                    b.Property<string>("SecurityStamp")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("securitystamp");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean")
                        .HasColumnName("twofactorenabled");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("username");

                    b.HasKey("Id")
                        .HasName("pk_aspnetusers");

                    b.HasIndex("CompanyId")
                        .HasDatabaseName("ix_aspnetusers_companyid");

                    b.HasIndex("CreatedUserId")
                        .HasDatabaseName("ix_aspnetusers_createduserid");

                    b.HasIndex("ModifiedUserId")
                        .HasDatabaseName("ix_aspnetusers_modifieduserid");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 100L,
                            AccessFailedCount = 0,
                            CompanyId = 100L,
                            ConcurrencyStamp = "620a1f82-fad7-4f90-bb6c-3bab806c77da",
                            CreatedDateTime = new DateTime(2024, 11, 11, 2, 27, 26, 97, DateTimeKind.Utc).AddTicks(9631),
                            Email = "Delmer22@yahoo.com",
                            EmailConfirmed = false,
                            FirstName = "German",
                            IsArchived = false,
                            LastName = "O'Kon",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 11, 9, 1, 47, 249, DateTimeKind.Utc).AddTicks(2217),
                            NormalizedEmail = "DELMER22@YAHOO.COM",
                            NormalizedUserName = "DELMER22@YAHOO.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Delmer22@yahoo.com"
                        },
                        new
                        {
                            Id = 101L,
                            AccessFailedCount = 0,
                            CompanyId = 101L,
                            ConcurrencyStamp = "a4b7f3ee-8e82-42eb-9183-74d3211b8a61",
                            CreatedDateTime = new DateTime(2024, 11, 11, 10, 3, 32, 176, DateTimeKind.Utc).AddTicks(8042),
                            Email = "Kendall38@yahoo.com",
                            EmailConfirmed = false,
                            FirstName = "Beverly",
                            IsArchived = true,
                            LastName = "Auer",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 11, 9, 31, 53, 137, DateTimeKind.Utc).AddTicks(5775),
                            NormalizedEmail = "KENDALL38@YAHOO.COM",
                            NormalizedUserName = "KENDALL38@YAHOO.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Kendall38@yahoo.com"
                        },
                        new
                        {
                            Id = 102L,
                            AccessFailedCount = 0,
                            CompanyId = 100L,
                            ConcurrencyStamp = "8890b6c9-d19b-4b3f-8857-b305aa0817a2",
                            CreatedDateTime = new DateTime(2024, 11, 10, 22, 54, 46, 703, DateTimeKind.Utc).AddTicks(9911),
                            Email = "Cassidy0@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Monserrat",
                            IsArchived = true,
                            LastName = "Stamm",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 11, 0, 13, 14, 894, DateTimeKind.Utc).AddTicks(8713),
                            NormalizedEmail = "CASSIDY0@GMAIL.COM",
                            NormalizedUserName = "CASSIDY0@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Cassidy0@gmail.com"
                        },
                        new
                        {
                            Id = 103L,
                            AccessFailedCount = 0,
                            CompanyId = 100L,
                            ConcurrencyStamp = "c5eaa206-8b09-435b-af34-f868c029937d",
                            CreatedDateTime = new DateTime(2024, 11, 11, 18, 49, 38, 879, DateTimeKind.Utc).AddTicks(4412),
                            Email = "Janie68@yahoo.com",
                            EmailConfirmed = false,
                            FirstName = "Jacinthe",
                            IsArchived = true,
                            LastName = "Murazik",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 11, 5, 13, 0, 945, DateTimeKind.Utc).AddTicks(7895),
                            NormalizedEmail = "JANIE68@YAHOO.COM",
                            NormalizedUserName = "JANIE68@YAHOO.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Janie68@yahoo.com"
                        },
                        new
                        {
                            Id = 104L,
                            AccessFailedCount = 0,
                            CompanyId = 101L,
                            ConcurrencyStamp = "8e4f134a-5ea7-4899-9c3b-1c3fb36d0a4f",
                            CreatedDateTime = new DateTime(2024, 11, 11, 9, 44, 25, 25, DateTimeKind.Utc).AddTicks(4093),
                            Email = "Lupe44@hotmail.com",
                            EmailConfirmed = false,
                            FirstName = "Abdiel",
                            IsArchived = true,
                            LastName = "Cronin",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 11, 9, 37, 42, 689, DateTimeKind.Utc).AddTicks(5510),
                            NormalizedEmail = "LUPE44@HOTMAIL.COM",
                            NormalizedUserName = "LUPE44@HOTMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Lupe44@hotmail.com"
                        },
                        new
                        {
                            Id = 105L,
                            AccessFailedCount = 0,
                            CompanyId = 101L,
                            ConcurrencyStamp = "c394cd4d-7a8d-4fbf-9aca-594146cd3acd",
                            CreatedDateTime = new DateTime(2024, 11, 11, 8, 11, 18, 762, DateTimeKind.Utc).AddTicks(929),
                            Email = "Andreane_Jaskolski38@hotmail.com",
                            EmailConfirmed = false,
                            FirstName = "Titus",
                            IsArchived = false,
                            LastName = "Wisozk",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 10, 22, 37, 24, 416, DateTimeKind.Utc).AddTicks(3624),
                            NormalizedEmail = "ANDREANE_JASKOLSKI38@HOTMAIL.COM",
                            NormalizedUserName = "ANDREANE_JASKOLSKI38@HOTMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Andreane_Jaskolski38@hotmail.com"
                        },
                        new
                        {
                            Id = 106L,
                            AccessFailedCount = 0,
                            CompanyId = 101L,
                            ConcurrencyStamp = "fdeab8bb-d038-42c4-a174-bbf5570eaafd",
                            CreatedDateTime = new DateTime(2024, 11, 11, 12, 46, 32, 474, DateTimeKind.Utc).AddTicks(9075),
                            Email = "Jaden42@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Kelvin",
                            IsArchived = false,
                            LastName = "Swift",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 11, 4, 52, 56, 844, DateTimeKind.Utc).AddTicks(1503),
                            NormalizedEmail = "JADEN42@GMAIL.COM",
                            NormalizedUserName = "JADEN42@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Jaden42@gmail.com"
                        },
                        new
                        {
                            Id = 107L,
                            AccessFailedCount = 0,
                            CompanyId = 101L,
                            ConcurrencyStamp = "e5130553-619d-4c33-a802-640b46b10637",
                            CreatedDateTime = new DateTime(2024, 11, 11, 5, 44, 42, 218, DateTimeKind.Utc).AddTicks(589),
                            Email = "Lula.Lueilwitz84@yahoo.com",
                            EmailConfirmed = false,
                            FirstName = "Quincy",
                            IsArchived = true,
                            LastName = "Hyatt",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 11, 14, 9, 46, 796, DateTimeKind.Utc).AddTicks(6891),
                            NormalizedEmail = "LULA.LUEILWITZ84@YAHOO.COM",
                            NormalizedUserName = "LULA.LUEILWITZ84@YAHOO.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Lula.Lueilwitz84@yahoo.com"
                        },
                        new
                        {
                            Id = 108L,
                            AccessFailedCount = 0,
                            CompanyId = 101L,
                            ConcurrencyStamp = "2a1a840b-0860-45d1-a360-ed0b04ddfa53",
                            CreatedDateTime = new DateTime(2024, 11, 11, 9, 56, 56, 920, DateTimeKind.Utc).AddTicks(507),
                            Email = "Rosalyn.Schroeder@yahoo.com",
                            EmailConfirmed = false,
                            FirstName = "Cooper",
                            IsArchived = false,
                            LastName = "Reynolds",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 11, 12, 8, 36, 210, DateTimeKind.Utc).AddTicks(7028),
                            NormalizedEmail = "ROSALYN.SCHROEDER@YAHOO.COM",
                            NormalizedUserName = "ROSALYN.SCHROEDER@YAHOO.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Rosalyn.Schroeder@yahoo.com"
                        },
                        new
                        {
                            Id = 109L,
                            AccessFailedCount = 0,
                            CompanyId = 100L,
                            ConcurrencyStamp = "8dd04d2c-63f5-474b-b2b4-3cd7593c3ace",
                            CreatedDateTime = new DateTime(2024, 11, 11, 16, 55, 10, 633, DateTimeKind.Utc).AddTicks(420),
                            Email = "Pierre_Metz95@yahoo.com",
                            EmailConfirmed = false,
                            FirstName = "Luigi",
                            IsArchived = true,
                            LastName = "Quitzon",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 11, 0, 28, 30, 385, DateTimeKind.Utc).AddTicks(1399),
                            NormalizedEmail = "PIERRE_METZ95@YAHOO.COM",
                            NormalizedUserName = "PIERRE_METZ95@YAHOO.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Pierre_Metz95@yahoo.com"
                        },
                        new
                        {
                            Id = 110L,
                            AccessFailedCount = 0,
                            CompanyId = 101L,
                            ConcurrencyStamp = "199d4e4b-8006-4f27-987e-e1a7c06dfe10",
                            CreatedDateTime = new DateTime(2024, 11, 11, 18, 48, 2, 549, DateTimeKind.Utc).AddTicks(5675),
                            Email = "Icie.Nitzsche@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Omer",
                            IsArchived = false,
                            LastName = "McClure",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 11, 6, 24, 46, 5, DateTimeKind.Utc).AddTicks(3214),
                            NormalizedEmail = "ICIE.NITZSCHE@GMAIL.COM",
                            NormalizedUserName = "ICIE.NITZSCHE@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Icie.Nitzsche@gmail.com"
                        },
                        new
                        {
                            Id = 111L,
                            AccessFailedCount = 0,
                            CompanyId = 101L,
                            ConcurrencyStamp = "5adc25c7-3c2c-4e8b-bcbb-fe2cfb9b8bd5",
                            CreatedDateTime = new DateTime(2024, 11, 11, 15, 38, 37, 449, DateTimeKind.Utc).AddTicks(4362),
                            Email = "Edna63@yahoo.com",
                            EmailConfirmed = false,
                            FirstName = "Chet",
                            IsArchived = true,
                            LastName = "Wyman",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 11, 12, 49, 54, 353, DateTimeKind.Utc).AddTicks(1833),
                            NormalizedEmail = "EDNA63@YAHOO.COM",
                            NormalizedUserName = "EDNA63@YAHOO.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Edna63@yahoo.com"
                        },
                        new
                        {
                            Id = 112L,
                            AccessFailedCount = 0,
                            CompanyId = 101L,
                            ConcurrencyStamp = "10d7c724-1ce7-491d-8090-9a475fb5388b",
                            CreatedDateTime = new DateTime(2024, 11, 11, 15, 53, 47, 233, DateTimeKind.Utc).AddTicks(2019),
                            Email = "Tyrique.Pfannerstill44@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Alfreda",
                            IsArchived = true,
                            LastName = "Mraz",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 11, 0, 30, 42, 459, DateTimeKind.Utc).AddTicks(7581),
                            NormalizedEmail = "TYRIQUE.PFANNERSTILL44@GMAIL.COM",
                            NormalizedUserName = "TYRIQUE.PFANNERSTILL44@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Tyrique.Pfannerstill44@gmail.com"
                        },
                        new
                        {
                            Id = 113L,
                            AccessFailedCount = 0,
                            CompanyId = 100L,
                            ConcurrencyStamp = "f5b01752-be9f-4c8e-a5c8-c971b0911b82",
                            CreatedDateTime = new DateTime(2024, 11, 11, 2, 16, 30, 840, DateTimeKind.Utc).AddTicks(6600),
                            Email = "Albert_Mills@yahoo.com",
                            EmailConfirmed = false,
                            FirstName = "Mortimer",
                            IsArchived = false,
                            LastName = "Skiles",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 11, 21, 47, 12, 949, DateTimeKind.Utc).AddTicks(1751),
                            NormalizedEmail = "ALBERT_MILLS@YAHOO.COM",
                            NormalizedUserName = "ALBERT_MILLS@YAHOO.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Albert_Mills@yahoo.com"
                        },
                        new
                        {
                            Id = 114L,
                            AccessFailedCount = 0,
                            CompanyId = 100L,
                            ConcurrencyStamp = "e1349b7e-c8a3-40b9-a40f-4ff5329d01d9",
                            CreatedDateTime = new DateTime(2024, 11, 11, 1, 4, 8, 275, DateTimeKind.Utc).AddTicks(829),
                            Email = "Kristopher.Buckridge52@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Daren",
                            IsArchived = true,
                            LastName = "Murray",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 11, 7, 53, 11, 258, DateTimeKind.Utc).AddTicks(8903),
                            NormalizedEmail = "KRISTOPHER.BUCKRIDGE52@GMAIL.COM",
                            NormalizedUserName = "KRISTOPHER.BUCKRIDGE52@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Kristopher.Buckridge52@gmail.com"
                        },
                        new
                        {
                            Id = 115L,
                            AccessFailedCount = 0,
                            CompanyId = 100L,
                            ConcurrencyStamp = "49a2d45f-2fb9-4848-a182-7b49b60fdbf2",
                            CreatedDateTime = new DateTime(2024, 11, 11, 3, 46, 29, 248, DateTimeKind.Utc).AddTicks(5695),
                            Email = "Vicenta.Corwin9@hotmail.com",
                            EmailConfirmed = false,
                            FirstName = "Alexandria",
                            IsArchived = true,
                            LastName = "Kemmer",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 11, 15, 23, 8, 767, DateTimeKind.Utc).AddTicks(4307),
                            NormalizedEmail = "VICENTA.CORWIN9@HOTMAIL.COM",
                            NormalizedUserName = "VICENTA.CORWIN9@HOTMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Vicenta.Corwin9@hotmail.com"
                        },
                        new
                        {
                            Id = 116L,
                            AccessFailedCount = 0,
                            CompanyId = 101L,
                            ConcurrencyStamp = "492a2241-a086-485a-b302-0786c55e2482",
                            CreatedDateTime = new DateTime(2024, 11, 10, 22, 48, 30, 538, DateTimeKind.Utc).AddTicks(3789),
                            Email = "Alexane_Mraz@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Katlyn",
                            IsArchived = false,
                            LastName = "Mills",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 11, 17, 4, 57, 630, DateTimeKind.Utc).AddTicks(2997),
                            NormalizedEmail = "ALEXANE_MRAZ@GMAIL.COM",
                            NormalizedUserName = "ALEXANE_MRAZ@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Alexane_Mraz@gmail.com"
                        },
                        new
                        {
                            Id = 117L,
                            AccessFailedCount = 0,
                            CompanyId = 101L,
                            ConcurrencyStamp = "fb3655f7-13bb-44d0-a8de-41c4c4c3917a",
                            CreatedDateTime = new DateTime(2024, 11, 11, 15, 20, 51, 549, DateTimeKind.Utc).AddTicks(318),
                            Email = "Verdie9@yahoo.com",
                            EmailConfirmed = false,
                            FirstName = "Alejandra",
                            IsArchived = true,
                            LastName = "Gleason",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 11, 16, 24, 56, 886, DateTimeKind.Utc).AddTicks(5754),
                            NormalizedEmail = "VERDIE9@YAHOO.COM",
                            NormalizedUserName = "VERDIE9@YAHOO.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Verdie9@yahoo.com"
                        },
                        new
                        {
                            Id = 118L,
                            AccessFailedCount = 0,
                            CompanyId = 100L,
                            ConcurrencyStamp = "013e1b9b-ca47-473a-80c9-420efa30966d",
                            CreatedDateTime = new DateTime(2024, 11, 11, 12, 34, 29, 742, DateTimeKind.Utc).AddTicks(6645),
                            Email = "Layla69@hotmail.com",
                            EmailConfirmed = false,
                            FirstName = "Modesto",
                            IsArchived = false,
                            LastName = "Wuckert",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 11, 13, 3, 50, 954, DateTimeKind.Utc).AddTicks(341),
                            NormalizedEmail = "LAYLA69@HOTMAIL.COM",
                            NormalizedUserName = "LAYLA69@HOTMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Layla69@hotmail.com"
                        },
                        new
                        {
                            Id = 119L,
                            AccessFailedCount = 0,
                            CompanyId = 100L,
                            ConcurrencyStamp = "83820e0d-8e07-49dd-be79-14a76ef88ca8",
                            CreatedDateTime = new DateTime(2024, 11, 11, 15, 15, 34, 888, DateTimeKind.Utc).AddTicks(1169),
                            Email = "Oleta_Wolff9@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Enos",
                            IsArchived = false,
                            LastName = "Yundt",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 11, 17, 22, 6, 539, DateTimeKind.Utc).AddTicks(6007),
                            NormalizedEmail = "OLETA_WOLFF9@GMAIL.COM",
                            NormalizedUserName = "OLETA_WOLFF9@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Oleta_Wolff9@gmail.com"
                        },
                        new
                        {
                            Id = 120L,
                            AccessFailedCount = 0,
                            CompanyId = 100L,
                            ConcurrencyStamp = "74429e97-f7de-456f-b97a-bcd3656f849c",
                            CreatedDateTime = new DateTime(2024, 11, 10, 22, 6, 35, 435, DateTimeKind.Utc).AddTicks(2417),
                            Email = "Nedra93@hotmail.com",
                            EmailConfirmed = false,
                            FirstName = "Gunnar",
                            IsArchived = false,
                            LastName = "Kunze",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 11, 16, 40, 31, 39, DateTimeKind.Utc).AddTicks(2791),
                            NormalizedEmail = "NEDRA93@HOTMAIL.COM",
                            NormalizedUserName = "NEDRA93@HOTMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Nedra93@hotmail.com"
                        },
                        new
                        {
                            Id = 121L,
                            AccessFailedCount = 0,
                            CompanyId = 100L,
                            ConcurrencyStamp = "c9c5b133-3e01-4260-8799-a77193cf9005",
                            CreatedDateTime = new DateTime(2024, 11, 11, 2, 34, 46, 104, DateTimeKind.Utc).AddTicks(4857),
                            Email = "Akeem_Walsh@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Serenity",
                            IsArchived = false,
                            LastName = "Yundt",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 11, 11, 41, 19, 430, DateTimeKind.Utc).AddTicks(5513),
                            NormalizedEmail = "AKEEM_WALSH@GMAIL.COM",
                            NormalizedUserName = "AKEEM_WALSH@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Akeem_Walsh@gmail.com"
                        },
                        new
                        {
                            Id = 122L,
                            AccessFailedCount = 0,
                            CompanyId = 100L,
                            ConcurrencyStamp = "b9bb585b-e4aa-4860-82f2-36314b1535ad",
                            CreatedDateTime = new DateTime(2024, 11, 11, 16, 8, 45, 888, DateTimeKind.Utc).AddTicks(7284),
                            Email = "Rex17@hotmail.com",
                            EmailConfirmed = false,
                            FirstName = "Cedrick",
                            IsArchived = true,
                            LastName = "Will",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 11, 21, 8, 27, 434, DateTimeKind.Utc).AddTicks(3344),
                            NormalizedEmail = "REX17@HOTMAIL.COM",
                            NormalizedUserName = "REX17@HOTMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Rex17@hotmail.com"
                        },
                        new
                        {
                            Id = 123L,
                            AccessFailedCount = 0,
                            CompanyId = 100L,
                            ConcurrencyStamp = "4299043d-6c2d-4eb3-90a8-4ac7f97d03ba",
                            CreatedDateTime = new DateTime(2024, 11, 11, 0, 58, 11, 229, DateTimeKind.Utc).AddTicks(5469),
                            Email = "Matilda65@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Alize",
                            IsArchived = false,
                            LastName = "Zboncak",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 11, 0, 49, 19, 403, DateTimeKind.Utc).AddTicks(2623),
                            NormalizedEmail = "MATILDA65@GMAIL.COM",
                            NormalizedUserName = "MATILDA65@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Matilda65@gmail.com"
                        },
                        new
                        {
                            Id = 124L,
                            AccessFailedCount = 0,
                            CompanyId = 100L,
                            ConcurrencyStamp = "7cbc6a41-e2ca-4e90-9d3b-625a124b39ee",
                            CreatedDateTime = new DateTime(2024, 11, 11, 12, 51, 38, 651, DateTimeKind.Utc).AddTicks(9782),
                            Email = "Rowena_Torphy47@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Berry",
                            IsArchived = false,
                            LastName = "Grimes",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 11, 11, 9, 49, 749, DateTimeKind.Utc).AddTicks(1622),
                            NormalizedEmail = "ROWENA_TORPHY47@GMAIL.COM",
                            NormalizedUserName = "ROWENA_TORPHY47@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Rowena_Torphy47@gmail.com"
                        },
                        new
                        {
                            Id = 125L,
                            AccessFailedCount = 0,
                            CompanyId = 101L,
                            ConcurrencyStamp = "032590ef-2393-4da3-afcb-daa0a1d57773",
                            CreatedDateTime = new DateTime(2024, 11, 11, 5, 45, 9, 479, DateTimeKind.Utc).AddTicks(2048),
                            Email = "Merl.Balistreri32@hotmail.com",
                            EmailConfirmed = false,
                            FirstName = "Allene",
                            IsArchived = true,
                            LastName = "Wolff",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 11, 21, 14, 40, 369, DateTimeKind.Utc).AddTicks(9274),
                            NormalizedEmail = "MERL.BALISTRERI32@HOTMAIL.COM",
                            NormalizedUserName = "MERL.BALISTRERI32@HOTMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Merl.Balistreri32@hotmail.com"
                        },
                        new
                        {
                            Id = 126L,
                            AccessFailedCount = 0,
                            CompanyId = 101L,
                            ConcurrencyStamp = "0b165696-7d2a-42aa-a6ee-50529ccfe913",
                            CreatedDateTime = new DateTime(2024, 11, 11, 3, 57, 6, 553, DateTimeKind.Utc).AddTicks(9604),
                            Email = "Danielle94@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Reilly",
                            IsArchived = false,
                            LastName = "Lueilwitz",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 11, 13, 11, 16, 179, DateTimeKind.Utc).AddTicks(600),
                            NormalizedEmail = "DANIELLE94@GMAIL.COM",
                            NormalizedUserName = "DANIELLE94@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Danielle94@gmail.com"
                        },
                        new
                        {
                            Id = 127L,
                            AccessFailedCount = 0,
                            CompanyId = 100L,
                            ConcurrencyStamp = "72e890a3-c201-468f-a8be-8949ea3f2a94",
                            CreatedDateTime = new DateTime(2024, 11, 11, 21, 7, 2, 259, DateTimeKind.Utc).AddTicks(1648),
                            Email = "Elinore.Franecki@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Brice",
                            IsArchived = true,
                            LastName = "Rodriguez",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 11, 8, 32, 17, 509, DateTimeKind.Utc).AddTicks(9206),
                            NormalizedEmail = "ELINORE.FRANECKI@GMAIL.COM",
                            NormalizedUserName = "ELINORE.FRANECKI@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Elinore.Franecki@gmail.com"
                        },
                        new
                        {
                            Id = 128L,
                            AccessFailedCount = 0,
                            CompanyId = 101L,
                            ConcurrencyStamp = "b0f3308a-dd4d-44b2-93c2-4313283a6e1a",
                            CreatedDateTime = new DateTime(2024, 11, 10, 23, 59, 38, 686, DateTimeKind.Utc).AddTicks(8492),
                            Email = "Ivah76@yahoo.com",
                            EmailConfirmed = false,
                            FirstName = "Kaycee",
                            IsArchived = true,
                            LastName = "Sporer",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 11, 5, 50, 46, 911, DateTimeKind.Utc).AddTicks(7513),
                            NormalizedEmail = "IVAH76@YAHOO.COM",
                            NormalizedUserName = "IVAH76@YAHOO.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Ivah76@yahoo.com"
                        },
                        new
                        {
                            Id = 129L,
                            AccessFailedCount = 0,
                            CompanyId = 100L,
                            ConcurrencyStamp = "f0f6e680-1af9-4cd9-8e0b-254290718105",
                            CreatedDateTime = new DateTime(2024, 11, 11, 21, 6, 50, 931, DateTimeKind.Utc).AddTicks(9797),
                            Email = "Mavis_Hessel34@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Kelly",
                            IsArchived = true,
                            LastName = "Turcotte",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 11, 19, 7, 4, 601, DateTimeKind.Utc).AddTicks(3318),
                            NormalizedEmail = "MAVIS_HESSEL34@GMAIL.COM",
                            NormalizedUserName = "MAVIS_HESSEL34@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Mavis_Hessel34@gmail.com"
                        },
                        new
                        {
                            Id = 130L,
                            AccessFailedCount = 0,
                            CompanyId = 101L,
                            ConcurrencyStamp = "33a8bb4a-453f-4808-b74e-2db2a1732576",
                            CreatedDateTime = new DateTime(2024, 11, 11, 8, 59, 37, 668, DateTimeKind.Utc).AddTicks(2104),
                            Email = "Jace_Wyman84@hotmail.com",
                            EmailConfirmed = false,
                            FirstName = "Tre",
                            IsArchived = true,
                            LastName = "Ziemann",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 11, 10, 26, 4, 268, DateTimeKind.Utc).AddTicks(7671),
                            NormalizedEmail = "JACE_WYMAN84@HOTMAIL.COM",
                            NormalizedUserName = "JACE_WYMAN84@HOTMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Jace_Wyman84@hotmail.com"
                        },
                        new
                        {
                            Id = 131L,
                            AccessFailedCount = 0,
                            CompanyId = 100L,
                            ConcurrencyStamp = "f3f23f31-bacc-4106-bdcb-060794a0182c",
                            CreatedDateTime = new DateTime(2024, 11, 11, 1, 42, 42, 518, DateTimeKind.Utc).AddTicks(9441),
                            Email = "Leanna99@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Tamia",
                            IsArchived = true,
                            LastName = "Kirlin",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 11, 16, 29, 29, 340, DateTimeKind.Utc).AddTicks(3705),
                            NormalizedEmail = "LEANNA99@GMAIL.COM",
                            NormalizedUserName = "LEANNA99@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Leanna99@gmail.com"
                        },
                        new
                        {
                            Id = 132L,
                            AccessFailedCount = 0,
                            CompanyId = 100L,
                            ConcurrencyStamp = "3bfb098c-638c-4baf-9b0b-2e90c4ce5be7",
                            CreatedDateTime = new DateTime(2024, 11, 11, 14, 8, 25, 476, DateTimeKind.Utc).AddTicks(7266),
                            Email = "Damon39@yahoo.com",
                            EmailConfirmed = false,
                            FirstName = "Jasmin",
                            IsArchived = true,
                            LastName = "Ondricka",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 11, 20, 14, 3, 398, DateTimeKind.Utc).AddTicks(5010),
                            NormalizedEmail = "DAMON39@YAHOO.COM",
                            NormalizedUserName = "DAMON39@YAHOO.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Damon39@yahoo.com"
                        },
                        new
                        {
                            Id = 133L,
                            AccessFailedCount = 0,
                            CompanyId = 101L,
                            ConcurrencyStamp = "9cd9a270-c3d2-4b5c-96b4-6fd1a0661959",
                            CreatedDateTime = new DateTime(2024, 11, 11, 17, 20, 40, 279, DateTimeKind.Utc).AddTicks(2286),
                            Email = "Robert.Sanford7@hotmail.com",
                            EmailConfirmed = false,
                            FirstName = "Nakia",
                            IsArchived = false,
                            LastName = "Graham",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 11, 8, 57, 56, 368, DateTimeKind.Utc).AddTicks(2730),
                            NormalizedEmail = "ROBERT.SANFORD7@HOTMAIL.COM",
                            NormalizedUserName = "ROBERT.SANFORD7@HOTMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Robert.Sanford7@hotmail.com"
                        },
                        new
                        {
                            Id = 134L,
                            AccessFailedCount = 0,
                            CompanyId = 100L,
                            ConcurrencyStamp = "3c51d28d-5836-4d36-9660-9b27d67d9f8d",
                            CreatedDateTime = new DateTime(2024, 11, 11, 10, 12, 26, 668, DateTimeKind.Utc).AddTicks(3940),
                            Email = "Easton_Pfannerstill@yahoo.com",
                            EmailConfirmed = false,
                            FirstName = "Brant",
                            IsArchived = true,
                            LastName = "Pacocha",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 10, 22, 51, 43, 861, DateTimeKind.Utc).AddTicks(4637),
                            NormalizedEmail = "EASTON_PFANNERSTILL@YAHOO.COM",
                            NormalizedUserName = "EASTON_PFANNERSTILL@YAHOO.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Easton_Pfannerstill@yahoo.com"
                        },
                        new
                        {
                            Id = 135L,
                            AccessFailedCount = 0,
                            CompanyId = 101L,
                            ConcurrencyStamp = "99f207f9-5328-4872-aafe-f17bf0a564fa",
                            CreatedDateTime = new DateTime(2024, 11, 11, 18, 21, 57, 8, DateTimeKind.Utc).AddTicks(9674),
                            Email = "Josephine_Stark@yahoo.com",
                            EmailConfirmed = false,
                            FirstName = "Josefina",
                            IsArchived = false,
                            LastName = "Tillman",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 10, 23, 9, 10, 831, DateTimeKind.Utc).AddTicks(7729),
                            NormalizedEmail = "JOSEPHINE_STARK@YAHOO.COM",
                            NormalizedUserName = "JOSEPHINE_STARK@YAHOO.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Josephine_Stark@yahoo.com"
                        },
                        new
                        {
                            Id = 136L,
                            AccessFailedCount = 0,
                            CompanyId = 101L,
                            ConcurrencyStamp = "89b1ec6f-7827-462e-b938-bd9cc72b2e91",
                            CreatedDateTime = new DateTime(2024, 11, 10, 23, 19, 13, 168, DateTimeKind.Utc).AddTicks(4017),
                            Email = "Reymundo62@hotmail.com",
                            EmailConfirmed = false,
                            FirstName = "Gardner",
                            IsArchived = false,
                            LastName = "Brekke",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 11, 15, 52, 19, 209, DateTimeKind.Utc).AddTicks(3841),
                            NormalizedEmail = "REYMUNDO62@HOTMAIL.COM",
                            NormalizedUserName = "REYMUNDO62@HOTMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Reymundo62@hotmail.com"
                        },
                        new
                        {
                            Id = 137L,
                            AccessFailedCount = 0,
                            CompanyId = 101L,
                            ConcurrencyStamp = "6aed4f60-345b-4f2b-8bf8-0c8637b1fa90",
                            CreatedDateTime = new DateTime(2024, 11, 11, 8, 13, 26, 871, DateTimeKind.Utc).AddTicks(7279),
                            Email = "Caroline_Wisoky76@hotmail.com",
                            EmailConfirmed = false,
                            FirstName = "Collin",
                            IsArchived = true,
                            LastName = "Jacobson",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 11, 15, 14, 22, 352, DateTimeKind.Utc).AddTicks(7371),
                            NormalizedEmail = "CAROLINE_WISOKY76@HOTMAIL.COM",
                            NormalizedUserName = "CAROLINE_WISOKY76@HOTMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Caroline_Wisoky76@hotmail.com"
                        },
                        new
                        {
                            Id = 138L,
                            AccessFailedCount = 0,
                            CompanyId = 101L,
                            ConcurrencyStamp = "e7bd9de4-ec03-43d5-9940-86885f263b5c",
                            CreatedDateTime = new DateTime(2024, 11, 11, 12, 40, 17, 576, DateTimeKind.Utc).AddTicks(2494),
                            Email = "Eleanore.Kertzmann@yahoo.com",
                            EmailConfirmed = false,
                            FirstName = "Oceane",
                            IsArchived = false,
                            LastName = "Haley",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 11, 5, 0, 53, 552, DateTimeKind.Utc).AddTicks(5812),
                            NormalizedEmail = "ELEANORE.KERTZMANN@YAHOO.COM",
                            NormalizedUserName = "ELEANORE.KERTZMANN@YAHOO.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Eleanore.Kertzmann@yahoo.com"
                        },
                        new
                        {
                            Id = 139L,
                            AccessFailedCount = 0,
                            CompanyId = 101L,
                            ConcurrencyStamp = "bfb2ed77-c734-44ee-8d6b-f1acbf8fc1ee",
                            CreatedDateTime = new DateTime(2024, 11, 11, 19, 17, 56, 830, DateTimeKind.Utc).AddTicks(3554),
                            Email = "Ryann_Emard30@yahoo.com",
                            EmailConfirmed = false,
                            FirstName = "Gerry",
                            IsArchived = false,
                            LastName = "Aufderhar",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 11, 10, 59, 8, 838, DateTimeKind.Utc).AddTicks(4984),
                            NormalizedEmail = "RYANN_EMARD30@YAHOO.COM",
                            NormalizedUserName = "RYANN_EMARD30@YAHOO.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Ryann_Emard30@yahoo.com"
                        },
                        new
                        {
                            Id = 140L,
                            AccessFailedCount = 0,
                            CompanyId = 100L,
                            ConcurrencyStamp = "0b1c80ae-6a27-4861-b313-cfc1a568965d",
                            CreatedDateTime = new DateTime(2024, 11, 11, 18, 7, 5, 492, DateTimeKind.Utc).AddTicks(8458),
                            Email = "Linda.Senger@hotmail.com",
                            EmailConfirmed = false,
                            FirstName = "Vaughn",
                            IsArchived = true,
                            LastName = "Lubowitz",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 11, 5, 13, 30, 763, DateTimeKind.Utc).AddTicks(2487),
                            NormalizedEmail = "LINDA.SENGER@HOTMAIL.COM",
                            NormalizedUserName = "LINDA.SENGER@HOTMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Linda.Senger@hotmail.com"
                        },
                        new
                        {
                            Id = 141L,
                            AccessFailedCount = 0,
                            CompanyId = 100L,
                            ConcurrencyStamp = "07c06723-5bc4-4728-a3c7-5398baaad4cd",
                            CreatedDateTime = new DateTime(2024, 11, 11, 17, 55, 33, 204, DateTimeKind.Utc).AddTicks(1887),
                            Email = "Sim_Dibbert18@hotmail.com",
                            EmailConfirmed = false,
                            FirstName = "Tyra",
                            IsArchived = false,
                            LastName = "Harris",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 11, 1, 10, 13, 679, DateTimeKind.Utc).AddTicks(1143),
                            NormalizedEmail = "SIM_DIBBERT18@HOTMAIL.COM",
                            NormalizedUserName = "SIM_DIBBERT18@HOTMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Sim_Dibbert18@hotmail.com"
                        },
                        new
                        {
                            Id = 142L,
                            AccessFailedCount = 0,
                            CompanyId = 101L,
                            ConcurrencyStamp = "5ee23ad4-4bbb-4e55-a2ac-e84b3881d7ac",
                            CreatedDateTime = new DateTime(2024, 11, 11, 17, 34, 3, 516, DateTimeKind.Utc).AddTicks(6832),
                            Email = "Noemi.Bayer19@hotmail.com",
                            EmailConfirmed = false,
                            FirstName = "Dina",
                            IsArchived = true,
                            LastName = "Haag",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 11, 3, 7, 56, 938, DateTimeKind.Utc).AddTicks(1385),
                            NormalizedEmail = "NOEMI.BAYER19@HOTMAIL.COM",
                            NormalizedUserName = "NOEMI.BAYER19@HOTMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Noemi.Bayer19@hotmail.com"
                        },
                        new
                        {
                            Id = 143L,
                            AccessFailedCount = 0,
                            CompanyId = 100L,
                            ConcurrencyStamp = "6c02429b-3847-4cdb-921c-25c93efe1a00",
                            CreatedDateTime = new DateTime(2024, 11, 11, 1, 33, 43, 367, DateTimeKind.Utc).AddTicks(2764),
                            Email = "General43@hotmail.com",
                            EmailConfirmed = false,
                            FirstName = "Carmine",
                            IsArchived = false,
                            LastName = "Nitzsche",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 11, 19, 53, 56, 187, DateTimeKind.Utc).AddTicks(4038),
                            NormalizedEmail = "GENERAL43@HOTMAIL.COM",
                            NormalizedUserName = "GENERAL43@HOTMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "General43@hotmail.com"
                        },
                        new
                        {
                            Id = 144L,
                            AccessFailedCount = 0,
                            CompanyId = 100L,
                            ConcurrencyStamp = "cff52aa2-14f3-4356-bf8a-a77315700299",
                            CreatedDateTime = new DateTime(2024, 11, 11, 12, 58, 37, 134, DateTimeKind.Utc).AddTicks(1857),
                            Email = "Emilia_Jerde@hotmail.com",
                            EmailConfirmed = false,
                            FirstName = "Celia",
                            IsArchived = true,
                            LastName = "Christiansen",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 10, 22, 46, 25, 617, DateTimeKind.Utc).AddTicks(5372),
                            NormalizedEmail = "EMILIA_JERDE@HOTMAIL.COM",
                            NormalizedUserName = "EMILIA_JERDE@HOTMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Emilia_Jerde@hotmail.com"
                        },
                        new
                        {
                            Id = 145L,
                            AccessFailedCount = 0,
                            CompanyId = 100L,
                            ConcurrencyStamp = "2ec71247-0c92-47b3-8620-81c13f780686",
                            CreatedDateTime = new DateTime(2024, 11, 11, 20, 9, 59, 777, DateTimeKind.Utc).AddTicks(8830),
                            Email = "Orval44@hotmail.com",
                            EmailConfirmed = false,
                            FirstName = "Webster",
                            IsArchived = true,
                            LastName = "Kertzmann",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 10, 22, 19, 29, 532, DateTimeKind.Utc).AddTicks(16),
                            NormalizedEmail = "ORVAL44@HOTMAIL.COM",
                            NormalizedUserName = "ORVAL44@HOTMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Orval44@hotmail.com"
                        },
                        new
                        {
                            Id = 146L,
                            AccessFailedCount = 0,
                            CompanyId = 100L,
                            ConcurrencyStamp = "98959d33-2c3b-4e0e-96fe-657fc8ad392d",
                            CreatedDateTime = new DateTime(2024, 11, 11, 4, 4, 24, 44, DateTimeKind.Utc).AddTicks(4706),
                            Email = "Albina_Leffler89@yahoo.com",
                            EmailConfirmed = false,
                            FirstName = "Adonis",
                            IsArchived = true,
                            LastName = "Fay",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 11, 12, 25, 58, 219, DateTimeKind.Utc).AddTicks(4138),
                            NormalizedEmail = "ALBINA_LEFFLER89@YAHOO.COM",
                            NormalizedUserName = "ALBINA_LEFFLER89@YAHOO.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Albina_Leffler89@yahoo.com"
                        },
                        new
                        {
                            Id = 147L,
                            AccessFailedCount = 0,
                            CompanyId = 100L,
                            ConcurrencyStamp = "eafaf3a3-27d8-44d5-bba1-c59d546406e5",
                            CreatedDateTime = new DateTime(2024, 11, 11, 10, 29, 45, 424, DateTimeKind.Utc).AddTicks(2446),
                            Email = "Genevieve.Pollich13@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Anahi",
                            IsArchived = false,
                            LastName = "Jenkins",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 11, 6, 16, 15, 107, DateTimeKind.Utc).AddTicks(9865),
                            NormalizedEmail = "GENEVIEVE.POLLICH13@GMAIL.COM",
                            NormalizedUserName = "GENEVIEVE.POLLICH13@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Genevieve.Pollich13@gmail.com"
                        },
                        new
                        {
                            Id = 148L,
                            AccessFailedCount = 0,
                            CompanyId = 100L,
                            ConcurrencyStamp = "3fdba2b9-152d-4969-9dbe-96d890382edf",
                            CreatedDateTime = new DateTime(2024, 11, 11, 19, 17, 40, 534, DateTimeKind.Utc).AddTicks(9363),
                            Email = "Billy_Deckow41@yahoo.com",
                            EmailConfirmed = false,
                            FirstName = "Adelle",
                            IsArchived = false,
                            LastName = "Pouros",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 11, 12, 50, 32, 832, DateTimeKind.Utc).AddTicks(8713),
                            NormalizedEmail = "BILLY_DECKOW41@YAHOO.COM",
                            NormalizedUserName = "BILLY_DECKOW41@YAHOO.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Billy_Deckow41@yahoo.com"
                        },
                        new
                        {
                            Id = 149L,
                            AccessFailedCount = 0,
                            CompanyId = 101L,
                            ConcurrencyStamp = "26a7886b-a390-45e2-9056-3952ade53bfc",
                            CreatedDateTime = new DateTime(2024, 11, 11, 4, 33, 9, 126, DateTimeKind.Utc).AddTicks(4996),
                            Email = "Shaylee36@hotmail.com",
                            EmailConfirmed = false,
                            FirstName = "Nakia",
                            IsArchived = true,
                            LastName = "Hauck",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 11, 2, 58, 47, 233, DateTimeKind.Utc).AddTicks(1280),
                            NormalizedEmail = "SHAYLEE36@HOTMAIL.COM",
                            NormalizedUserName = "SHAYLEE36@HOTMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Shaylee36@hotmail.com"
                        },
                        new
                        {
                            Id = 150L,
                            AccessFailedCount = 0,
                            CompanyId = 100L,
                            ConcurrencyStamp = "1eb74317-65e8-4f7e-ab57-c57f9ad69a2e",
                            CreatedDateTime = new DateTime(2024, 11, 10, 23, 6, 57, 113, DateTimeKind.Utc).AddTicks(3),
                            Email = "Nikita94@hotmail.com",
                            EmailConfirmed = false,
                            FirstName = "Torey",
                            IsArchived = true,
                            LastName = "Rodriguez",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 11, 3, 14, 18, 435, DateTimeKind.Utc).AddTicks(6054),
                            NormalizedEmail = "NIKITA94@HOTMAIL.COM",
                            NormalizedUserName = "NIKITA94@HOTMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Nikita94@hotmail.com"
                        },
                        new
                        {
                            Id = 151L,
                            AccessFailedCount = 0,
                            CompanyId = 101L,
                            ConcurrencyStamp = "ab7ee271-ba84-45ff-bc95-01887b436fe1",
                            CreatedDateTime = new DateTime(2024, 11, 11, 10, 30, 20, 454, DateTimeKind.Utc).AddTicks(3293),
                            Email = "Lonnie56@yahoo.com",
                            EmailConfirmed = false,
                            FirstName = "Esperanza",
                            IsArchived = false,
                            LastName = "Hudson",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 11, 13, 5, 39, 21, DateTimeKind.Utc).AddTicks(899),
                            NormalizedEmail = "LONNIE56@YAHOO.COM",
                            NormalizedUserName = "LONNIE56@YAHOO.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Lonnie56@yahoo.com"
                        },
                        new
                        {
                            Id = 152L,
                            AccessFailedCount = 0,
                            CompanyId = 100L,
                            ConcurrencyStamp = "9196458e-198d-43e1-800b-cd17ac090f27",
                            CreatedDateTime = new DateTime(2024, 11, 11, 22, 3, 43, 495, DateTimeKind.Utc).AddTicks(6470),
                            Email = "Nick_Littel4@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Naomie",
                            IsArchived = true,
                            LastName = "Hand",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 11, 7, 19, 49, 356, DateTimeKind.Utc).AddTicks(2054),
                            NormalizedEmail = "NICK_LITTEL4@GMAIL.COM",
                            NormalizedUserName = "NICK_LITTEL4@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Nick_Littel4@gmail.com"
                        },
                        new
                        {
                            Id = 153L,
                            AccessFailedCount = 0,
                            CompanyId = 101L,
                            ConcurrencyStamp = "86d5c2ae-a1d6-41ca-ab5d-8a1f2548df71",
                            CreatedDateTime = new DateTime(2024, 11, 11, 11, 47, 53, 936, DateTimeKind.Utc).AddTicks(8871),
                            Email = "Verdie.Jacobs@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Noah",
                            IsArchived = true,
                            LastName = "Hilpert",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 11, 19, 55, 39, 623, DateTimeKind.Utc).AddTicks(2237),
                            NormalizedEmail = "VERDIE.JACOBS@GMAIL.COM",
                            NormalizedUserName = "VERDIE.JACOBS@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Verdie.Jacobs@gmail.com"
                        },
                        new
                        {
                            Id = 154L,
                            AccessFailedCount = 0,
                            CompanyId = 100L,
                            ConcurrencyStamp = "ed912d33-7608-470f-9d14-c509e6bdd2e2",
                            CreatedDateTime = new DateTime(2024, 11, 11, 14, 32, 44, 995, DateTimeKind.Utc).AddTicks(8192),
                            Email = "Patsy17@yahoo.com",
                            EmailConfirmed = false,
                            FirstName = "Abigale",
                            IsArchived = true,
                            LastName = "Hayes",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 11, 0, 5, 17, 26, DateTimeKind.Utc).AddTicks(441),
                            NormalizedEmail = "PATSY17@YAHOO.COM",
                            NormalizedUserName = "PATSY17@YAHOO.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Patsy17@yahoo.com"
                        },
                        new
                        {
                            Id = 155L,
                            AccessFailedCount = 0,
                            CompanyId = 100L,
                            ConcurrencyStamp = "79b7894c-9c07-4c6b-87ac-88ad6b506fd9",
                            CreatedDateTime = new DateTime(2024, 11, 11, 10, 57, 48, 589, DateTimeKind.Utc).AddTicks(1284),
                            Email = "Johnny11@yahoo.com",
                            EmailConfirmed = false,
                            FirstName = "May",
                            IsArchived = false,
                            LastName = "Emard",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 11, 15, 0, 23, 33, DateTimeKind.Utc).AddTicks(8687),
                            NormalizedEmail = "JOHNNY11@YAHOO.COM",
                            NormalizedUserName = "JOHNNY11@YAHOO.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Johnny11@yahoo.com"
                        },
                        new
                        {
                            Id = 156L,
                            AccessFailedCount = 0,
                            CompanyId = 100L,
                            ConcurrencyStamp = "47771b89-1321-4303-9437-7e86d3df62e1",
                            CreatedDateTime = new DateTime(2024, 11, 11, 21, 59, 11, 358, DateTimeKind.Utc).AddTicks(3396),
                            Email = "Gregory92@yahoo.com",
                            EmailConfirmed = false,
                            FirstName = "Era",
                            IsArchived = true,
                            LastName = "Reichert",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 11, 12, 14, 22, 81, DateTimeKind.Utc).AddTicks(5807),
                            NormalizedEmail = "GREGORY92@YAHOO.COM",
                            NormalizedUserName = "GREGORY92@YAHOO.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Gregory92@yahoo.com"
                        },
                        new
                        {
                            Id = 157L,
                            AccessFailedCount = 0,
                            CompanyId = 100L,
                            ConcurrencyStamp = "c39261b6-243c-4146-8746-a1b2cb916384",
                            CreatedDateTime = new DateTime(2024, 11, 11, 6, 12, 36, 179, DateTimeKind.Utc).AddTicks(715),
                            Email = "Cassandre97@hotmail.com",
                            EmailConfirmed = false,
                            FirstName = "Kendrick",
                            IsArchived = true,
                            LastName = "Halvorson",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 11, 14, 51, 22, 577, DateTimeKind.Utc).AddTicks(4246),
                            NormalizedEmail = "CASSANDRE97@HOTMAIL.COM",
                            NormalizedUserName = "CASSANDRE97@HOTMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Cassandre97@hotmail.com"
                        },
                        new
                        {
                            Id = 158L,
                            AccessFailedCount = 0,
                            CompanyId = 100L,
                            ConcurrencyStamp = "689cc6cd-dff4-4431-9fc3-afbb95ec5ed5",
                            CreatedDateTime = new DateTime(2024, 11, 11, 7, 2, 9, 251, DateTimeKind.Utc).AddTicks(1425),
                            Email = "Jillian_Toy64@hotmail.com",
                            EmailConfirmed = false,
                            FirstName = "Marcelo",
                            IsArchived = true,
                            LastName = "Effertz",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 11, 2, 54, 23, 160, DateTimeKind.Utc).AddTicks(8188),
                            NormalizedEmail = "JILLIAN_TOY64@HOTMAIL.COM",
                            NormalizedUserName = "JILLIAN_TOY64@HOTMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Jillian_Toy64@hotmail.com"
                        },
                        new
                        {
                            Id = 159L,
                            AccessFailedCount = 0,
                            CompanyId = 100L,
                            ConcurrencyStamp = "046f86e2-af3b-4066-a6b0-6f47aff0ba32",
                            CreatedDateTime = new DateTime(2024, 11, 11, 0, 10, 23, 884, DateTimeKind.Utc).AddTicks(7591),
                            Email = "Braulio8@yahoo.com",
                            EmailConfirmed = false,
                            FirstName = "Adriel",
                            IsArchived = false,
                            LastName = "McLaughlin",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 11, 7, 31, 52, 788, DateTimeKind.Utc).AddTicks(469),
                            NormalizedEmail = "BRAULIO8@YAHOO.COM",
                            NormalizedUserName = "BRAULIO8@YAHOO.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Braulio8@yahoo.com"
                        },
                        new
                        {
                            Id = 160L,
                            AccessFailedCount = 0,
                            CompanyId = 100L,
                            ConcurrencyStamp = "15ed3bd7-fc2a-49de-8cc1-fa796a3e4550",
                            CreatedDateTime = new DateTime(2024, 11, 11, 17, 14, 13, 270, DateTimeKind.Utc).AddTicks(8877),
                            Email = "Elise_Hahn64@yahoo.com",
                            EmailConfirmed = false,
                            FirstName = "Buster",
                            IsArchived = true,
                            LastName = "Nader",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 11, 19, 26, 11, 540, DateTimeKind.Utc).AddTicks(7971),
                            NormalizedEmail = "ELISE_HAHN64@YAHOO.COM",
                            NormalizedUserName = "ELISE_HAHN64@YAHOO.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Elise_Hahn64@yahoo.com"
                        },
                        new
                        {
                            Id = 161L,
                            AccessFailedCount = 0,
                            CompanyId = 100L,
                            ConcurrencyStamp = "55581438-746e-4a25-909c-dd469a882bcf",
                            CreatedDateTime = new DateTime(2024, 11, 11, 3, 7, 0, 977, DateTimeKind.Utc).AddTicks(6455),
                            Email = "Donnell.Wuckert@hotmail.com",
                            EmailConfirmed = false,
                            FirstName = "Estella",
                            IsArchived = false,
                            LastName = "Dietrich",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 11, 12, 11, 34, 282, DateTimeKind.Utc).AddTicks(5958),
                            NormalizedEmail = "DONNELL.WUCKERT@HOTMAIL.COM",
                            NormalizedUserName = "DONNELL.WUCKERT@HOTMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Donnell.Wuckert@hotmail.com"
                        },
                        new
                        {
                            Id = 162L,
                            AccessFailedCount = 0,
                            CompanyId = 100L,
                            ConcurrencyStamp = "9661dccb-a119-45b7-b9a3-bef916431a1f",
                            CreatedDateTime = new DateTime(2024, 11, 11, 14, 11, 32, 438, DateTimeKind.Utc).AddTicks(8550),
                            Email = "Carmella.Gibson@yahoo.com",
                            EmailConfirmed = false,
                            FirstName = "Lupe",
                            IsArchived = false,
                            LastName = "Quitzon",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 11, 6, 37, 46, 403, DateTimeKind.Utc).AddTicks(1344),
                            NormalizedEmail = "CARMELLA.GIBSON@YAHOO.COM",
                            NormalizedUserName = "CARMELLA.GIBSON@YAHOO.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Carmella.Gibson@yahoo.com"
                        },
                        new
                        {
                            Id = 163L,
                            AccessFailedCount = 0,
                            CompanyId = 101L,
                            ConcurrencyStamp = "f7c298e9-d5f4-4025-9637-c26d3bb83de9",
                            CreatedDateTime = new DateTime(2024, 11, 11, 18, 49, 5, 101, DateTimeKind.Utc).AddTicks(5500),
                            Email = "Lucious_Leannon56@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Jayda",
                            IsArchived = true,
                            LastName = "Cummerata",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 11, 0, 4, 8, 967, DateTimeKind.Utc).AddTicks(4806),
                            NormalizedEmail = "LUCIOUS_LEANNON56@GMAIL.COM",
                            NormalizedUserName = "LUCIOUS_LEANNON56@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Lucious_Leannon56@gmail.com"
                        },
                        new
                        {
                            Id = 164L,
                            AccessFailedCount = 0,
                            CompanyId = 100L,
                            ConcurrencyStamp = "9149f3b6-aea2-43d9-89e8-6e0391625d08",
                            CreatedDateTime = new DateTime(2024, 11, 11, 18, 7, 31, 699, DateTimeKind.Utc).AddTicks(6683),
                            Email = "Nasir_Brakus@hotmail.com",
                            EmailConfirmed = false,
                            FirstName = "Kolby",
                            IsArchived = true,
                            LastName = "Jast",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 11, 2, 6, 39, 305, DateTimeKind.Utc).AddTicks(7731),
                            NormalizedEmail = "NASIR_BRAKUS@HOTMAIL.COM",
                            NormalizedUserName = "NASIR_BRAKUS@HOTMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Nasir_Brakus@hotmail.com"
                        },
                        new
                        {
                            Id = 165L,
                            AccessFailedCount = 0,
                            CompanyId = 101L,
                            ConcurrencyStamp = "c4095b49-0866-4d59-9da0-e4c5a57500b4",
                            CreatedDateTime = new DateTime(2024, 11, 11, 3, 18, 57, 319, DateTimeKind.Utc).AddTicks(251),
                            Email = "Marcella91@hotmail.com",
                            EmailConfirmed = false,
                            FirstName = "Xander",
                            IsArchived = true,
                            LastName = "Kulas",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 11, 10, 41, 17, 855, DateTimeKind.Utc).AddTicks(3861),
                            NormalizedEmail = "MARCELLA91@HOTMAIL.COM",
                            NormalizedUserName = "MARCELLA91@HOTMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Marcella91@hotmail.com"
                        },
                        new
                        {
                            Id = 166L,
                            AccessFailedCount = 0,
                            CompanyId = 100L,
                            ConcurrencyStamp = "e0af4925-0209-45b2-9172-6adc588abac6",
                            CreatedDateTime = new DateTime(2024, 11, 11, 16, 9, 16, 193, DateTimeKind.Utc).AddTicks(6438),
                            Email = "Eula38@hotmail.com",
                            EmailConfirmed = false,
                            FirstName = "Loraine",
                            IsArchived = true,
                            LastName = "Hagenes",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 11, 11, 27, 46, 545, DateTimeKind.Utc).AddTicks(5160),
                            NormalizedEmail = "EULA38@HOTMAIL.COM",
                            NormalizedUserName = "EULA38@HOTMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Eula38@hotmail.com"
                        },
                        new
                        {
                            Id = 167L,
                            AccessFailedCount = 0,
                            CompanyId = 100L,
                            ConcurrencyStamp = "53f16a57-1d38-4e82-8f0f-6d5854d52ad8",
                            CreatedDateTime = new DateTime(2024, 11, 11, 16, 27, 26, 70, DateTimeKind.Utc).AddTicks(1750),
                            Email = "Gerry12@yahoo.com",
                            EmailConfirmed = false,
                            FirstName = "Clinton",
                            IsArchived = true,
                            LastName = "Rohan",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 11, 2, 26, 12, 884, DateTimeKind.Utc).AddTicks(5364),
                            NormalizedEmail = "GERRY12@YAHOO.COM",
                            NormalizedUserName = "GERRY12@YAHOO.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Gerry12@yahoo.com"
                        },
                        new
                        {
                            Id = 168L,
                            AccessFailedCount = 0,
                            CompanyId = 100L,
                            ConcurrencyStamp = "bc0dc1b5-61e9-4af9-9867-73dcb8447d47",
                            CreatedDateTime = new DateTime(2024, 11, 11, 6, 36, 56, 898, DateTimeKind.Utc).AddTicks(6226),
                            Email = "Meda.Cormier@yahoo.com",
                            EmailConfirmed = false,
                            FirstName = "Kevon",
                            IsArchived = false,
                            LastName = "Daugherty",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 11, 18, 49, 29, 865, DateTimeKind.Utc).AddTicks(5509),
                            NormalizedEmail = "MEDA.CORMIER@YAHOO.COM",
                            NormalizedUserName = "MEDA.CORMIER@YAHOO.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Meda.Cormier@yahoo.com"
                        },
                        new
                        {
                            Id = 169L,
                            AccessFailedCount = 0,
                            CompanyId = 101L,
                            ConcurrencyStamp = "867d4859-58ee-42f6-ae72-99caeaa77728",
                            CreatedDateTime = new DateTime(2024, 11, 11, 1, 32, 32, 183, DateTimeKind.Utc).AddTicks(8513),
                            Email = "Norwood.Runolfsdottir@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Clementine",
                            IsArchived = false,
                            LastName = "Sanford",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 11, 8, 1, 41, 329, DateTimeKind.Utc).AddTicks(2332),
                            NormalizedEmail = "NORWOOD.RUNOLFSDOTTIR@GMAIL.COM",
                            NormalizedUserName = "NORWOOD.RUNOLFSDOTTIR@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Norwood.Runolfsdottir@gmail.com"
                        },
                        new
                        {
                            Id = 170L,
                            AccessFailedCount = 0,
                            CompanyId = 100L,
                            ConcurrencyStamp = "c77c6cbe-f16f-48d2-9bca-b55a770bd44b",
                            CreatedDateTime = new DateTime(2024, 11, 11, 21, 18, 25, 495, DateTimeKind.Utc).AddTicks(727),
                            Email = "Chandler77@yahoo.com",
                            EmailConfirmed = false,
                            FirstName = "Sally",
                            IsArchived = false,
                            LastName = "Grimes",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 11, 16, 18, 10, 2, DateTimeKind.Utc).AddTicks(3169),
                            NormalizedEmail = "CHANDLER77@YAHOO.COM",
                            NormalizedUserName = "CHANDLER77@YAHOO.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Chandler77@yahoo.com"
                        },
                        new
                        {
                            Id = 171L,
                            AccessFailedCount = 0,
                            CompanyId = 100L,
                            ConcurrencyStamp = "8e9dfbb2-080f-431d-942d-a557c846241a",
                            CreatedDateTime = new DateTime(2024, 11, 11, 20, 25, 15, 125, DateTimeKind.Utc).AddTicks(5370),
                            Email = "Ryan89@hotmail.com",
                            EmailConfirmed = false,
                            FirstName = "Cecelia",
                            IsArchived = true,
                            LastName = "Ritchie",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 11, 2, 55, 7, 864, DateTimeKind.Utc).AddTicks(37),
                            NormalizedEmail = "RYAN89@HOTMAIL.COM",
                            NormalizedUserName = "RYAN89@HOTMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Ryan89@hotmail.com"
                        },
                        new
                        {
                            Id = 172L,
                            AccessFailedCount = 0,
                            CompanyId = 101L,
                            ConcurrencyStamp = "0157dd0d-d39d-4666-8cba-7773500265ed",
                            CreatedDateTime = new DateTime(2024, 11, 11, 11, 5, 33, 262, DateTimeKind.Utc).AddTicks(9399),
                            Email = "Ava_Bauch@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Ulices",
                            IsArchived = false,
                            LastName = "Luettgen",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 10, 22, 57, 58, 917, DateTimeKind.Utc).AddTicks(8083),
                            NormalizedEmail = "AVA_BAUCH@GMAIL.COM",
                            NormalizedUserName = "AVA_BAUCH@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Ava_Bauch@gmail.com"
                        },
                        new
                        {
                            Id = 173L,
                            AccessFailedCount = 0,
                            CompanyId = 101L,
                            ConcurrencyStamp = "d9622843-99f9-4ea4-8365-838ce50089b4",
                            CreatedDateTime = new DateTime(2024, 11, 11, 13, 40, 13, 824, DateTimeKind.Utc).AddTicks(8414),
                            Email = "Aron.Wiza@yahoo.com",
                            EmailConfirmed = false,
                            FirstName = "Payton",
                            IsArchived = false,
                            LastName = "Haley",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 11, 19, 35, 22, 587, DateTimeKind.Utc).AddTicks(6060),
                            NormalizedEmail = "ARON.WIZA@YAHOO.COM",
                            NormalizedUserName = "ARON.WIZA@YAHOO.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Aron.Wiza@yahoo.com"
                        },
                        new
                        {
                            Id = 174L,
                            AccessFailedCount = 0,
                            CompanyId = 101L,
                            ConcurrencyStamp = "966016b7-424f-4aff-a149-c3c102e0924c",
                            CreatedDateTime = new DateTime(2024, 11, 11, 19, 16, 42, 259, DateTimeKind.Utc).AddTicks(9911),
                            Email = "Angelina13@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Eliezer",
                            IsArchived = false,
                            LastName = "Moen",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 11, 9, 40, 44, 420, DateTimeKind.Utc).AddTicks(8245),
                            NormalizedEmail = "ANGELINA13@GMAIL.COM",
                            NormalizedUserName = "ANGELINA13@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Angelina13@gmail.com"
                        },
                        new
                        {
                            Id = 175L,
                            AccessFailedCount = 0,
                            CompanyId = 100L,
                            ConcurrencyStamp = "23f50dbb-8e62-415d-8f70-e6f7023c496b",
                            CreatedDateTime = new DateTime(2024, 11, 11, 10, 38, 35, 329, DateTimeKind.Utc).AddTicks(3017),
                            Email = "Sallie40@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Eduardo",
                            IsArchived = false,
                            LastName = "Heidenreich",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 11, 3, 16, 54, 956, DateTimeKind.Utc).AddTicks(5133),
                            NormalizedEmail = "SALLIE40@GMAIL.COM",
                            NormalizedUserName = "SALLIE40@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Sallie40@gmail.com"
                        },
                        new
                        {
                            Id = 176L,
                            AccessFailedCount = 0,
                            CompanyId = 101L,
                            ConcurrencyStamp = "065610bf-5880-499c-a631-dc849bc135ad",
                            CreatedDateTime = new DateTime(2024, 11, 11, 3, 58, 26, 931, DateTimeKind.Utc).AddTicks(9393),
                            Email = "Emiliano47@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Aaliyah",
                            IsArchived = false,
                            LastName = "West",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 11, 11, 19, 12, 256, DateTimeKind.Utc).AddTicks(3043),
                            NormalizedEmail = "EMILIANO47@GMAIL.COM",
                            NormalizedUserName = "EMILIANO47@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Emiliano47@gmail.com"
                        },
                        new
                        {
                            Id = 177L,
                            AccessFailedCount = 0,
                            CompanyId = 101L,
                            ConcurrencyStamp = "31bd5e71-c5d2-4b8a-aff8-549db1ec4e3e",
                            CreatedDateTime = new DateTime(2024, 11, 11, 1, 39, 10, 220, DateTimeKind.Utc).AddTicks(1558),
                            Email = "Virgie.Wuckert@hotmail.com",
                            EmailConfirmed = false,
                            FirstName = "Raleigh",
                            IsArchived = true,
                            LastName = "Gerhold",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 11, 1, 45, 34, 874, DateTimeKind.Utc).AddTicks(9598),
                            NormalizedEmail = "VIRGIE.WUCKERT@HOTMAIL.COM",
                            NormalizedUserName = "VIRGIE.WUCKERT@HOTMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Virgie.Wuckert@hotmail.com"
                        },
                        new
                        {
                            Id = 178L,
                            AccessFailedCount = 0,
                            CompanyId = 101L,
                            ConcurrencyStamp = "19af825e-a278-46fb-941b-2135fbf27ce8",
                            CreatedDateTime = new DateTime(2024, 11, 11, 21, 59, 55, 147, DateTimeKind.Utc).AddTicks(1902),
                            Email = "Rene_Brown@hotmail.com",
                            EmailConfirmed = false,
                            FirstName = "Geraldine",
                            IsArchived = false,
                            LastName = "Balistreri",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 11, 7, 1, 5, 475, DateTimeKind.Utc).AddTicks(4502),
                            NormalizedEmail = "RENE_BROWN@HOTMAIL.COM",
                            NormalizedUserName = "RENE_BROWN@HOTMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Rene_Brown@hotmail.com"
                        },
                        new
                        {
                            Id = 179L,
                            AccessFailedCount = 0,
                            CompanyId = 101L,
                            ConcurrencyStamp = "b342a4a6-299a-4def-8f4e-576b4586ea49",
                            CreatedDateTime = new DateTime(2024, 11, 11, 17, 59, 52, 82, DateTimeKind.Utc).AddTicks(8869),
                            Email = "Amya99@hotmail.com",
                            EmailConfirmed = false,
                            FirstName = "Reese",
                            IsArchived = true,
                            LastName = "Moen",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 11, 3, 46, 35, 706, DateTimeKind.Utc).AddTicks(390),
                            NormalizedEmail = "AMYA99@HOTMAIL.COM",
                            NormalizedUserName = "AMYA99@HOTMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Amya99@hotmail.com"
                        },
                        new
                        {
                            Id = 180L,
                            AccessFailedCount = 0,
                            CompanyId = 101L,
                            ConcurrencyStamp = "32d4dfe9-f908-4707-a7cd-8d723b28cc9e",
                            CreatedDateTime = new DateTime(2024, 11, 11, 16, 48, 31, 317, DateTimeKind.Utc).AddTicks(2934),
                            Email = "Ansley94@yahoo.com",
                            EmailConfirmed = false,
                            FirstName = "Zackary",
                            IsArchived = false,
                            LastName = "Lind",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 10, 23, 42, 2, 953, DateTimeKind.Utc).AddTicks(5162),
                            NormalizedEmail = "ANSLEY94@YAHOO.COM",
                            NormalizedUserName = "ANSLEY94@YAHOO.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Ansley94@yahoo.com"
                        },
                        new
                        {
                            Id = 181L,
                            AccessFailedCount = 0,
                            CompanyId = 101L,
                            ConcurrencyStamp = "4dcf981a-2c42-44e3-8b3e-5d4d2deab690",
                            CreatedDateTime = new DateTime(2024, 11, 11, 4, 37, 30, 721, DateTimeKind.Utc).AddTicks(3836),
                            Email = "Logan3@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Arno",
                            IsArchived = true,
                            LastName = "Maggio",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 11, 11, 23, 35, 326, DateTimeKind.Utc).AddTicks(2752),
                            NormalizedEmail = "LOGAN3@GMAIL.COM",
                            NormalizedUserName = "LOGAN3@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Logan3@gmail.com"
                        },
                        new
                        {
                            Id = 182L,
                            AccessFailedCount = 0,
                            CompanyId = 101L,
                            ConcurrencyStamp = "7b957551-3397-40c7-b415-e495d89c155b",
                            CreatedDateTime = new DateTime(2024, 11, 11, 5, 50, 1, 9, DateTimeKind.Utc).AddTicks(2400),
                            Email = "Camila.Walsh81@hotmail.com",
                            EmailConfirmed = false,
                            FirstName = "Hulda",
                            IsArchived = false,
                            LastName = "Frami",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 11, 8, 33, 25, 522, DateTimeKind.Utc).AddTicks(8722),
                            NormalizedEmail = "CAMILA.WALSH81@HOTMAIL.COM",
                            NormalizedUserName = "CAMILA.WALSH81@HOTMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Camila.Walsh81@hotmail.com"
                        },
                        new
                        {
                            Id = 183L,
                            AccessFailedCount = 0,
                            CompanyId = 101L,
                            ConcurrencyStamp = "e9a9d74b-92cb-4ff6-a424-eed637217714",
                            CreatedDateTime = new DateTime(2024, 11, 11, 12, 16, 52, 375, DateTimeKind.Utc).AddTicks(3318),
                            Email = "Alize.Keebler@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Alexis",
                            IsArchived = false,
                            LastName = "Konopelski",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 11, 1, 3, 0, 344, DateTimeKind.Utc).AddTicks(8501),
                            NormalizedEmail = "ALIZE.KEEBLER@GMAIL.COM",
                            NormalizedUserName = "ALIZE.KEEBLER@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Alize.Keebler@gmail.com"
                        },
                        new
                        {
                            Id = 184L,
                            AccessFailedCount = 0,
                            CompanyId = 100L,
                            ConcurrencyStamp = "4d231331-4279-4196-b8c7-2402240d9ae5",
                            CreatedDateTime = new DateTime(2024, 11, 11, 0, 48, 22, 66, DateTimeKind.Utc).AddTicks(9791),
                            Email = "Veronica_Rippin52@hotmail.com",
                            EmailConfirmed = false,
                            FirstName = "Lennie",
                            IsArchived = false,
                            LastName = "Barton",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 11, 9, 46, 27, 597, DateTimeKind.Utc).AddTicks(3679),
                            NormalizedEmail = "VERONICA_RIPPIN52@HOTMAIL.COM",
                            NormalizedUserName = "VERONICA_RIPPIN52@HOTMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Veronica_Rippin52@hotmail.com"
                        },
                        new
                        {
                            Id = 185L,
                            AccessFailedCount = 0,
                            CompanyId = 100L,
                            ConcurrencyStamp = "7e8cf017-acdc-4b03-9654-85c5ae1b0f01",
                            CreatedDateTime = new DateTime(2024, 11, 11, 11, 47, 59, 465, DateTimeKind.Utc).AddTicks(461),
                            Email = "Fannie_Bernhard78@hotmail.com",
                            EmailConfirmed = false,
                            FirstName = "Marta",
                            IsArchived = false,
                            LastName = "Daugherty",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 11, 10, 4, 22, 125, DateTimeKind.Utc).AddTicks(7230),
                            NormalizedEmail = "FANNIE_BERNHARD78@HOTMAIL.COM",
                            NormalizedUserName = "FANNIE_BERNHARD78@HOTMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Fannie_Bernhard78@hotmail.com"
                        },
                        new
                        {
                            Id = 186L,
                            AccessFailedCount = 0,
                            CompanyId = 101L,
                            ConcurrencyStamp = "6691557d-cc8c-4096-a819-ef85750a81ab",
                            CreatedDateTime = new DateTime(2024, 11, 11, 20, 0, 3, 270, DateTimeKind.Utc).AddTicks(9709),
                            Email = "Leonor69@hotmail.com",
                            EmailConfirmed = false,
                            FirstName = "Wilfredo",
                            IsArchived = true,
                            LastName = "White",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 11, 21, 44, 19, 320, DateTimeKind.Utc).AddTicks(423),
                            NormalizedEmail = "LEONOR69@HOTMAIL.COM",
                            NormalizedUserName = "LEONOR69@HOTMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Leonor69@hotmail.com"
                        },
                        new
                        {
                            Id = 187L,
                            AccessFailedCount = 0,
                            CompanyId = 101L,
                            ConcurrencyStamp = "92394800-70c2-46e7-bd45-b75322baed2c",
                            CreatedDateTime = new DateTime(2024, 11, 11, 5, 14, 11, 641, DateTimeKind.Utc).AddTicks(3238),
                            Email = "Jairo_Sporer@hotmail.com",
                            EmailConfirmed = false,
                            FirstName = "Ansel",
                            IsArchived = false,
                            LastName = "Legros",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 11, 14, 41, 56, 662, DateTimeKind.Utc).AddTicks(7252),
                            NormalizedEmail = "JAIRO_SPORER@HOTMAIL.COM",
                            NormalizedUserName = "JAIRO_SPORER@HOTMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Jairo_Sporer@hotmail.com"
                        },
                        new
                        {
                            Id = 188L,
                            AccessFailedCount = 0,
                            CompanyId = 100L,
                            ConcurrencyStamp = "631e623f-6447-4a48-8a4f-4f989b46240a",
                            CreatedDateTime = new DateTime(2024, 11, 11, 3, 15, 19, 746, DateTimeKind.Utc).AddTicks(2727),
                            Email = "Elias74@yahoo.com",
                            EmailConfirmed = false,
                            FirstName = "Lionel",
                            IsArchived = true,
                            LastName = "Dibbert",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 11, 12, 34, 19, 12, DateTimeKind.Utc).AddTicks(61),
                            NormalizedEmail = "ELIAS74@YAHOO.COM",
                            NormalizedUserName = "ELIAS74@YAHOO.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Elias74@yahoo.com"
                        },
                        new
                        {
                            Id = 189L,
                            AccessFailedCount = 0,
                            CompanyId = 101L,
                            ConcurrencyStamp = "3bcc62bc-d003-4785-af4d-b6ce58c6f81e",
                            CreatedDateTime = new DateTime(2024, 11, 11, 8, 32, 12, 324, DateTimeKind.Utc).AddTicks(1122),
                            Email = "Wilfred48@hotmail.com",
                            EmailConfirmed = false,
                            FirstName = "Eveline",
                            IsArchived = true,
                            LastName = "Ullrich",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 11, 11, 27, 49, 925, DateTimeKind.Utc).AddTicks(5407),
                            NormalizedEmail = "WILFRED48@HOTMAIL.COM",
                            NormalizedUserName = "WILFRED48@HOTMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Wilfred48@hotmail.com"
                        },
                        new
                        {
                            Id = 190L,
                            AccessFailedCount = 0,
                            CompanyId = 100L,
                            ConcurrencyStamp = "b3fe7c06-230f-4d47-a7f9-0f5f015086e2",
                            CreatedDateTime = new DateTime(2024, 11, 11, 2, 54, 28, 701, DateTimeKind.Utc).AddTicks(6100),
                            Email = "Camren.Harvey96@yahoo.com",
                            EmailConfirmed = false,
                            FirstName = "Bernardo",
                            IsArchived = true,
                            LastName = "Tromp",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 11, 10, 0, 54, 615, DateTimeKind.Utc).AddTicks(6693),
                            NormalizedEmail = "CAMREN.HARVEY96@YAHOO.COM",
                            NormalizedUserName = "CAMREN.HARVEY96@YAHOO.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Camren.Harvey96@yahoo.com"
                        },
                        new
                        {
                            Id = 191L,
                            AccessFailedCount = 0,
                            CompanyId = 101L,
                            ConcurrencyStamp = "f5960d1f-cf0f-4794-84c0-add42e994849",
                            CreatedDateTime = new DateTime(2024, 11, 11, 16, 33, 17, 790, DateTimeKind.Utc).AddTicks(9821),
                            Email = "Brisa.Rolfson@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Enoch",
                            IsArchived = true,
                            LastName = "Treutel",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 10, 23, 44, 15, 846, DateTimeKind.Utc).AddTicks(1524),
                            NormalizedEmail = "BRISA.ROLFSON@GMAIL.COM",
                            NormalizedUserName = "BRISA.ROLFSON@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Brisa.Rolfson@gmail.com"
                        },
                        new
                        {
                            Id = 192L,
                            AccessFailedCount = 0,
                            CompanyId = 100L,
                            ConcurrencyStamp = "e2d98fdb-ea7d-40e9-8079-4b584c02fc9d",
                            CreatedDateTime = new DateTime(2024, 11, 11, 4, 14, 2, 555, DateTimeKind.Utc).AddTicks(8321),
                            Email = "Sammie_Kuhlman@hotmail.com",
                            EmailConfirmed = false,
                            FirstName = "Christophe",
                            IsArchived = false,
                            LastName = "Schimmel",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 11, 13, 22, 43, 507, DateTimeKind.Utc).AddTicks(8400),
                            NormalizedEmail = "SAMMIE_KUHLMAN@HOTMAIL.COM",
                            NormalizedUserName = "SAMMIE_KUHLMAN@HOTMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Sammie_Kuhlman@hotmail.com"
                        },
                        new
                        {
                            Id = 193L,
                            AccessFailedCount = 0,
                            CompanyId = 101L,
                            ConcurrencyStamp = "90535b14-be78-4dcc-b338-cbf087c0e0c4",
                            CreatedDateTime = new DateTime(2024, 11, 11, 6, 0, 7, 901, DateTimeKind.Utc).AddTicks(8023),
                            Email = "Dakota.Turner21@hotmail.com",
                            EmailConfirmed = false,
                            FirstName = "Maria",
                            IsArchived = true,
                            LastName = "Kunze",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 11, 6, 32, 43, 734, DateTimeKind.Utc).AddTicks(5264),
                            NormalizedEmail = "DAKOTA.TURNER21@HOTMAIL.COM",
                            NormalizedUserName = "DAKOTA.TURNER21@HOTMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Dakota.Turner21@hotmail.com"
                        },
                        new
                        {
                            Id = 194L,
                            AccessFailedCount = 0,
                            CompanyId = 101L,
                            ConcurrencyStamp = "6c9361d8-6b7a-40ad-a8e3-3a97d56812dd",
                            CreatedDateTime = new DateTime(2024, 11, 11, 7, 34, 9, 624, DateTimeKind.Utc).AddTicks(9808),
                            Email = "Valentina_Reynolds24@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Karianne",
                            IsArchived = true,
                            LastName = "Stanton",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 11, 0, 24, 59, 868, DateTimeKind.Utc).AddTicks(7611),
                            NormalizedEmail = "VALENTINA_REYNOLDS24@GMAIL.COM",
                            NormalizedUserName = "VALENTINA_REYNOLDS24@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Valentina_Reynolds24@gmail.com"
                        },
                        new
                        {
                            Id = 195L,
                            AccessFailedCount = 0,
                            CompanyId = 100L,
                            ConcurrencyStamp = "4bde30f5-08e5-407f-802a-bdb672a8d38c",
                            CreatedDateTime = new DateTime(2024, 11, 11, 1, 22, 39, 868, DateTimeKind.Utc).AddTicks(7078),
                            Email = "Lucas_Hauck@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Abel",
                            IsArchived = true,
                            LastName = "Rowe",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 11, 17, 54, 15, 529, DateTimeKind.Utc).AddTicks(497),
                            NormalizedEmail = "LUCAS_HAUCK@GMAIL.COM",
                            NormalizedUserName = "LUCAS_HAUCK@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Lucas_Hauck@gmail.com"
                        },
                        new
                        {
                            Id = 196L,
                            AccessFailedCount = 0,
                            CompanyId = 100L,
                            ConcurrencyStamp = "0befa2ba-16c8-479c-9c9c-f507aacc4a7f",
                            CreatedDateTime = new DateTime(2024, 11, 11, 19, 10, 9, 483, DateTimeKind.Utc).AddTicks(1555),
                            Email = "Katlyn_Hodkiewicz55@yahoo.com",
                            EmailConfirmed = false,
                            FirstName = "Howard",
                            IsArchived = false,
                            LastName = "Schuppe",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 11, 15, 33, 27, 896, DateTimeKind.Utc).AddTicks(7810),
                            NormalizedEmail = "KATLYN_HODKIEWICZ55@YAHOO.COM",
                            NormalizedUserName = "KATLYN_HODKIEWICZ55@YAHOO.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Katlyn_Hodkiewicz55@yahoo.com"
                        },
                        new
                        {
                            Id = 197L,
                            AccessFailedCount = 0,
                            CompanyId = 100L,
                            ConcurrencyStamp = "99893375-e190-4170-823b-86d66cd28b99",
                            CreatedDateTime = new DateTime(2024, 11, 11, 11, 48, 14, 634, DateTimeKind.Utc).AddTicks(871),
                            Email = "Roxanne50@hotmail.com",
                            EmailConfirmed = false,
                            FirstName = "Rebeka",
                            IsArchived = false,
                            LastName = "Auer",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 11, 21, 56, 20, 229, DateTimeKind.Utc).AddTicks(4856),
                            NormalizedEmail = "ROXANNE50@HOTMAIL.COM",
                            NormalizedUserName = "ROXANNE50@HOTMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Roxanne50@hotmail.com"
                        },
                        new
                        {
                            Id = 198L,
                            AccessFailedCount = 0,
                            CompanyId = 101L,
                            ConcurrencyStamp = "2981906d-b829-4d85-a326-7a396e23f626",
                            CreatedDateTime = new DateTime(2024, 11, 11, 7, 10, 44, 727, DateTimeKind.Utc).AddTicks(5317),
                            Email = "Sabina78@hotmail.com",
                            EmailConfirmed = false,
                            FirstName = "Malvina",
                            IsArchived = true,
                            LastName = "Torphy",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 11, 3, 44, 40, 887, DateTimeKind.Utc).AddTicks(445),
                            NormalizedEmail = "SABINA78@HOTMAIL.COM",
                            NormalizedUserName = "SABINA78@HOTMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Sabina78@hotmail.com"
                        },
                        new
                        {
                            Id = 199L,
                            AccessFailedCount = 0,
                            CompanyId = 100L,
                            ConcurrencyStamp = "328c4048-c3b1-4f6d-8ae9-9866176f20b7",
                            CreatedDateTime = new DateTime(2024, 11, 11, 20, 4, 14, 938, DateTimeKind.Utc).AddTicks(1105),
                            Email = "Etha_Greenfelder@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Eleanore",
                            IsArchived = true,
                            LastName = "Dach",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 11, 11, 15, 46, 27, 342, DateTimeKind.Utc).AddTicks(1375),
                            NormalizedEmail = "ETHA_GREENFELDER@GMAIL.COM",
                            NormalizedUserName = "ETHA_GREENFELDER@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Etha_Greenfelder@gmail.com"
                        });
                });

            modelBuilder.Entity("Taxi_Backend.Models.DBModels.AppUserRole", b =>
                {
                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("userid");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint")
                        .HasColumnName("roleid");

                    b.HasKey("UserId", "RoleId")
                        .HasName("pk_aspnetuserroles");

                    b.HasIndex("RoleId")
                        .HasDatabaseName("ix_aspnetuserroles_roleid");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = 100L,
                            RoleId = 4L
                        },
                        new
                        {
                            UserId = 101L,
                            RoleId = 4L
                        },
                        new
                        {
                            UserId = 102L,
                            RoleId = 1L
                        },
                        new
                        {
                            UserId = 103L,
                            RoleId = 3L
                        },
                        new
                        {
                            UserId = 104L,
                            RoleId = 3L
                        },
                        new
                        {
                            UserId = 105L,
                            RoleId = 1L
                        },
                        new
                        {
                            UserId = 106L,
                            RoleId = 4L
                        },
                        new
                        {
                            UserId = 107L,
                            RoleId = 1L
                        },
                        new
                        {
                            UserId = 108L,
                            RoleId = 1L
                        },
                        new
                        {
                            UserId = 109L,
                            RoleId = 4L
                        },
                        new
                        {
                            UserId = 110L,
                            RoleId = 3L
                        },
                        new
                        {
                            UserId = 111L,
                            RoleId = 1L
                        },
                        new
                        {
                            UserId = 112L,
                            RoleId = 1L
                        },
                        new
                        {
                            UserId = 113L,
                            RoleId = 4L
                        },
                        new
                        {
                            UserId = 114L,
                            RoleId = 4L
                        },
                        new
                        {
                            UserId = 115L,
                            RoleId = 1L
                        },
                        new
                        {
                            UserId = 116L,
                            RoleId = 3L
                        },
                        new
                        {
                            UserId = 117L,
                            RoleId = 3L
                        },
                        new
                        {
                            UserId = 118L,
                            RoleId = 2L
                        },
                        new
                        {
                            UserId = 119L,
                            RoleId = 3L
                        },
                        new
                        {
                            UserId = 120L,
                            RoleId = 1L
                        },
                        new
                        {
                            UserId = 121L,
                            RoleId = 2L
                        },
                        new
                        {
                            UserId = 122L,
                            RoleId = 4L
                        },
                        new
                        {
                            UserId = 123L,
                            RoleId = 4L
                        },
                        new
                        {
                            UserId = 124L,
                            RoleId = 2L
                        },
                        new
                        {
                            UserId = 125L,
                            RoleId = 1L
                        },
                        new
                        {
                            UserId = 126L,
                            RoleId = 4L
                        },
                        new
                        {
                            UserId = 127L,
                            RoleId = 3L
                        },
                        new
                        {
                            UserId = 128L,
                            RoleId = 2L
                        },
                        new
                        {
                            UserId = 129L,
                            RoleId = 1L
                        },
                        new
                        {
                            UserId = 130L,
                            RoleId = 1L
                        },
                        new
                        {
                            UserId = 131L,
                            RoleId = 2L
                        },
                        new
                        {
                            UserId = 132L,
                            RoleId = 4L
                        },
                        new
                        {
                            UserId = 133L,
                            RoleId = 4L
                        },
                        new
                        {
                            UserId = 134L,
                            RoleId = 3L
                        },
                        new
                        {
                            UserId = 135L,
                            RoleId = 2L
                        },
                        new
                        {
                            UserId = 136L,
                            RoleId = 3L
                        },
                        new
                        {
                            UserId = 137L,
                            RoleId = 3L
                        },
                        new
                        {
                            UserId = 138L,
                            RoleId = 2L
                        },
                        new
                        {
                            UserId = 139L,
                            RoleId = 3L
                        },
                        new
                        {
                            UserId = 140L,
                            RoleId = 4L
                        },
                        new
                        {
                            UserId = 141L,
                            RoleId = 1L
                        },
                        new
                        {
                            UserId = 142L,
                            RoleId = 1L
                        },
                        new
                        {
                            UserId = 143L,
                            RoleId = 4L
                        },
                        new
                        {
                            UserId = 144L,
                            RoleId = 4L
                        },
                        new
                        {
                            UserId = 145L,
                            RoleId = 3L
                        },
                        new
                        {
                            UserId = 146L,
                            RoleId = 3L
                        },
                        new
                        {
                            UserId = 147L,
                            RoleId = 4L
                        },
                        new
                        {
                            UserId = 148L,
                            RoleId = 3L
                        },
                        new
                        {
                            UserId = 149L,
                            RoleId = 3L
                        },
                        new
                        {
                            UserId = 150L,
                            RoleId = 2L
                        },
                        new
                        {
                            UserId = 151L,
                            RoleId = 1L
                        },
                        new
                        {
                            UserId = 152L,
                            RoleId = 1L
                        },
                        new
                        {
                            UserId = 153L,
                            RoleId = 1L
                        },
                        new
                        {
                            UserId = 154L,
                            RoleId = 1L
                        },
                        new
                        {
                            UserId = 155L,
                            RoleId = 3L
                        },
                        new
                        {
                            UserId = 156L,
                            RoleId = 2L
                        },
                        new
                        {
                            UserId = 157L,
                            RoleId = 2L
                        },
                        new
                        {
                            UserId = 158L,
                            RoleId = 1L
                        },
                        new
                        {
                            UserId = 159L,
                            RoleId = 4L
                        },
                        new
                        {
                            UserId = 160L,
                            RoleId = 2L
                        },
                        new
                        {
                            UserId = 161L,
                            RoleId = 1L
                        },
                        new
                        {
                            UserId = 162L,
                            RoleId = 2L
                        },
                        new
                        {
                            UserId = 163L,
                            RoleId = 3L
                        },
                        new
                        {
                            UserId = 164L,
                            RoleId = 2L
                        },
                        new
                        {
                            UserId = 165L,
                            RoleId = 2L
                        },
                        new
                        {
                            UserId = 166L,
                            RoleId = 3L
                        },
                        new
                        {
                            UserId = 167L,
                            RoleId = 4L
                        },
                        new
                        {
                            UserId = 168L,
                            RoleId = 1L
                        },
                        new
                        {
                            UserId = 169L,
                            RoleId = 4L
                        },
                        new
                        {
                            UserId = 170L,
                            RoleId = 2L
                        },
                        new
                        {
                            UserId = 171L,
                            RoleId = 4L
                        },
                        new
                        {
                            UserId = 172L,
                            RoleId = 3L
                        },
                        new
                        {
                            UserId = 173L,
                            RoleId = 2L
                        },
                        new
                        {
                            UserId = 174L,
                            RoleId = 1L
                        },
                        new
                        {
                            UserId = 175L,
                            RoleId = 1L
                        },
                        new
                        {
                            UserId = 176L,
                            RoleId = 3L
                        },
                        new
                        {
                            UserId = 177L,
                            RoleId = 3L
                        },
                        new
                        {
                            UserId = 178L,
                            RoleId = 2L
                        },
                        new
                        {
                            UserId = 179L,
                            RoleId = 3L
                        },
                        new
                        {
                            UserId = 180L,
                            RoleId = 1L
                        },
                        new
                        {
                            UserId = 181L,
                            RoleId = 4L
                        },
                        new
                        {
                            UserId = 182L,
                            RoleId = 2L
                        },
                        new
                        {
                            UserId = 183L,
                            RoleId = 4L
                        },
                        new
                        {
                            UserId = 184L,
                            RoleId = 3L
                        },
                        new
                        {
                            UserId = 185L,
                            RoleId = 4L
                        },
                        new
                        {
                            UserId = 186L,
                            RoleId = 3L
                        },
                        new
                        {
                            UserId = 187L,
                            RoleId = 3L
                        },
                        new
                        {
                            UserId = 188L,
                            RoleId = 3L
                        },
                        new
                        {
                            UserId = 189L,
                            RoleId = 3L
                        },
                        new
                        {
                            UserId = 190L,
                            RoleId = 4L
                        },
                        new
                        {
                            UserId = 191L,
                            RoleId = 3L
                        },
                        new
                        {
                            UserId = 192L,
                            RoleId = 2L
                        },
                        new
                        {
                            UserId = 193L,
                            RoleId = 3L
                        },
                        new
                        {
                            UserId = 194L,
                            RoleId = 2L
                        },
                        new
                        {
                            UserId = 195L,
                            RoleId = 1L
                        },
                        new
                        {
                            UserId = 196L,
                            RoleId = 1L
                        },
                        new
                        {
                            UserId = 197L,
                            RoleId = 2L
                        },
                        new
                        {
                            UserId = 198L,
                            RoleId = 2L
                        },
                        new
                        {
                            UserId = 199L,
                            RoleId = 1L
                        });
                });

            modelBuilder.Entity("Taxi_Backend.Models.DBModels.BackgroundHistory", b =>
                {
                    b.Property<long>("BackgroundHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("backgroundhistoryid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("BackgroundHistoryId"));

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("createddatetime");

                    b.Property<int>("CustomerQueueCount")
                        .HasColumnType("integer")
                        .HasColumnName("customerqueuecount");

                    b.Property<int>("DriverQueueCount")
                        .HasColumnType("integer")
                        .HasColumnName("driverqueuecount");

                    b.Property<string>("Error")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("error");

                    b.Property<int>("ErrorAmount")
                        .HasColumnType("integer")
                        .HasColumnName("erroramount");

                    b.Property<bool>("IsSuccess")
                        .HasColumnType("boolean")
                        .HasColumnName("issuccess");

                    b.Property<string>("Process")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("process");

                    b.Property<int>("SuccessAmount")
                        .HasColumnType("integer")
                        .HasColumnName("successamount");

                    b.HasKey("BackgroundHistoryId")
                        .HasName("pk_backgroundhistory");

                    b.ToTable("backgroundhistory", (string)null);
                });

            modelBuilder.Entity("Taxi_Backend.Models.DBModels.Company", b =>
                {
                    b.Property<long>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("companyid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("CompanyId"));

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("address");

                    b.Property<string>("Contact")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("contact");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("createddatetime");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("email");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("boolean")
                        .HasColumnName("isarchived");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("name");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("phonenumber");

                    b.Property<int>("TimeZone")
                        .HasColumnType("integer")
                        .HasColumnName("timezone");

                    b.HasKey("CompanyId")
                        .HasName("pk_company");

                    b.ToTable("company", (string)null);

                    b.HasData(
                        new
                        {
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 11, 11, 9, 18, 44, 564, DateTimeKind.Utc).AddTicks(8740),
                            IsArchived = false,
                            Name = "Gerry Gottlieb",
                            TimeZone = 6
                        },
                        new
                        {
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 11, 11, 13, 41, 10, 615, DateTimeKind.Utc).AddTicks(3848),
                            IsArchived = false,
                            Name = "Aileen Mosciski",
                            TimeZone = 6
                        });
                });

            modelBuilder.Entity("Taxi_Backend.Models.DBModels.Customer", b =>
                {
                    b.Property<long>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("customerid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("CustomerId"));

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("createddatetime");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("phonenumber");

                    b.HasKey("CustomerId")
                        .HasName("pk_customer");

                    b.HasIndex("PhoneNumber")
                        .IsUnique()
                        .HasDatabaseName("ix_customer_phonenumber")
                        .HasFilter("PhoneNumber is not null");

                    b.ToTable("customer", (string)null);

                    b.HasData(
                        new
                        {
                            CustomerId = 100L,
                            CreatedDateTime = new DateTime(2024, 11, 11, 16, 35, 9, 719, DateTimeKind.Utc).AddTicks(754),
                            PhoneNumber = "(748) 720-1526"
                        },
                        new
                        {
                            CustomerId = 101L,
                            CreatedDateTime = new DateTime(2024, 11, 11, 20, 3, 26, 155, DateTimeKind.Utc).AddTicks(6558),
                            PhoneNumber = "1-946-812-6129 x698"
                        },
                        new
                        {
                            CustomerId = 102L,
                            CreatedDateTime = new DateTime(2024, 11, 11, 10, 9, 49, 781, DateTimeKind.Utc).AddTicks(937),
                            PhoneNumber = "795.407.5243 x76565"
                        },
                        new
                        {
                            CustomerId = 103L,
                            CreatedDateTime = new DateTime(2024, 11, 11, 11, 10, 54, 933, DateTimeKind.Utc).AddTicks(5769),
                            PhoneNumber = "1-240-885-9069 x060"
                        },
                        new
                        {
                            CustomerId = 104L,
                            CreatedDateTime = new DateTime(2024, 11, 10, 23, 52, 36, 158, DateTimeKind.Utc).AddTicks(3350),
                            PhoneNumber = "343-231-2735"
                        },
                        new
                        {
                            CustomerId = 105L,
                            CreatedDateTime = new DateTime(2024, 11, 11, 0, 52, 5, 681, DateTimeKind.Utc).AddTicks(6890),
                            PhoneNumber = "(405) 674-1806"
                        },
                        new
                        {
                            CustomerId = 106L,
                            CreatedDateTime = new DateTime(2024, 11, 11, 12, 44, 53, 29, DateTimeKind.Utc).AddTicks(987),
                            PhoneNumber = "753-985-5497 x44121"
                        },
                        new
                        {
                            CustomerId = 107L,
                            CreatedDateTime = new DateTime(2024, 11, 11, 17, 6, 31, 256, DateTimeKind.Utc).AddTicks(4923),
                            PhoneNumber = "(959) 225-4533 x28595"
                        },
                        new
                        {
                            CustomerId = 108L,
                            CreatedDateTime = new DateTime(2024, 11, 11, 15, 34, 28, 180, DateTimeKind.Utc).AddTicks(1521),
                            PhoneNumber = "658-498-0436 x1535"
                        },
                        new
                        {
                            CustomerId = 109L,
                            CreatedDateTime = new DateTime(2024, 11, 11, 3, 28, 26, 985, DateTimeKind.Utc).AddTicks(1500),
                            PhoneNumber = "953.285.4174 x2353"
                        },
                        new
                        {
                            CustomerId = 110L,
                            CreatedDateTime = new DateTime(2024, 11, 11, 2, 55, 16, 292, DateTimeKind.Utc).AddTicks(7095),
                            PhoneNumber = "1-468-680-0244 x89299"
                        },
                        new
                        {
                            CustomerId = 111L,
                            CreatedDateTime = new DateTime(2024, 11, 11, 1, 46, 22, 901, DateTimeKind.Utc).AddTicks(2507),
                            PhoneNumber = "389.787.0840 x45780"
                        },
                        new
                        {
                            CustomerId = 112L,
                            CreatedDateTime = new DateTime(2024, 11, 11, 5, 55, 36, 323, DateTimeKind.Utc).AddTicks(1885),
                            PhoneNumber = "483-899-0393"
                        },
                        new
                        {
                            CustomerId = 113L,
                            CreatedDateTime = new DateTime(2024, 11, 11, 13, 28, 19, 551, DateTimeKind.Utc).AddTicks(3254),
                            PhoneNumber = "(854) 834-6894 x850"
                        },
                        new
                        {
                            CustomerId = 114L,
                            CreatedDateTime = new DateTime(2024, 11, 11, 0, 4, 39, 430, DateTimeKind.Utc).AddTicks(3141),
                            PhoneNumber = "1-776-770-0619 x51786"
                        },
                        new
                        {
                            CustomerId = 115L,
                            CreatedDateTime = new DateTime(2024, 11, 11, 14, 37, 7, 160, DateTimeKind.Utc).AddTicks(5248),
                            PhoneNumber = "563.591.3439"
                        },
                        new
                        {
                            CustomerId = 116L,
                            CreatedDateTime = new DateTime(2024, 11, 11, 3, 29, 45, 113, DateTimeKind.Utc).AddTicks(3243),
                            PhoneNumber = "(935) 493-6178 x37035"
                        },
                        new
                        {
                            CustomerId = 117L,
                            CreatedDateTime = new DateTime(2024, 11, 11, 9, 49, 45, 132, DateTimeKind.Utc).AddTicks(4983),
                            PhoneNumber = "(925) 241-6766"
                        },
                        new
                        {
                            CustomerId = 118L,
                            CreatedDateTime = new DateTime(2024, 11, 11, 10, 3, 49, 380, DateTimeKind.Utc).AddTicks(1033),
                            PhoneNumber = "317.582.5167"
                        },
                        new
                        {
                            CustomerId = 119L,
                            CreatedDateTime = new DateTime(2024, 11, 11, 12, 4, 39, 47, DateTimeKind.Utc).AddTicks(1622),
                            PhoneNumber = "740-682-6661"
                        },
                        new
                        {
                            CustomerId = 120L,
                            CreatedDateTime = new DateTime(2024, 11, 11, 19, 17, 21, 637, DateTimeKind.Utc).AddTicks(3129),
                            PhoneNumber = "241.478.3618 x65202"
                        },
                        new
                        {
                            CustomerId = 121L,
                            CreatedDateTime = new DateTime(2024, 11, 10, 22, 42, 6, 60, DateTimeKind.Utc).AddTicks(8517),
                            PhoneNumber = "625.717.8659 x40879"
                        },
                        new
                        {
                            CustomerId = 122L,
                            CreatedDateTime = new DateTime(2024, 11, 11, 22, 4, 8, 5, DateTimeKind.Utc).AddTicks(6965),
                            PhoneNumber = "774.647.3889"
                        },
                        new
                        {
                            CustomerId = 123L,
                            CreatedDateTime = new DateTime(2024, 11, 10, 23, 50, 0, 6, DateTimeKind.Utc).AddTicks(2101),
                            PhoneNumber = "895.860.5148 x56419"
                        },
                        new
                        {
                            CustomerId = 124L,
                            CreatedDateTime = new DateTime(2024, 11, 11, 1, 44, 37, 152, DateTimeKind.Utc).AddTicks(5398),
                            PhoneNumber = "365-203-7351 x8863"
                        },
                        new
                        {
                            CustomerId = 125L,
                            CreatedDateTime = new DateTime(2024, 11, 11, 2, 9, 20, 852, DateTimeKind.Utc).AddTicks(9231),
                            PhoneNumber = "(714) 852-7487 x79092"
                        },
                        new
                        {
                            CustomerId = 126L,
                            CreatedDateTime = new DateTime(2024, 11, 11, 3, 51, 29, 902, DateTimeKind.Utc).AddTicks(810),
                            PhoneNumber = "(383) 746-4210 x863"
                        },
                        new
                        {
                            CustomerId = 127L,
                            CreatedDateTime = new DateTime(2024, 11, 11, 4, 6, 22, 838, DateTimeKind.Utc).AddTicks(3780),
                            PhoneNumber = "783.884.0932 x735"
                        },
                        new
                        {
                            CustomerId = 128L,
                            CreatedDateTime = new DateTime(2024, 11, 11, 4, 59, 34, 478, DateTimeKind.Utc).AddTicks(799),
                            PhoneNumber = "1-704-956-9521"
                        },
                        new
                        {
                            CustomerId = 129L,
                            CreatedDateTime = new DateTime(2024, 11, 11, 2, 13, 19, 779, DateTimeKind.Utc).AddTicks(7758),
                            PhoneNumber = "587-349-2330"
                        },
                        new
                        {
                            CustomerId = 130L,
                            CreatedDateTime = new DateTime(2024, 11, 11, 11, 57, 32, 60, DateTimeKind.Utc).AddTicks(3210),
                            PhoneNumber = "965-217-3847"
                        },
                        new
                        {
                            CustomerId = 131L,
                            CreatedDateTime = new DateTime(2024, 11, 11, 12, 42, 3, 857, DateTimeKind.Utc).AddTicks(2983),
                            PhoneNumber = "(629) 972-6212 x68442"
                        },
                        new
                        {
                            CustomerId = 132L,
                            CreatedDateTime = new DateTime(2024, 11, 11, 10, 41, 35, 398, DateTimeKind.Utc).AddTicks(6159),
                            PhoneNumber = "551.904.4933"
                        },
                        new
                        {
                            CustomerId = 133L,
                            CreatedDateTime = new DateTime(2024, 11, 11, 5, 8, 45, 817, DateTimeKind.Utc).AddTicks(8474),
                            PhoneNumber = "967.701.5725 x0459"
                        },
                        new
                        {
                            CustomerId = 134L,
                            CreatedDateTime = new DateTime(2024, 11, 10, 23, 2, 19, 16, DateTimeKind.Utc).AddTicks(1949),
                            PhoneNumber = "1-875-394-0886 x548"
                        },
                        new
                        {
                            CustomerId = 135L,
                            CreatedDateTime = new DateTime(2024, 11, 11, 6, 8, 57, 793, DateTimeKind.Utc).AddTicks(5528),
                            PhoneNumber = "1-942-359-0326"
                        },
                        new
                        {
                            CustomerId = 136L,
                            CreatedDateTime = new DateTime(2024, 11, 10, 22, 57, 41, 238, DateTimeKind.Utc).AddTicks(4283),
                            PhoneNumber = "(815) 917-9125"
                        },
                        new
                        {
                            CustomerId = 137L,
                            CreatedDateTime = new DateTime(2024, 11, 11, 8, 19, 22, 715, DateTimeKind.Utc).AddTicks(1923),
                            PhoneNumber = "589-736-1932 x13161"
                        },
                        new
                        {
                            CustomerId = 138L,
                            CreatedDateTime = new DateTime(2024, 11, 11, 14, 15, 49, 83, DateTimeKind.Utc).AddTicks(7735),
                            PhoneNumber = "882.531.9714 x7980"
                        },
                        new
                        {
                            CustomerId = 139L,
                            CreatedDateTime = new DateTime(2024, 11, 11, 7, 46, 25, 385, DateTimeKind.Utc).AddTicks(1024),
                            PhoneNumber = "781.810.6477"
                        },
                        new
                        {
                            CustomerId = 140L,
                            CreatedDateTime = new DateTime(2024, 11, 11, 16, 27, 57, 496, DateTimeKind.Utc).AddTicks(1770),
                            PhoneNumber = "1-845-533-5005 x1581"
                        },
                        new
                        {
                            CustomerId = 141L,
                            CreatedDateTime = new DateTime(2024, 11, 11, 6, 41, 29, 464, DateTimeKind.Utc).AddTicks(3721),
                            PhoneNumber = "542.981.4924"
                        },
                        new
                        {
                            CustomerId = 142L,
                            CreatedDateTime = new DateTime(2024, 11, 11, 19, 49, 10, 448, DateTimeKind.Utc).AddTicks(5644),
                            PhoneNumber = "1-855-552-9691 x5552"
                        },
                        new
                        {
                            CustomerId = 143L,
                            CreatedDateTime = new DateTime(2024, 11, 11, 1, 19, 59, 879, DateTimeKind.Utc).AddTicks(7990),
                            PhoneNumber = "1-729-474-1723"
                        },
                        new
                        {
                            CustomerId = 144L,
                            CreatedDateTime = new DateTime(2024, 11, 11, 16, 41, 4, 501, DateTimeKind.Utc).AddTicks(7338),
                            PhoneNumber = "228-667-2605 x9625"
                        },
                        new
                        {
                            CustomerId = 145L,
                            CreatedDateTime = new DateTime(2024, 11, 10, 23, 44, 40, 603, DateTimeKind.Utc).AddTicks(6792),
                            PhoneNumber = "566-903-2926"
                        },
                        new
                        {
                            CustomerId = 146L,
                            CreatedDateTime = new DateTime(2024, 11, 11, 12, 23, 5, 926, DateTimeKind.Utc).AddTicks(601),
                            PhoneNumber = "431-833-6497 x870"
                        },
                        new
                        {
                            CustomerId = 147L,
                            CreatedDateTime = new DateTime(2024, 11, 11, 16, 1, 15, 559, DateTimeKind.Utc).AddTicks(3534),
                            PhoneNumber = "(357) 522-8337"
                        },
                        new
                        {
                            CustomerId = 148L,
                            CreatedDateTime = new DateTime(2024, 11, 10, 23, 5, 26, 237, DateTimeKind.Utc).AddTicks(4142),
                            PhoneNumber = "1-736-308-7421 x728"
                        },
                        new
                        {
                            CustomerId = 149L,
                            CreatedDateTime = new DateTime(2024, 11, 11, 11, 34, 47, 738, DateTimeKind.Utc).AddTicks(6479),
                            PhoneNumber = "408.766.2146 x8723"
                        },
                        new
                        {
                            CustomerId = 150L,
                            CreatedDateTime = new DateTime(2024, 11, 10, 23, 46, 51, 442, DateTimeKind.Utc).AddTicks(1273),
                            PhoneNumber = "589.325.0892 x98973"
                        },
                        new
                        {
                            CustomerId = 151L,
                            CreatedDateTime = new DateTime(2024, 11, 10, 22, 42, 56, 107, DateTimeKind.Utc).AddTicks(7898),
                            PhoneNumber = "562-686-8308"
                        },
                        new
                        {
                            CustomerId = 152L,
                            CreatedDateTime = new DateTime(2024, 11, 11, 4, 42, 5, 230, DateTimeKind.Utc).AddTicks(5474),
                            PhoneNumber = "1-307-622-1095"
                        },
                        new
                        {
                            CustomerId = 153L,
                            CreatedDateTime = new DateTime(2024, 11, 11, 7, 2, 20, 437, DateTimeKind.Utc).AddTicks(5736),
                            PhoneNumber = "436-931-7394 x7887"
                        },
                        new
                        {
                            CustomerId = 154L,
                            CreatedDateTime = new DateTime(2024, 11, 11, 0, 30, 3, 747, DateTimeKind.Utc).AddTicks(2038),
                            PhoneNumber = "(917) 616-7690 x742"
                        },
                        new
                        {
                            CustomerId = 155L,
                            CreatedDateTime = new DateTime(2024, 11, 11, 6, 1, 38, 717, DateTimeKind.Utc).AddTicks(5970),
                            PhoneNumber = "(909) 882-2990"
                        },
                        new
                        {
                            CustomerId = 156L,
                            CreatedDateTime = new DateTime(2024, 11, 10, 22, 37, 47, 370, DateTimeKind.Utc).AddTicks(5473),
                            PhoneNumber = "719.746.6033"
                        },
                        new
                        {
                            CustomerId = 157L,
                            CreatedDateTime = new DateTime(2024, 11, 11, 4, 5, 18, 379, DateTimeKind.Utc).AddTicks(8017),
                            PhoneNumber = "(666) 334-2002 x897"
                        },
                        new
                        {
                            CustomerId = 158L,
                            CreatedDateTime = new DateTime(2024, 11, 11, 2, 32, 29, 528, DateTimeKind.Utc).AddTicks(6946),
                            PhoneNumber = "362.764.5198 x0285"
                        },
                        new
                        {
                            CustomerId = 159L,
                            CreatedDateTime = new DateTime(2024, 11, 11, 17, 9, 17, 475, DateTimeKind.Utc).AddTicks(1969),
                            PhoneNumber = "1-654-966-5648 x51482"
                        },
                        new
                        {
                            CustomerId = 160L,
                            CreatedDateTime = new DateTime(2024, 11, 11, 10, 3, 39, 720, DateTimeKind.Utc).AddTicks(6447),
                            PhoneNumber = "1-837-513-0007 x8224"
                        },
                        new
                        {
                            CustomerId = 161L,
                            CreatedDateTime = new DateTime(2024, 11, 11, 1, 16, 38, 926, DateTimeKind.Utc).AddTicks(9860),
                            PhoneNumber = "402-430-5297"
                        },
                        new
                        {
                            CustomerId = 162L,
                            CreatedDateTime = new DateTime(2024, 11, 11, 1, 16, 48, 194, DateTimeKind.Utc).AddTicks(889),
                            PhoneNumber = "(505) 785-0141 x35436"
                        },
                        new
                        {
                            CustomerId = 163L,
                            CreatedDateTime = new DateTime(2024, 11, 11, 12, 19, 53, 529, DateTimeKind.Utc).AddTicks(7496),
                            PhoneNumber = "(530) 381-5194 x7818"
                        },
                        new
                        {
                            CustomerId = 164L,
                            CreatedDateTime = new DateTime(2024, 11, 11, 3, 26, 46, 359, DateTimeKind.Utc).AddTicks(2811),
                            PhoneNumber = "336-733-7437 x105"
                        },
                        new
                        {
                            CustomerId = 165L,
                            CreatedDateTime = new DateTime(2024, 11, 11, 14, 13, 30, 387, DateTimeKind.Utc).AddTicks(6507),
                            PhoneNumber = "1-554-754-7455 x49022"
                        },
                        new
                        {
                            CustomerId = 166L,
                            CreatedDateTime = new DateTime(2024, 11, 11, 4, 46, 39, 555, DateTimeKind.Utc).AddTicks(7778),
                            PhoneNumber = "(927) 322-3159"
                        },
                        new
                        {
                            CustomerId = 167L,
                            CreatedDateTime = new DateTime(2024, 11, 10, 22, 53, 4, 727, DateTimeKind.Utc).AddTicks(3271),
                            PhoneNumber = "1-961-643-1548"
                        },
                        new
                        {
                            CustomerId = 168L,
                            CreatedDateTime = new DateTime(2024, 11, 11, 17, 1, 26, 901, DateTimeKind.Utc).AddTicks(9055),
                            PhoneNumber = "318-836-1048 x034"
                        },
                        new
                        {
                            CustomerId = 169L,
                            CreatedDateTime = new DateTime(2024, 11, 11, 3, 34, 15, 592, DateTimeKind.Utc).AddTicks(4598),
                            PhoneNumber = "629.340.3507"
                        },
                        new
                        {
                            CustomerId = 170L,
                            CreatedDateTime = new DateTime(2024, 11, 11, 6, 50, 37, 619, DateTimeKind.Utc).AddTicks(6486),
                            PhoneNumber = "978-301-8540 x4798"
                        },
                        new
                        {
                            CustomerId = 171L,
                            CreatedDateTime = new DateTime(2024, 11, 11, 20, 38, 4, 94, DateTimeKind.Utc).AddTicks(9063),
                            PhoneNumber = "(226) 521-6319 x4382"
                        },
                        new
                        {
                            CustomerId = 172L,
                            CreatedDateTime = new DateTime(2024, 11, 11, 4, 31, 51, 394, DateTimeKind.Utc).AddTicks(8435),
                            PhoneNumber = "1-629-270-9256"
                        },
                        new
                        {
                            CustomerId = 173L,
                            CreatedDateTime = new DateTime(2024, 11, 11, 13, 41, 16, 697, DateTimeKind.Utc).AddTicks(846),
                            PhoneNumber = "706-546-4540 x375"
                        },
                        new
                        {
                            CustomerId = 174L,
                            CreatedDateTime = new DateTime(2024, 11, 11, 20, 17, 23, 369, DateTimeKind.Utc).AddTicks(3544),
                            PhoneNumber = "(357) 720-3195 x7904"
                        },
                        new
                        {
                            CustomerId = 175L,
                            CreatedDateTime = new DateTime(2024, 11, 11, 10, 47, 11, 386, DateTimeKind.Utc).AddTicks(2490),
                            PhoneNumber = "1-616-578-7917"
                        },
                        new
                        {
                            CustomerId = 176L,
                            CreatedDateTime = new DateTime(2024, 11, 11, 19, 16, 56, 579, DateTimeKind.Utc).AddTicks(9746),
                            PhoneNumber = "643-734-8509 x5342"
                        },
                        new
                        {
                            CustomerId = 177L,
                            CreatedDateTime = new DateTime(2024, 11, 10, 23, 24, 56, 346, DateTimeKind.Utc).AddTicks(7495),
                            PhoneNumber = "1-741-749-7437"
                        },
                        new
                        {
                            CustomerId = 178L,
                            CreatedDateTime = new DateTime(2024, 11, 11, 7, 21, 56, 267, DateTimeKind.Utc).AddTicks(5289),
                            PhoneNumber = "(954) 656-6203"
                        },
                        new
                        {
                            CustomerId = 179L,
                            CreatedDateTime = new DateTime(2024, 11, 11, 16, 35, 2, 263, DateTimeKind.Utc).AddTicks(8054),
                            PhoneNumber = "606-687-2476 x2423"
                        },
                        new
                        {
                            CustomerId = 180L,
                            CreatedDateTime = new DateTime(2024, 11, 11, 1, 14, 35, 201, DateTimeKind.Utc).AddTicks(4766),
                            PhoneNumber = "906.245.6430 x876"
                        },
                        new
                        {
                            CustomerId = 181L,
                            CreatedDateTime = new DateTime(2024, 11, 11, 10, 0, 22, 639, DateTimeKind.Utc).AddTicks(7533),
                            PhoneNumber = "(585) 289-0554"
                        },
                        new
                        {
                            CustomerId = 182L,
                            CreatedDateTime = new DateTime(2024, 11, 10, 23, 17, 27, 759, DateTimeKind.Utc).AddTicks(4096),
                            PhoneNumber = "(311) 524-1203 x910"
                        },
                        new
                        {
                            CustomerId = 183L,
                            CreatedDateTime = new DateTime(2024, 11, 11, 9, 24, 27, 73, DateTimeKind.Utc).AddTicks(3742),
                            PhoneNumber = "495-888-6834 x8368"
                        },
                        new
                        {
                            CustomerId = 184L,
                            CreatedDateTime = new DateTime(2024, 11, 11, 18, 44, 48, 605, DateTimeKind.Utc).AddTicks(8926),
                            PhoneNumber = "313-902-8624 x501"
                        },
                        new
                        {
                            CustomerId = 185L,
                            CreatedDateTime = new DateTime(2024, 11, 11, 20, 6, 31, 305, DateTimeKind.Utc).AddTicks(330),
                            PhoneNumber = "1-627-976-9666 x5874"
                        },
                        new
                        {
                            CustomerId = 186L,
                            CreatedDateTime = new DateTime(2024, 11, 11, 14, 13, 21, 459, DateTimeKind.Utc).AddTicks(8305),
                            PhoneNumber = "(587) 618-5509 x323"
                        },
                        new
                        {
                            CustomerId = 187L,
                            CreatedDateTime = new DateTime(2024, 11, 11, 11, 25, 33, 448, DateTimeKind.Utc).AddTicks(1361),
                            PhoneNumber = "762.343.0872 x257"
                        },
                        new
                        {
                            CustomerId = 188L,
                            CreatedDateTime = new DateTime(2024, 11, 11, 14, 23, 51, 925, DateTimeKind.Utc).AddTicks(4180),
                            PhoneNumber = "310.315.2356"
                        },
                        new
                        {
                            CustomerId = 189L,
                            CreatedDateTime = new DateTime(2024, 11, 11, 5, 36, 50, 88, DateTimeKind.Utc).AddTicks(3535),
                            PhoneNumber = "1-737-832-0860 x1613"
                        },
                        new
                        {
                            CustomerId = 190L,
                            CreatedDateTime = new DateTime(2024, 11, 11, 17, 43, 39, 799, DateTimeKind.Utc).AddTicks(3693),
                            PhoneNumber = "1-638-916-7103"
                        },
                        new
                        {
                            CustomerId = 191L,
                            CreatedDateTime = new DateTime(2024, 11, 10, 22, 42, 42, 249, DateTimeKind.Utc).AddTicks(3925),
                            PhoneNumber = "(516) 816-3044"
                        },
                        new
                        {
                            CustomerId = 192L,
                            CreatedDateTime = new DateTime(2024, 11, 11, 3, 25, 33, 407, DateTimeKind.Utc).AddTicks(3995),
                            PhoneNumber = "770-605-9880"
                        },
                        new
                        {
                            CustomerId = 193L,
                            CreatedDateTime = new DateTime(2024, 11, 11, 11, 18, 42, 625, DateTimeKind.Utc).AddTicks(5931),
                            PhoneNumber = "(350) 591-6900 x4894"
                        },
                        new
                        {
                            CustomerId = 194L,
                            CreatedDateTime = new DateTime(2024, 11, 11, 13, 25, 45, 195, DateTimeKind.Utc).AddTicks(9205),
                            PhoneNumber = "(961) 791-1597 x044"
                        },
                        new
                        {
                            CustomerId = 195L,
                            CreatedDateTime = new DateTime(2024, 11, 10, 22, 42, 1, 416, DateTimeKind.Utc).AddTicks(7939),
                            PhoneNumber = "554-260-3037"
                        },
                        new
                        {
                            CustomerId = 196L,
                            CreatedDateTime = new DateTime(2024, 11, 11, 6, 4, 29, 590, DateTimeKind.Utc).AddTicks(5316),
                            PhoneNumber = "1-791-351-4814"
                        },
                        new
                        {
                            CustomerId = 197L,
                            CreatedDateTime = new DateTime(2024, 11, 11, 3, 55, 45, 306, DateTimeKind.Utc).AddTicks(9786),
                            PhoneNumber = "1-290-420-2577 x0740"
                        },
                        new
                        {
                            CustomerId = 198L,
                            CreatedDateTime = new DateTime(2024, 11, 11, 10, 45, 23, 99, DateTimeKind.Utc).AddTicks(9325),
                            PhoneNumber = "633-690-5495 x430"
                        },
                        new
                        {
                            CustomerId = 199L,
                            CreatedDateTime = new DateTime(2024, 11, 11, 12, 35, 2, 595, DateTimeKind.Utc).AddTicks(5305),
                            PhoneNumber = "973-540-3725"
                        });
                });

            modelBuilder.Entity("Taxi_Backend.Models.DBModels.CustomerQueue", b =>
                {
                    b.Property<long>("CustomerQueueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("customerqueueid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("CustomerQueueId"));

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint")
                        .HasColumnName("companyid");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("createddatetime");

                    b.Property<long>("CustomerId")
                        .HasColumnType("bigint")
                        .HasColumnName("customerid");

                    b.Property<int>("QueueStatus")
                        .HasColumnType("integer")
                        .HasColumnName("queuestatus");

                    b.Property<long>("TripId")
                        .HasColumnType("bigint")
                        .HasColumnName("tripid");

                    b.HasKey("CustomerQueueId")
                        .HasName("pk_customerqueue");

                    b.HasIndex("CompanyId")
                        .HasDatabaseName("ix_customerqueue_companyid");

                    b.HasIndex("CreatedDateTime")
                        .IsDescending()
                        .HasDatabaseName("ix_customerqueue_createddatetime");

                    b.HasIndex("CustomerId")
                        .IsUnique()
                        .HasDatabaseName("ix_customerqueue_customerid")
                        .HasFilter("CustomerId is not null");

                    b.HasIndex("QueueStatus")
                        .HasDatabaseName("ix_customerqueue_queuestatus");

                    b.HasIndex("TripId")
                        .HasDatabaseName("ix_customerqueue_tripid");

                    b.ToTable("customerqueue", (string)null);
                });

            modelBuilder.Entity("Taxi_Backend.Models.DBModels.DriverQueue", b =>
                {
                    b.Property<long>("DriverQueueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("driverqueueid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("DriverQueueId"));

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint")
                        .HasColumnName("companyid");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("createddatetime");

                    b.Property<string>("CustomerQueueId")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("customerqueueid");

                    b.Property<int?>("DeclinedCount")
                        .HasColumnType("integer")
                        .HasColumnName("declinedcount");

                    b.Property<DateTime>("DeclinedTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("declinedtime");

                    b.Property<long>("DriverId")
                        .HasColumnType("bigint")
                        .HasColumnName("driverid");

                    b.Property<double>("Latitude")
                        .HasColumnType("decimal(8,6)")
                        .HasColumnName("latitude");

                    b.Property<double>("Longitude")
                        .HasColumnType("decimal(9,6)")
                        .HasColumnName("longitude");

                    b.Property<int>("QueueStatus")
                        .HasColumnType("integer")
                        .HasColumnName("queuestatus");

                    b.Property<long?>("TripId")
                        .HasColumnType("bigint")
                        .HasColumnName("tripid");

                    b.HasKey("DriverQueueId")
                        .HasName("pk_driverqueue");

                    b.HasIndex("CompanyId")
                        .HasDatabaseName("ix_driverqueue_companyid");

                    b.HasIndex("CreatedDateTime")
                        .IsDescending()
                        .HasDatabaseName("ix_driverqueue_createddatetime");

                    b.HasIndex("DriverId")
                        .IsUnique()
                        .HasDatabaseName("ix_driverqueue_driverid")
                        .HasFilter("DriverId is not null");

                    b.HasIndex("QueueStatus")
                        .HasDatabaseName("ix_driverqueue_queuestatus");

                    b.HasIndex("TripId")
                        .HasDatabaseName("ix_driverqueue_tripid");

                    b.ToTable("driverqueue", (string)null);
                });

            modelBuilder.Entity("Taxi_Backend.Models.DBModels.Taxi", b =>
                {
                    b.Property<long>("TaxiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("taxiid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("TaxiId"));

                    b.Property<int>("Color")
                        .HasColumnType("integer")
                        .HasColumnName("color");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("createddatetime");

                    b.Property<long>("DriverId")
                        .HasColumnType("bigint")
                        .HasColumnName("driverid");

                    b.Property<string>("LicensePlate")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("licenseplate");

                    b.Property<int>("Make")
                        .HasColumnType("integer")
                        .HasColumnName("make");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("model");

                    b.Property<int>("Size")
                        .HasColumnType("integer")
                        .HasColumnName("size");

                    b.HasKey("TaxiId")
                        .HasName("pk_taxi");

                    b.HasIndex("DriverId")
                        .IsUnique()
                        .HasDatabaseName("ix_taxi_driverid");

                    b.HasIndex("Size")
                        .HasDatabaseName("ix_taxi_size");

                    b.ToTable("taxi", (string)null);
                });

            modelBuilder.Entity("Taxi_Backend.Models.DBModels.Trip", b =>
                {
                    b.Property<long>("TripId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("tripid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("TripId"));

                    b.Property<int>("CalledTaxiSize")
                        .HasColumnType("integer")
                        .HasColumnName("calledtaxisize");

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint")
                        .HasColumnName("companyid");

                    b.Property<DateTime?>("CompletedTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("completedtime");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("createddatetime");

                    b.Property<long>("CustomerId")
                        .HasColumnType("bigint")
                        .HasColumnName("customerid");

                    b.Property<long?>("DriverId")
                        .HasColumnType("bigint")
                        .HasColumnName("driverid");

                    b.Property<string>("DropoffAddress")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("dropoffaddress");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("notes");

                    b.Property<string>("PickupAddress")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("pickupaddress");

                    b.Property<int>("TripStatus")
                        .HasColumnType("integer")
                        .HasColumnName("tripstatus");

                    b.HasKey("TripId")
                        .HasName("pk_trip");

                    b.HasIndex("CompanyId")
                        .HasDatabaseName("ix_trip_companyid");

                    b.HasIndex("CompletedTime")
                        .HasDatabaseName("ix_trip_completedtime");

                    b.HasIndex("CustomerId")
                        .HasDatabaseName("ix_trip_customerid");

                    b.HasIndex("DriverId")
                        .HasDatabaseName("ix_trip_driverid");

                    b.HasIndex("TripStatus")
                        .HasDatabaseName("ix_trip_tripstatus");

                    b.ToTable("trip", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<long>", b =>
                {
                    b.HasOne("Taxi_Backend.Models.DBModels.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_aspnetroleclaims_aspnetroles_roleid");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<long>", b =>
                {
                    b.HasOne("Taxi_Backend.Models.DBModels.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_aspnetuserclaims_aspnetusers_userid");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<long>", b =>
                {
                    b.HasOne("Taxi_Backend.Models.DBModels.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_aspnetuserlogins_aspnetusers_userid");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<long>", b =>
                {
                    b.HasOne("Taxi_Backend.Models.DBModels.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_aspnetusertokens_aspnetusers_userid");
                });

            modelBuilder.Entity("Taxi_Backend.Models.DBModels.AppUser", b =>
                {
                    b.HasOne("Taxi_Backend.Models.DBModels.Company", "Company")
                        .WithMany("Users")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_aspnetusers_company_companyid");

                    b.HasOne("Taxi_Backend.Models.DBModels.AppUser", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedUserId")
                        .HasConstraintName("fk_aspnetusers_aspnetusers_createduserid");

                    b.HasOne("Taxi_Backend.Models.DBModels.AppUser", "ModifiedUser")
                        .WithMany()
                        .HasForeignKey("ModifiedUserId")
                        .HasConstraintName("fk_aspnetusers_aspnetusers_modifieduserid");

                    b.Navigation("Company");

                    b.Navigation("CreatedUser");

                    b.Navigation("ModifiedUser");
                });

            modelBuilder.Entity("Taxi_Backend.Models.DBModels.AppUserRole", b =>
                {
                    b.HasOne("Taxi_Backend.Models.DBModels.AppRole", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_aspnetuserroles_aspnetroles_roleid");

                    b.HasOne("Taxi_Backend.Models.DBModels.AppUser", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_aspnetuserroles_aspnetusers_userid");

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Taxi_Backend.Models.DBModels.CustomerQueue", b =>
                {
                    b.HasOne("Taxi_Backend.Models.DBModels.Company", "Company")
                        .WithMany("CustomerQueues")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_customerqueue_company_companyid");

                    b.HasOne("Taxi_Backend.Models.DBModels.Customer", "Customer")
                        .WithMany("CustomerQueues")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_customerqueue_customer_customerid");

                    b.HasOne("Taxi_Backend.Models.DBModels.Trip", "Trip")
                        .WithMany()
                        .HasForeignKey("TripId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_customerqueue_trip_tripid");

                    b.Navigation("Company");

                    b.Navigation("Customer");

                    b.Navigation("Trip");
                });

            modelBuilder.Entity("Taxi_Backend.Models.DBModels.DriverQueue", b =>
                {
                    b.HasOne("Taxi_Backend.Models.DBModels.Company", "Company")
                        .WithMany("DriverQueues")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_driverqueue_company_companyid");

                    b.HasOne("Taxi_Backend.Models.DBModels.AppUser", "Driver")
                        .WithMany("DriverQueues")
                        .HasForeignKey("DriverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_driverqueue_users_driverid");

                    b.HasOne("Taxi_Backend.Models.DBModels.Trip", "Trip")
                        .WithMany()
                        .HasForeignKey("TripId")
                        .HasConstraintName("fk_driverqueue_trip_tripid");

                    b.Navigation("Company");

                    b.Navigation("Driver");

                    b.Navigation("Trip");
                });

            modelBuilder.Entity("Taxi_Backend.Models.DBModels.Taxi", b =>
                {
                    b.HasOne("Taxi_Backend.Models.DBModels.AppUser", "Driver")
                        .WithMany("Taxis")
                        .HasForeignKey("DriverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_taxi_users_driverid");

                    b.Navigation("Driver");
                });

            modelBuilder.Entity("Taxi_Backend.Models.DBModels.Trip", b =>
                {
                    b.HasOne("Taxi_Backend.Models.DBModels.Company", "Company")
                        .WithMany("Trips")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_trip_company_companyid");

                    b.HasOne("Taxi_Backend.Models.DBModels.Customer", "Customer")
                        .WithMany("Trips")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_trip_customer_customerid");

                    b.HasOne("Taxi_Backend.Models.DBModels.AppUser", "Driver")
                        .WithMany("Trips")
                        .HasForeignKey("DriverId")
                        .HasConstraintName("fk_trip_users_driverid");

                    b.Navigation("Company");

                    b.Navigation("Customer");

                    b.Navigation("Driver");
                });

            modelBuilder.Entity("Taxi_Backend.Models.DBModels.AppRole", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("Taxi_Backend.Models.DBModels.AppUser", b =>
                {
                    b.Navigation("DriverQueues");

                    b.Navigation("Taxis");

                    b.Navigation("Trips");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("Taxi_Backend.Models.DBModels.Company", b =>
                {
                    b.Navigation("CustomerQueues");

                    b.Navigation("DriverQueues");

                    b.Navigation("Trips");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Taxi_Backend.Models.DBModels.Customer", b =>
                {
                    b.Navigation("CustomerQueues");

                    b.Navigation("Trips");
                });
#pragma warning restore 612, 618
        }
    }
}
