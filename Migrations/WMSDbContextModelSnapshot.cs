// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WMS_backend.Data;

#nullable disable

namespace WMS_backend.Migrations
{
    [DbContext(typeof(WMSDbContext))]
    partial class WMSDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "uuid-ossp");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<long>", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("concurrencystamp");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("name");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("normalizedname");

                    b.HasKey("Id")
                        .HasName("pk_aspnetroles");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<long>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("claimtype");

                    b.Property<string>("ClaimValue")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("claimvalue");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint")
                        .HasColumnName("roleid");

                    b.HasKey("Id")
                        .HasName("pk_aspnetroleclaims");

                    b.HasIndex("RoleId")
                        .HasDatabaseName("ix_aspnetroleclaims_roleid");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<long>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("claimtype");

                    b.Property<string>("ClaimValue")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("claimvalue");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("userid");

                    b.HasKey("Id")
                        .HasName("pk_aspnetuserclaims");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_aspnetuserclaims_userid");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<long>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("loginprovider");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("providerkey");

                    b.Property<string>("ProviderDisplayName")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("providerdisplayname");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("userid");

                    b.HasKey("LoginProvider", "ProviderKey")
                        .HasName("pk_aspnetuserlogins");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_aspnetuserlogins_userid");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<long>", b =>
                {
                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("userid");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint")
                        .HasColumnName("roleid");

                    b.HasKey("UserId", "RoleId")
                        .HasName("pk_aspnetuserroles");

                    b.HasIndex("RoleId")
                        .HasDatabaseName("ix_aspnetuserroles_roleid");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<long>", b =>
                {
                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("userid");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("loginprovider");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("name");

                    b.Property<string>("Value")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("value");

                    b.HasKey("UserId", "LoginProvider", "Name")
                        .HasName("pk_aspnetusertokens");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.AppUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer")
                        .HasColumnName("accessfailedcount");

                    b.Property<long?>("CompanyId")
                        .HasColumnType("bigint")
                        .HasColumnName("companyid");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("concurrencystamp");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("createddatetime");

                    b.Property<long?>("CreatedUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("createduserid");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("email");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean")
                        .HasColumnName("emailconfirmed");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("firstname");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("boolean")
                        .HasColumnName("isarchived");

                    b.Property<DateTime?>("LastLoginDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("lastlogindatetime");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("lastname");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean")
                        .HasColumnName("lockoutenabled");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("lockoutend");

                    b.Property<DateTime>("ModifiedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("modifieddatetime");

                    b.Property<long?>("ModifiedUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("modifieduserid");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("normalizedemail");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("normalizedusername");

                    b.Property<string>("PasswordHash")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("passwordhash");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("phonenumber");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean")
                        .HasColumnName("phonenumberconfirmed");

                    b.Property<string>("SecurityStamp")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("securitystamp");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean")
                        .HasColumnName("twofactorenabled");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("username");

                    b.HasKey("Id")
                        .HasName("pk_aspnetusers");

                    b.HasIndex("CompanyId")
                        .HasDatabaseName("ix_aspnetusers_companyid");

                    b.HasIndex("CreatedUserId")
                        .HasDatabaseName("ix_aspnetusers_createduserid");

                    b.HasIndex("ModifiedUserId")
                        .HasDatabaseName("ix_aspnetusers_modifieduserid");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 100L,
                            AccessFailedCount = 0,
                            CompanyId = 101L,
                            ConcurrencyStamp = "50f5a329-4aab-4f64-9095-067856db3f85",
                            CreatedDateTime = new DateTime(2024, 9, 20, 10, 27, 27, 734, DateTimeKind.Utc).AddTicks(249),
                            Email = "Madeline88@yahoo.com",
                            EmailConfirmed = false,
                            FirstName = "Nash",
                            IsArchived = true,
                            LastName = "Rath",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 9, 20, 22, 42, 18, 910, DateTimeKind.Utc).AddTicks(6317),
                            NormalizedEmail = "MADELINE88@YAHOO.COM",
                            NormalizedUserName = "MADELINE88@YAHOO.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Madeline88@yahoo.com"
                        },
                        new
                        {
                            Id = 101L,
                            AccessFailedCount = 0,
                            CompanyId = 101L,
                            ConcurrencyStamp = "71f78036-c4fe-4937-820e-aca5e20dce27",
                            CreatedDateTime = new DateTime(2024, 9, 20, 21, 4, 23, 636, DateTimeKind.Utc).AddTicks(2684),
                            Email = "Bethel.Roberts6@hotmail.com",
                            EmailConfirmed = false,
                            FirstName = "Murray",
                            IsArchived = false,
                            LastName = "Hudson",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 9, 20, 8, 54, 14, 838, DateTimeKind.Utc).AddTicks(1844),
                            NormalizedEmail = "BETHEL.ROBERTS6@HOTMAIL.COM",
                            NormalizedUserName = "BETHEL.ROBERTS6@HOTMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Bethel.Roberts6@hotmail.com"
                        },
                        new
                        {
                            Id = 102L,
                            AccessFailedCount = 0,
                            CompanyId = 101L,
                            ConcurrencyStamp = "ccae47a7-2502-4c10-88de-de776dabbcda",
                            CreatedDateTime = new DateTime(2024, 9, 20, 11, 4, 58, 497, DateTimeKind.Utc).AddTicks(9250),
                            Email = "Trever95@hotmail.com",
                            EmailConfirmed = false,
                            FirstName = "Violette",
                            IsArchived = false,
                            LastName = "Ondricka",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 9, 20, 17, 42, 15, 343, DateTimeKind.Utc).AddTicks(8205),
                            NormalizedEmail = "TREVER95@HOTMAIL.COM",
                            NormalizedUserName = "TREVER95@HOTMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Trever95@hotmail.com"
                        },
                        new
                        {
                            Id = 103L,
                            AccessFailedCount = 0,
                            CompanyId = 100L,
                            ConcurrencyStamp = "6e8913ec-4c47-4ad6-8556-e17e5e9174b9",
                            CreatedDateTime = new DateTime(2024, 9, 20, 18, 41, 57, 114, DateTimeKind.Utc).AddTicks(2618),
                            Email = "Vicky7@yahoo.com",
                            EmailConfirmed = false,
                            FirstName = "Charlotte",
                            IsArchived = true,
                            LastName = "Bergstrom",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 9, 21, 2, 9, 35, 716, DateTimeKind.Utc).AddTicks(877),
                            NormalizedEmail = "VICKY7@YAHOO.COM",
                            NormalizedUserName = "VICKY7@YAHOO.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Vicky7@yahoo.com"
                        },
                        new
                        {
                            Id = 104L,
                            AccessFailedCount = 0,
                            CompanyId = 101L,
                            ConcurrencyStamp = "d75ab569-c5d0-44a1-9ee4-0ce2262bccc5",
                            CreatedDateTime = new DateTime(2024, 9, 20, 14, 36, 23, 20, DateTimeKind.Utc).AddTicks(6158),
                            Email = "Mckenna25@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Kaela",
                            IsArchived = false,
                            LastName = "Treutel",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 9, 20, 11, 29, 20, 981, DateTimeKind.Utc).AddTicks(9022),
                            NormalizedEmail = "MCKENNA25@GMAIL.COM",
                            NormalizedUserName = "MCKENNA25@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Mckenna25@gmail.com"
                        },
                        new
                        {
                            Id = 105L,
                            AccessFailedCount = 0,
                            CompanyId = 100L,
                            ConcurrencyStamp = "18760e2a-b18d-4a08-bb02-5bf45e7002e6",
                            CreatedDateTime = new DateTime(2024, 9, 20, 19, 52, 18, 164, DateTimeKind.Utc).AddTicks(9294),
                            Email = "Wilma_Feeney75@hotmail.com",
                            EmailConfirmed = false,
                            FirstName = "Nico",
                            IsArchived = true,
                            LastName = "Lowe",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 9, 21, 0, 44, 58, 57, DateTimeKind.Utc).AddTicks(3404),
                            NormalizedEmail = "WILMA_FEENEY75@HOTMAIL.COM",
                            NormalizedUserName = "WILMA_FEENEY75@HOTMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Wilma_Feeney75@hotmail.com"
                        },
                        new
                        {
                            Id = 106L,
                            AccessFailedCount = 0,
                            CompanyId = 101L,
                            ConcurrencyStamp = "39d8bf77-0391-4ab5-88a4-b414dfd7e55f",
                            CreatedDateTime = new DateTime(2024, 9, 20, 14, 24, 27, 762, DateTimeKind.Utc).AddTicks(8693),
                            Email = "Quinten_Goyette21@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Coty",
                            IsArchived = false,
                            LastName = "Jast",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 9, 20, 12, 4, 26, 603, DateTimeKind.Utc).AddTicks(8474),
                            NormalizedEmail = "QUINTEN_GOYETTE21@GMAIL.COM",
                            NormalizedUserName = "QUINTEN_GOYETTE21@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Quinten_Goyette21@gmail.com"
                        },
                        new
                        {
                            Id = 107L,
                            AccessFailedCount = 0,
                            CompanyId = 101L,
                            ConcurrencyStamp = "e8917dd0-d609-4d22-b386-3bf8bb58ec40",
                            CreatedDateTime = new DateTime(2024, 9, 20, 21, 15, 59, 365, DateTimeKind.Utc).AddTicks(7123),
                            Email = "Robb.Roberts79@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Sarina",
                            IsArchived = false,
                            LastName = "Fay",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 9, 20, 11, 34, 4, 391, DateTimeKind.Utc).AddTicks(53),
                            NormalizedEmail = "ROBB.ROBERTS79@GMAIL.COM",
                            NormalizedUserName = "ROBB.ROBERTS79@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Robb.Roberts79@gmail.com"
                        },
                        new
                        {
                            Id = 108L,
                            AccessFailedCount = 0,
                            CompanyId = 100L,
                            ConcurrencyStamp = "9ebe50e9-3928-4cb2-a0e7-b3e97aeea469",
                            CreatedDateTime = new DateTime(2024, 9, 21, 2, 45, 7, 123, DateTimeKind.Utc).AddTicks(7117),
                            Email = "Brice62@hotmail.com",
                            EmailConfirmed = false,
                            FirstName = "Josephine",
                            IsArchived = true,
                            LastName = "Pagac",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 9, 20, 3, 55, 56, 470, DateTimeKind.Utc).AddTicks(8927),
                            NormalizedEmail = "BRICE62@HOTMAIL.COM",
                            NormalizedUserName = "BRICE62@HOTMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Brice62@hotmail.com"
                        },
                        new
                        {
                            Id = 109L,
                            AccessFailedCount = 0,
                            CompanyId = 100L,
                            ConcurrencyStamp = "af3b6b35-a958-49f2-9ca8-44e2e0c14ea3",
                            CreatedDateTime = new DateTime(2024, 9, 20, 19, 7, 36, 841, DateTimeKind.Utc).AddTicks(5758),
                            Email = "Wellington33@yahoo.com",
                            EmailConfirmed = false,
                            FirstName = "Jamarcus",
                            IsArchived = true,
                            LastName = "Cartwright",
                            LockoutEnabled = false,
                            ModifiedDateTime = new DateTime(2024, 9, 20, 19, 28, 0, 994, DateTimeKind.Utc).AddTicks(7839),
                            NormalizedEmail = "WELLINGTON33@YAHOO.COM",
                            NormalizedUserName = "WELLINGTON33@YAHOO.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJCx0o43IjUq0DFnyjUNecUU9c/Iluz+U8QWtmqk3fT7PpJXB0sfDD+fBomd62Bohw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "E7EYWZPTSKQWK5AVQYJDWIUBFAUHH4PI",
                            TwoFactorEnabled = false,
                            UserName = "Wellington33@yahoo.com"
                        });
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.Client", b =>
                {
                    b.Property<long>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("clientid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ClientId"));

                    b.Property<string>("Address1")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("address1");

                    b.Property<string>("Address2")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("address2");

                    b.Property<string>("City")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("city");

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint")
                        .HasColumnName("companyid");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("createddatetime");

                    b.Property<long?>("CreatedUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("createduserid");

                    b.Property<long?>("ModifiedUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("modifieduserid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("name");

                    b.Property<string>("Note")
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)")
                        .HasColumnName("note");

                    b.Property<string>("State")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("state");

                    b.Property<DateTime>("UpdatedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updateddatetime");

                    b.Property<string>("Zip")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("zip");

                    b.HasKey("ClientId")
                        .HasName("pk_client");

                    b.HasIndex("CompanyId")
                        .HasDatabaseName("ix_client_companyid");

                    b.HasIndex("CreatedUserId")
                        .HasDatabaseName("ix_client_createduserid");

                    b.HasIndex("ModifiedUserId")
                        .HasDatabaseName("ix_client_modifieduserid");

                    b.ToTable("client", (string)null);

                    b.HasData(
                        new
                        {
                            ClientId = 100L,
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 188, DateTimeKind.Utc).AddTicks(7946),
                            Name = "Maximus Schaefer",
                            Note = "copy Corner Licensed Wooden Pants payment withdrawal Russian Ruble Kentucky framework Optimization bypassing",
                            State = "Wisconsin",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 188, DateTimeKind.Utc).AddTicks(7947)
                        },
                        new
                        {
                            ClientId = 101L,
                            Address2 = "Suite 877",
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 188, DateTimeKind.Utc).AddTicks(8903),
                            Name = "Ricky Witting",
                            State = "Arizona",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 188, DateTimeKind.Utc).AddTicks(8904)
                        },
                        new
                        {
                            ClientId = 102L,
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 188, DateTimeKind.Utc).AddTicks(9185),
                            Name = "Cleora Prosacco",
                            State = "Ohio",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 188, DateTimeKind.Utc).AddTicks(9186),
                            Zip = "70602-1333"
                        },
                        new
                        {
                            ClientId = 103L,
                            Address2 = "Apt. 249",
                            City = "Dareberg",
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 188, DateTimeKind.Utc).AddTicks(9366),
                            Name = "Dennis Upton",
                            Note = "port withdrawal Awesome Rubber Bike architectures Stravenue Graphic Interface Dynamic Centers B2B implement",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 188, DateTimeKind.Utc).AddTicks(9366)
                        },
                        new
                        {
                            ClientId = 104L,
                            Address1 = "024 Will Port",
                            Address2 = "Apt. 256",
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 188, DateTimeKind.Utc).AddTicks(9536),
                            Name = "Janelle Anderson",
                            Note = "Point array gold Rubber calculating Underpass New Jersey programming Riel ADP",
                            State = "Maryland",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 188, DateTimeKind.Utc).AddTicks(9537)
                        },
                        new
                        {
                            ClientId = 105L,
                            Address1 = "6428 Sonny Trafficway",
                            City = "South Deonbury",
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 188, DateTimeKind.Utc).AddTicks(9686),
                            Name = "Hermann Crona",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 188, DateTimeKind.Utc).AddTicks(9687),
                            Zip = "72236"
                        },
                        new
                        {
                            ClientId = 106L,
                            Address1 = "7553 Murphy Greens",
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 188, DateTimeKind.Utc).AddTicks(9888),
                            Name = "Odell Wisoky",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 188, DateTimeKind.Utc).AddTicks(9888)
                        },
                        new
                        {
                            ClientId = 107L,
                            City = "Waltonborough",
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(37),
                            Name = "Lera Heaney",
                            Note = "Generic matrices Wooden cross-platform Quetzal connect Canadian Dollar Customizable Practical Fresh Chips Brunei Darussalam",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(38)
                        },
                        new
                        {
                            ClientId = 108L,
                            Address2 = "Suite 427",
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(182),
                            Name = "Clarabelle Yundt",
                            Note = "IB infrastructures Sleek Soft Pants Supervisor workforce paradigms indexing Electronics & Outdoors Equatorial Guinea dynamic",
                            State = "New York",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(183),
                            Zip = "19929"
                        },
                        new
                        {
                            ClientId = 109L,
                            Address2 = "Apt. 282",
                            City = "Lake Eldonfurt",
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(373),
                            Name = "Velda Bernhard",
                            Note = "microchip Savings Account Falls Credit Card Account architect system Security Re-engineered fuchsia GB",
                            State = "Colorado",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(373),
                            Zip = "30045-5011"
                        },
                        new
                        {
                            ClientId = 110L,
                            Address2 = "Suite 009",
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(544),
                            Name = "Jalen Kuhic",
                            State = "Arkansas",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(545)
                        },
                        new
                        {
                            ClientId = 111L,
                            Address1 = "71448 Rodriguez Harbors",
                            Address2 = "Suite 454",
                            City = "North Florencioburgh",
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(723),
                            Name = "Ludie Beier",
                            Note = "SQL empower TCP Fantastic Dam Bedfordshire Rhode Island Refined Brand bluetooth",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(723),
                            Zip = "17819-5117"
                        },
                        new
                        {
                            ClientId = 112L,
                            Address1 = "8640 Bechtelar Mountain",
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(872),
                            Name = "Camille Bartoletti",
                            State = "Alaska",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(873)
                        },
                        new
                        {
                            ClientId = 113L,
                            Address1 = "2019 Thea Garden",
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(1055),
                            Name = "Yvonne Kihn",
                            Note = "Chief Steel target Facilitator out-of-the-box program violet Sports, Beauty & Sports Practical mint green",
                            State = "Iowa",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(1055),
                            Zip = "54557"
                        },
                        new
                        {
                            ClientId = 114L,
                            Address1 = "2409 Myrtice Ridges",
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(1211),
                            Name = "Marques Zboncak",
                            Note = "Panama fuchsia Toys Riel Tasty Steel Cheese drive Shoes, Shoes & Health Wooden Tasty USB",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(1212),
                            Zip = "69772-7712"
                        },
                        new
                        {
                            ClientId = 115L,
                            City = "West Tristianville",
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(1363),
                            Name = "Elbert Gulgowski",
                            Note = "infrastructures virtual models Dale generate moratorium port reboot Extended Malta",
                            State = "Oklahoma",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(1363)
                        },
                        new
                        {
                            ClientId = 116L,
                            Address1 = "941 Mills Bridge",
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(1533),
                            Name = "Juvenal Frami",
                            Note = "matrices Well Georgia hacking back-end Metal Health, Toys & Jewelery Tasty Stravenue withdrawal",
                            State = "Georgia",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(1534)
                        },
                        new
                        {
                            ClientId = 117L,
                            Address2 = "Suite 316",
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(1674),
                            Name = "Rosie Donnelly",
                            Note = "Clothing & Industrial neural cross-platform Indian Rupee feed neural strategize Investment Account Small Concrete Chair Texas",
                            State = "Colorado",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(1674)
                        },
                        new
                        {
                            ClientId = 118L,
                            Address1 = "470 Maximus Manors",
                            Address2 = "Apt. 388",
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(1823),
                            Name = "Damien Senger",
                            Note = "COM Response Books maroon Fantastic Granite Ball orange Sleek Concrete Salad Valley invoice Toys, Jewelery & Computers",
                            State = "Tennessee",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(1824)
                        },
                        new
                        {
                            ClientId = 119L,
                            Address1 = "48625 Dominique Tunnel",
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(1987),
                            Name = "Oscar Conn",
                            Note = "array Gorgeous Concrete Shirt ivory Gorgeous Steel Shirt eco-centric enterprise payment lime Avon users",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(1987)
                        },
                        new
                        {
                            ClientId = 120L,
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(2160),
                            Name = "Rodolfo Ratke",
                            State = "Florida",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(2160),
                            Zip = "03177"
                        },
                        new
                        {
                            ClientId = 121L,
                            City = "MacGyverborough",
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(2292),
                            Name = "Iliana Turcotte",
                            Note = "connecting protocol Rial Omani invoice transmitting bypass Avon Forward e-enable yellow",
                            State = "Alabama",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(2293),
                            Zip = "95302"
                        },
                        new
                        {
                            ClientId = 122L,
                            Address1 = "11569 Sanford Rue",
                            Address2 = "Apt. 540",
                            City = "Lake Antoinetteport",
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(2429),
                            Name = "Ismael Hudson",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(2430)
                        },
                        new
                        {
                            ClientId = 123L,
                            City = "West Jaclynchester",
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(2571),
                            Name = "Keely Mitchell",
                            State = "Colorado",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(2571)
                        },
                        new
                        {
                            ClientId = 124L,
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(2719),
                            Name = "Ryder Rice",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(2719),
                            Zip = "04408"
                        },
                        new
                        {
                            ClientId = 125L,
                            Address1 = "4066 Shaylee Street",
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(2859),
                            Name = "Frank Walsh",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(2859)
                        },
                        new
                        {
                            ClientId = 126L,
                            Address1 = "31179 Mills Roads",
                            City = "North Todland",
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(3016),
                            Name = "Antone Spinka",
                            State = "New Jersey",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(3016),
                            Zip = "93987-5140"
                        },
                        new
                        {
                            ClientId = 127L,
                            Address1 = "1904 Daisha Roads",
                            Address2 = "Apt. 062",
                            City = "Lake Alyciafurt",
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(3179),
                            Name = "Leonard Jakubowski",
                            Note = "Borders Gorgeous Concrete Chair Yemeni Rial Credit Card Account firewall Devolved connect Texas Customizable Oregon",
                            State = "Louisiana",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(3179),
                            Zip = "93340-7989"
                        },
                        new
                        {
                            ClientId = 128L,
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(3323),
                            Name = "Gavin Tremblay",
                            Note = "unleash copying PCI CFP Franc Director silver Rustic Steel Chair Granite channels Sleek",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(3323),
                            Zip = "65115"
                        },
                        new
                        {
                            ClientId = 129L,
                            Address1 = "31663 Jakob Dam",
                            City = "Sauerberg",
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(3464),
                            Name = "Andrew Wisoky",
                            Note = "Senior demand-driven Customer Texas Cocos (Keeling) Islands transmitting Minnesota Burundi Franc Plastic next-generation",
                            State = "California",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(3464),
                            Zip = "63673"
                        },
                        new
                        {
                            ClientId = 130L,
                            Address1 = "056 Wyman Lodge",
                            Address2 = "Suite 726",
                            City = "Fritschmouth",
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(3590),
                            Name = "Abdiel Ortiz",
                            State = "Iowa",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(3590)
                        },
                        new
                        {
                            ClientId = 131L,
                            Address1 = "035 Lambert Highway",
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(3745),
                            Name = "Prudence Barton",
                            Note = "Mount Technician Wyoming deposit paradigms Borders Wisconsin AI leverage front-end",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(3745)
                        },
                        new
                        {
                            ClientId = 132L,
                            Address1 = "447 Kirlin Villages",
                            Address2 = "Suite 662",
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(3897),
                            Name = "Priscilla Strosin",
                            Note = "bandwidth SCSI composite lavender Rapid invoice e-business Soft Ecuador Cambridgeshire",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(3898),
                            Zip = "28064-8734"
                        },
                        new
                        {
                            ClientId = 133L,
                            Address2 = "Apt. 917",
                            City = "Hayleestad",
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(4046),
                            Name = "Jazmin Flatley",
                            Note = "Generic withdrawal Spur Interactions Handcrafted Steel Towels concept Strategist connect Idaho Assimilated",
                            State = "South Dakota",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(4046),
                            Zip = "45857-3585"
                        },
                        new
                        {
                            ClientId = 134L,
                            Address1 = "771 Cecelia Locks",
                            City = "Alanisfort",
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(4190),
                            Name = "Vern Gleason",
                            Note = "neural-net Refined Concrete Hat teal methodical SSL secondary Incredible Cotton Salad Avon Loop firewall",
                            State = "Rhode Island",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(4191)
                        },
                        new
                        {
                            ClientId = 135L,
                            Address1 = "44477 Lockman Inlet",
                            Address2 = "Suite 195",
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(4360),
                            Name = "Alvina Zieme",
                            Note = "Arkansas Sri Lanka Rupee black Small Plastic Salad cross-platform Mauritius Rupee driver Codes specifically reserved for testing purposes Uruguay transmitting",
                            State = "North Carolina",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(4360),
                            Zip = "81988"
                        },
                        new
                        {
                            ClientId = 136L,
                            Address2 = "Suite 139",
                            City = "Port Nina",
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(4515),
                            Name = "Verlie Thiel",
                            Note = "SDD Brazilian Real Malagasy Ariary extensible black Operations ivory Incredible Wooden Salad utilize COM",
                            State = "Maine",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(4516)
                        },
                        new
                        {
                            ClientId = 137L,
                            Address2 = "Suite 547",
                            City = "Freidabury",
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(4655),
                            Name = "Amy Franecki",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(4656)
                        },
                        new
                        {
                            ClientId = 138L,
                            Address1 = "405 Don Islands",
                            City = "Mabellemouth",
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(4818),
                            Name = "Willard Steuber",
                            State = "North Dakota",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(4819)
                        },
                        new
                        {
                            ClientId = 139L,
                            Address1 = "2500 Gina Centers",
                            City = "Bartbury",
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(4999),
                            Name = "Germaine Reichert",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(4999),
                            Zip = "88197"
                        },
                        new
                        {
                            ClientId = 140L,
                            Address2 = "Apt. 163",
                            City = "Turnerborough",
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(5156),
                            Name = "Ottis Botsford",
                            Note = "revolutionize fresh-thinking solid state system Avon paradigms Virtual synthesize Forint Practical Steel Table",
                            State = "Idaho",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(5156),
                            Zip = "75734-3945"
                        },
                        new
                        {
                            ClientId = 141L,
                            City = "New Elton",
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(5297),
                            Name = "Theodora Prosacco",
                            Note = "Awesome invoice Indian Rupee Awesome Rubber Mouse Communications Frozen Ethiopia Home Loan Account Home & Tools Mall",
                            State = "Utah",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(5298)
                        },
                        new
                        {
                            ClientId = 142L,
                            Address1 = "030 Lueilwitz River",
                            City = "Bradlyport",
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(5459),
                            Name = "Aron Will",
                            State = "Oregon",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(5459),
                            Zip = "80329-2691"
                        },
                        new
                        {
                            ClientId = 143L,
                            City = "North Briana",
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(5626),
                            Name = "Laron Stark",
                            Note = "Internal Jewelery & Sports Ergonomic Unbranded Plastic Table Robust Implementation maximized payment Burkina Faso next-generation",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(5626)
                        },
                        new
                        {
                            ClientId = 144L,
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(5771),
                            Name = "Jo Tremblay",
                            Note = "Bedfordshire Garden silver emulation Open-source Bahraini Dinar CSS Product Incredible Cotton Bacon indigo",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(5771),
                            Zip = "74386"
                        },
                        new
                        {
                            ClientId = 145L,
                            Address2 = "Apt. 010",
                            City = "North Kelsiburgh",
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(5928),
                            Name = "Elinor Kiehn",
                            Note = "Gorgeous Home, Electronics & Movies Kuwait hacking flexibility Colorado Home copy Facilitator Savings Account",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(5929)
                        },
                        new
                        {
                            ClientId = 146L,
                            Address2 = "Suite 882",
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(6101),
                            Name = "Destinee Bernhard",
                            State = "Louisiana",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(6101),
                            Zip = "92032"
                        },
                        new
                        {
                            ClientId = 147L,
                            Address2 = "Suite 872",
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(6254),
                            Name = "Andy Gutmann",
                            State = "Colorado",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(6254)
                        },
                        new
                        {
                            ClientId = 148L,
                            Address1 = "47399 Viviane Falls",
                            Address2 = "Apt. 488",
                            City = "West Estafurt",
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(6399),
                            Name = "Hoyt Haag",
                            State = "Texas",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(6400)
                        },
                        new
                        {
                            ClientId = 149L,
                            Address1 = "632 Kathryn Ridges",
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(6557),
                            Name = "Flavio Gerhold",
                            State = "Louisiana",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(6557)
                        },
                        new
                        {
                            ClientId = 150L,
                            Address2 = "Apt. 645",
                            City = "Darrenburgh",
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(6777),
                            Name = "Sunny Satterfield",
                            State = "Alaska",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(6777),
                            Zip = "31159"
                        },
                        new
                        {
                            ClientId = 151L,
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(6924),
                            Name = "Jennyfer Murazik",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(6925)
                        },
                        new
                        {
                            ClientId = 152L,
                            Address2 = "Suite 844",
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(7068),
                            Name = "Clovis Strosin",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(7068),
                            Zip = "79514"
                        },
                        new
                        {
                            ClientId = 153L,
                            Address1 = "93775 Violette Ways",
                            Address2 = "Apt. 357",
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(7274),
                            Name = "Roberto Pfeffer",
                            State = "Nevada",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(7274),
                            Zip = "43873-9032"
                        },
                        new
                        {
                            ClientId = 154L,
                            Address1 = "358 Rau Field",
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(7442),
                            Name = "Leda Champlin",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(7443),
                            Zip = "42651"
                        },
                        new
                        {
                            ClientId = 155L,
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(7603),
                            Name = "Kenneth Greenholt",
                            Note = "Rustic Mill Indiana Metal distributed hack Beauty, Jewelery & Outdoors Refined Soft Tuna Fantastic Plastic Table Roads",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(7603),
                            Zip = "83074-2249"
                        },
                        new
                        {
                            ClientId = 156L,
                            Address2 = "Suite 861",
                            City = "New Emilioberg",
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(7744),
                            Name = "Verner Schmitt",
                            Note = "Florida Markets redundant Boliviano boliviano payment Small Soft Fish e-business real-time lime methodical",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(7744),
                            Zip = "29720"
                        },
                        new
                        {
                            ClientId = 157L,
                            Address1 = "58251 Jacobs Burgs",
                            City = "Elviebury",
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(7908),
                            Name = "Lucas McKenzie",
                            Note = "orchid Lock next generation Florida Florida Centralized parse Buckinghamshire Rustic Concrete Hat mission-critical",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(7908),
                            Zip = "36903-7948"
                        },
                        new
                        {
                            ClientId = 158L,
                            City = "Kianaburgh",
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(8052),
                            Name = "Duncan Ryan",
                            Note = "synergies driver Sleek Metal Chair invoice Minnesota Steel 24/365 Incredible Frozen Shoes Bedfordshire 24/7",
                            State = "Delaware",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(8052)
                        },
                        new
                        {
                            ClientId = 159L,
                            City = "North Cesarhaven",
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(8196),
                            Name = "Tevin Abernathy",
                            Note = "withdrawal Concrete Prairie Movies, Shoes & Sports Norway driver Credit Card Account empowering Rapid Avon",
                            State = "Montana",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(8196)
                        },
                        new
                        {
                            ClientId = 160L,
                            Address2 = "Apt. 149",
                            City = "New Chloe",
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(8343),
                            Name = "Antwon Greenholt",
                            Note = "maroon disintermediate Berkshire white Rwanda Consultant South Carolina Wooden challenge ADP",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(8344),
                            Zip = "86534"
                        },
                        new
                        {
                            ClientId = 161L,
                            City = "Lockmanburgh",
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(8498),
                            Name = "Maurice Kutch",
                            Note = "syndicate Technician Peru SSL Checking Account Parkway Glen Mews Baby Plastic",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(8498)
                        },
                        new
                        {
                            ClientId = 162L,
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(8629),
                            Name = "Lizeth Hermiston",
                            Note = "Handcrafted invoice compelling Rufiyaa Intelligent Cotton Mouse Soft JSON Mali port unleash",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(8629)
                        },
                        new
                        {
                            ClientId = 163L,
                            Address2 = "Suite 860",
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(8769),
                            Name = "Verla Oberbrunner",
                            Note = "rich utilisation Argentine Peso application Walk Gorgeous Granite Chicken interface invoice payment Marketing",
                            State = "Michigan",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(8769),
                            Zip = "65200"
                        },
                        new
                        {
                            ClientId = 164L,
                            Address1 = "286 Torphy Ville",
                            City = "East Doloresside",
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(8903),
                            Name = "Pedro Collins",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(8903)
                        },
                        new
                        {
                            ClientId = 165L,
                            Address2 = "Apt. 314",
                            City = "North Bridgetport",
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(9098),
                            Name = "Vinnie Lowe",
                            Note = "California Buckinghamshire Via Electronics Engineer Sleek Gorgeous Cotton Cheese Gorgeous Cotton Chips Rustic Rubber Bacon Intelligent Concrete Pants",
                            State = "Florida",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(9098)
                        },
                        new
                        {
                            ClientId = 166L,
                            Address2 = "Suite 006",
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(9267),
                            Name = "Delta Huel",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(9268),
                            Zip = "89478-7649"
                        },
                        new
                        {
                            ClientId = 167L,
                            Address1 = "396 Oma Rapid",
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(9427),
                            Name = "Johanna Williamson",
                            State = "Arkansas",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(9427)
                        },
                        new
                        {
                            ClientId = 168L,
                            Address1 = "106 Waelchi Point",
                            City = "South Saige",
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(9566),
                            Name = "Yessenia Krajcik",
                            State = "Illinois",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(9566),
                            Zip = "60681-8011"
                        },
                        new
                        {
                            ClientId = 169L,
                            Address2 = "Apt. 836",
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(9723),
                            Name = "Trystan Kuphal",
                            Note = "Avon Frozen bluetooth empower Corners Vermont West Virginia Baby monitor encoding",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(9724)
                        },
                        new
                        {
                            ClientId = 170L,
                            Address1 = "958 Lucius Throughway",
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(9843),
                            Name = "Ethan Cummings",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 189, DateTimeKind.Utc).AddTicks(9844),
                            Zip = "91463"
                        },
                        new
                        {
                            ClientId = 171L,
                            Address2 = "Apt. 498",
                            City = "East Genetown",
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 190, DateTimeKind.Utc).AddTicks(20),
                            Name = "Oleta Strosin",
                            State = "Alaska",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 190, DateTimeKind.Utc).AddTicks(20)
                        },
                        new
                        {
                            ClientId = 172L,
                            Address2 = "Suite 403",
                            City = "North Loniechester",
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 190, DateTimeKind.Utc).AddTicks(177),
                            Name = "Lavern Dach",
                            Note = "initiatives green Personal Loan Account Virtual Plastic Implementation Assistant Personal Loan Account payment Canada",
                            State = "Tennessee",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 190, DateTimeKind.Utc).AddTicks(178),
                            Zip = "86391-1514"
                        },
                        new
                        {
                            ClientId = 173L,
                            Address2 = "Suite 525",
                            City = "O'Keefemouth",
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 190, DateTimeKind.Utc).AddTicks(310),
                            Name = "Danial Hickle",
                            Note = "United Kingdom digital redundant synergy back-end Afghani context-sensitive technologies Regional dynamic",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 190, DateTimeKind.Utc).AddTicks(310)
                        },
                        new
                        {
                            ClientId = 174L,
                            Address2 = "Apt. 754",
                            City = "Leannonton",
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 190, DateTimeKind.Utc).AddTicks(442),
                            Name = "Kaylah Mante",
                            State = "Mississippi",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 190, DateTimeKind.Utc).AddTicks(442)
                        },
                        new
                        {
                            ClientId = 175L,
                            Address1 = "306 Frederik Spurs",
                            City = "Murrayton",
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 190, DateTimeKind.Utc).AddTicks(791),
                            Name = "Lisa Schneider",
                            State = "South Carolina",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 190, DateTimeKind.Utc).AddTicks(791)
                        },
                        new
                        {
                            ClientId = 176L,
                            Address2 = "Suite 620",
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 190, DateTimeKind.Utc).AddTicks(948),
                            Name = "Bernita Altenwerth",
                            Note = "architect primary Unbranded Cotton Salad Executive Fresh Home Loan Account Canyon Ethiopia connect TCP",
                            State = "Tennessee",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 190, DateTimeKind.Utc).AddTicks(948),
                            Zip = "96844-4928"
                        },
                        new
                        {
                            ClientId = 177L,
                            Address2 = "Apt. 257",
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 190, DateTimeKind.Utc).AddTicks(1114),
                            Name = "Marie Gutmann",
                            State = "Washington",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 190, DateTimeKind.Utc).AddTicks(1115),
                            Zip = "30496-4303"
                        },
                        new
                        {
                            ClientId = 178L,
                            Address2 = "Apt. 124",
                            City = "Watsonton",
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 190, DateTimeKind.Utc).AddTicks(1283),
                            Name = "Eric Strosin",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 190, DateTimeKind.Utc).AddTicks(1284)
                        },
                        new
                        {
                            ClientId = 179L,
                            Address2 = "Apt. 608",
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 190, DateTimeKind.Utc).AddTicks(1475),
                            Name = "Wilma O'Reilly",
                            Note = "Horizontal lavender monitor Generic Fresh Pants connecting Rustic Fresh Mouse Dalasi backing up empowering Dynamic",
                            State = "New York",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 190, DateTimeKind.Utc).AddTicks(1475)
                        },
                        new
                        {
                            ClientId = 180L,
                            Address1 = "0376 Little Extensions",
                            City = "West Vaughnhaven",
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 190, DateTimeKind.Utc).AddTicks(1634),
                            Name = "Lucile Kohler",
                            State = "Virginia",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 190, DateTimeKind.Utc).AddTicks(1634)
                        },
                        new
                        {
                            ClientId = 181L,
                            Address1 = "520 Calista Estate",
                            City = "Doyleville",
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 190, DateTimeKind.Utc).AddTicks(1789),
                            Name = "Lauretta Champlin",
                            Note = "Shore Investment Account recontextualize transition JBOD silver Total Michigan solutions Granite",
                            State = "Arkansas",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 190, DateTimeKind.Utc).AddTicks(1790),
                            Zip = "11277"
                        },
                        new
                        {
                            ClientId = 182L,
                            Address1 = "8034 Rogahn Greens",
                            City = "East Katarina",
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 190, DateTimeKind.Utc).AddTicks(1918),
                            Name = "Destini Mraz",
                            Note = "deposit Open-source Avon Unbranded Generic Cape Forward Buckinghamshire Gorgeous Saint Pierre and Miquelon",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 190, DateTimeKind.Utc).AddTicks(1918),
                            Zip = "98877"
                        },
                        new
                        {
                            ClientId = 183L,
                            City = "Iketon",
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 190, DateTimeKind.Utc).AddTicks(2069),
                            Name = "Emelia Labadie",
                            Note = "bus transmitter hack Books & Clothing Strategist back-end turquoise online Savings Account Cambridgeshire",
                            State = "South Carolina",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 190, DateTimeKind.Utc).AddTicks(2070)
                        },
                        new
                        {
                            ClientId = 184L,
                            Address1 = "40194 Gaston Islands",
                            City = "Caseyfort",
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 190, DateTimeKind.Utc).AddTicks(2223),
                            Name = "Kip Bogisich",
                            State = "Arkansas",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 190, DateTimeKind.Utc).AddTicks(2223)
                        },
                        new
                        {
                            ClientId = 185L,
                            City = "North Maeganhaven",
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 190, DateTimeKind.Utc).AddTicks(2365),
                            Name = "Cassandra Roob",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 190, DateTimeKind.Utc).AddTicks(2366),
                            Zip = "67000-2784"
                        },
                        new
                        {
                            ClientId = 186L,
                            Address1 = "4243 Nicolas Trace",
                            Address2 = "Apt. 644",
                            City = "New Nettieshire",
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 190, DateTimeKind.Utc).AddTicks(2550),
                            Name = "Abdullah Bayer",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 190, DateTimeKind.Utc).AddTicks(2550)
                        },
                        new
                        {
                            ClientId = 187L,
                            Address1 = "723 Zemlak Creek",
                            Address2 = "Apt. 091",
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 190, DateTimeKind.Utc).AddTicks(2721),
                            Name = "Quinten McGlynn",
                            State = "Florida",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 190, DateTimeKind.Utc).AddTicks(2721)
                        },
                        new
                        {
                            ClientId = 188L,
                            Address1 = "0068 Flatley Crescent",
                            City = "New Jocelynton",
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 190, DateTimeKind.Utc).AddTicks(2871),
                            Name = "Sarah Bauch",
                            State = "Mississippi",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 190, DateTimeKind.Utc).AddTicks(2871)
                        },
                        new
                        {
                            ClientId = 189L,
                            City = "North Leannafort",
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 190, DateTimeKind.Utc).AddTicks(3045),
                            Name = "Franz West",
                            State = "Georgia",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 190, DateTimeKind.Utc).AddTicks(3046)
                        },
                        new
                        {
                            ClientId = 190L,
                            Address1 = "426 Caroline Common",
                            Address2 = "Apt. 399",
                            City = "Zoieton",
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 190, DateTimeKind.Utc).AddTicks(3224),
                            Name = "Camila Osinski",
                            Note = "Samoa Avon Cyprus Buckinghamshire feed Open-architected Re-engineered Bedfordshire Assurance emulation",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 190, DateTimeKind.Utc).AddTicks(3225)
                        },
                        new
                        {
                            ClientId = 191L,
                            Address2 = "Suite 921",
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 190, DateTimeKind.Utc).AddTicks(3366),
                            Name = "Pink Hoeger",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 190, DateTimeKind.Utc).AddTicks(3366),
                            Zip = "15259-1850"
                        },
                        new
                        {
                            ClientId = 192L,
                            Address1 = "508 Pagac River",
                            Address2 = "Suite 147",
                            City = "Gulgowskiside",
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 190, DateTimeKind.Utc).AddTicks(3499),
                            Name = "Reuben Mann",
                            State = "Nebraska",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 190, DateTimeKind.Utc).AddTicks(3500),
                            Zip = "00170"
                        },
                        new
                        {
                            ClientId = 193L,
                            City = "New Wilmaton",
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 190, DateTimeKind.Utc).AddTicks(3631),
                            Name = "Chandler Christiansen",
                            Note = "Internal payment navigating Tasty Steel Towels Interactions International ADP process improvement transitional programming",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 190, DateTimeKind.Utc).AddTicks(3631)
                        },
                        new
                        {
                            ClientId = 194L,
                            Address2 = "Apt. 899",
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 190, DateTimeKind.Utc).AddTicks(3777),
                            Name = "Mckenna Breitenberg",
                            Note = "Industrial calculating Adaptive Borders Incredible Granite Shirt Dynamic Intelligent Frozen Ball Response deposit Automotive & Industrial",
                            State = "Idaho",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 190, DateTimeKind.Utc).AddTicks(3777),
                            Zip = "98913"
                        },
                        new
                        {
                            ClientId = 195L,
                            Address2 = "Suite 535",
                            City = "McCulloughshire",
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 190, DateTimeKind.Utc).AddTicks(3937),
                            Name = "Kian McClure",
                            Note = "Configurable Program Buckinghamshire niches Handcrafted Rubber Chair connecting Movies Ohio Rustic Metal Table Personal Loan Account",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 190, DateTimeKind.Utc).AddTicks(3937),
                            Zip = "23192"
                        },
                        new
                        {
                            ClientId = 196L,
                            Address1 = "581 Abbigail Highway",
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 190, DateTimeKind.Utc).AddTicks(4080),
                            Name = "Luis Rempel",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 190, DateTimeKind.Utc).AddTicks(4081),
                            Zip = "26215"
                        },
                        new
                        {
                            ClientId = 197L,
                            City = "East Aiden",
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 190, DateTimeKind.Utc).AddTicks(4235),
                            Name = "Billy Daniel",
                            Note = "Money Market Account generate Technician European Unit of Account 17(E.U.A.-17) indigo Small Concrete Chair drive markets ivory fuchsia",
                            State = "Nevada",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 190, DateTimeKind.Utc).AddTicks(4236),
                            Zip = "03800"
                        },
                        new
                        {
                            ClientId = 198L,
                            Address1 = "91888 Jeramy Via",
                            City = "East Rebecamouth",
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 190, DateTimeKind.Utc).AddTicks(4416),
                            Name = "Alejandrin O'Conner",
                            Note = "models Berkshire moderator synthesize GB copying salmon sky blue grow Ville",
                            State = "Maine",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 190, DateTimeKind.Utc).AddTicks(4416),
                            Zip = "97827"
                        },
                        new
                        {
                            ClientId = 199L,
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 190, DateTimeKind.Utc).AddTicks(4561),
                            Name = "Retta Schumm",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 190, DateTimeKind.Utc).AddTicks(4562)
                        });
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.Company", b =>
                {
                    b.Property<long>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("companyid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("CompanyId"));

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("address");

                    b.Property<string>("Contact")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("contact");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("createddatetime");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("email");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("boolean")
                        .HasColumnName("isarchived");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("name");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("phonenumber");

                    b.HasKey("CompanyId")
                        .HasName("pk_company");

                    b.ToTable("company", (string)null);

                    b.HasData(
                        new
                        {
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 20, 12, 33, 50, 608, DateTimeKind.Utc).AddTicks(6520),
                            IsArchived = false,
                            Name = "Jedediah Mills"
                        },
                        new
                        {
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 20, 20, 11, 6, 837, DateTimeKind.Utc).AddTicks(8419),
                            IsArchived = false,
                            Name = "Trenton Wilkinson"
                        });
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.CompanyCourier", b =>
                {
                    b.Property<long>("CompanyCourierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("companycourierid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("CompanyCourierId"));

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint")
                        .HasColumnName("companyid");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("createddatetime");

                    b.Property<long?>("CreatedUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("createduserid");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("key");

                    b.Property<long?>("ModifiedUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("modifieduserid");

                    b.Property<DateTime>("UpdatedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updateddatetime");

                    b.HasKey("CompanyCourierId")
                        .HasName("pk_companycourier");

                    b.HasIndex("CompanyId")
                        .HasDatabaseName("ix_companycourier_companyid");

                    b.HasIndex("CreatedUserId")
                        .HasDatabaseName("ix_companycourier_createduserid");

                    b.HasIndex("ModifiedUserId")
                        .HasDatabaseName("ix_companycourier_modifieduserid");

                    b.ToTable("companycourier", (string)null);
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.CompanyPermission", b =>
                {
                    b.Property<long>("CompanyPermissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("companypermissionid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("CompanyPermissionId"));

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint")
                        .HasColumnName("companyid");

                    b.Property<int>("PermissionType")
                        .HasColumnType("integer")
                        .HasColumnName("permissiontype");

                    b.HasKey("CompanyPermissionId")
                        .HasName("pk_companypermission");

                    b.HasIndex("CompanyId")
                        .HasDatabaseName("ix_companypermission_companyid");

                    b.ToTable("companypermission", (string)null);

                    b.HasData(
                        new
                        {
                            CompanyPermissionId = 100L,
                            CompanyId = 100L,
                            PermissionType = 4
                        },
                        new
                        {
                            CompanyPermissionId = 101L,
                            CompanyId = 100L,
                            PermissionType = 13
                        },
                        new
                        {
                            CompanyPermissionId = 102L,
                            CompanyId = 100L,
                            PermissionType = 20
                        },
                        new
                        {
                            CompanyPermissionId = 103L,
                            CompanyId = 100L,
                            PermissionType = 30
                        },
                        new
                        {
                            CompanyPermissionId = 104L,
                            CompanyId = 100L,
                            PermissionType = 40
                        },
                        new
                        {
                            CompanyPermissionId = 105L,
                            CompanyId = 100L,
                            PermissionType = 50
                        },
                        new
                        {
                            CompanyPermissionId = 106L,
                            CompanyId = 100L,
                            PermissionType = 60
                        },
                        new
                        {
                            CompanyPermissionId = 107L,
                            CompanyId = 100L,
                            PermissionType = 70
                        },
                        new
                        {
                            CompanyPermissionId = 108L,
                            CompanyId = 100L,
                            PermissionType = 80
                        },
                        new
                        {
                            CompanyPermissionId = 109L,
                            CompanyId = 100L,
                            PermissionType = 90
                        },
                        new
                        {
                            CompanyPermissionId = 110L,
                            CompanyId = 100L,
                            PermissionType = 95
                        },
                        new
                        {
                            CompanyPermissionId = 111L,
                            CompanyId = 100L,
                            PermissionType = 100
                        },
                        new
                        {
                            CompanyPermissionId = 112L,
                            CompanyId = 100L,
                            PermissionType = 110
                        },
                        new
                        {
                            CompanyPermissionId = 113L,
                            CompanyId = 100L,
                            PermissionType = 120
                        },
                        new
                        {
                            CompanyPermissionId = 114L,
                            CompanyId = 100L,
                            PermissionType = 130
                        },
                        new
                        {
                            CompanyPermissionId = 115L,
                            CompanyId = 100L,
                            PermissionType = 140
                        },
                        new
                        {
                            CompanyPermissionId = 116L,
                            CompanyId = 100L,
                            PermissionType = 150
                        },
                        new
                        {
                            CompanyPermissionId = 117L,
                            CompanyId = 100L,
                            PermissionType = 170
                        },
                        new
                        {
                            CompanyPermissionId = 118L,
                            CompanyId = 100L,
                            PermissionType = 180
                        },
                        new
                        {
                            CompanyPermissionId = 119L,
                            CompanyId = 101L,
                            PermissionType = 4
                        },
                        new
                        {
                            CompanyPermissionId = 120L,
                            CompanyId = 101L,
                            PermissionType = 13
                        },
                        new
                        {
                            CompanyPermissionId = 121L,
                            CompanyId = 101L,
                            PermissionType = 20
                        },
                        new
                        {
                            CompanyPermissionId = 122L,
                            CompanyId = 101L,
                            PermissionType = 30
                        },
                        new
                        {
                            CompanyPermissionId = 123L,
                            CompanyId = 101L,
                            PermissionType = 40
                        },
                        new
                        {
                            CompanyPermissionId = 124L,
                            CompanyId = 101L,
                            PermissionType = 50
                        },
                        new
                        {
                            CompanyPermissionId = 125L,
                            CompanyId = 101L,
                            PermissionType = 60
                        },
                        new
                        {
                            CompanyPermissionId = 126L,
                            CompanyId = 101L,
                            PermissionType = 70
                        },
                        new
                        {
                            CompanyPermissionId = 127L,
                            CompanyId = 101L,
                            PermissionType = 80
                        },
                        new
                        {
                            CompanyPermissionId = 128L,
                            CompanyId = 101L,
                            PermissionType = 90
                        },
                        new
                        {
                            CompanyPermissionId = 129L,
                            CompanyId = 101L,
                            PermissionType = 95
                        },
                        new
                        {
                            CompanyPermissionId = 130L,
                            CompanyId = 101L,
                            PermissionType = 100
                        },
                        new
                        {
                            CompanyPermissionId = 131L,
                            CompanyId = 101L,
                            PermissionType = 110
                        },
                        new
                        {
                            CompanyPermissionId = 132L,
                            CompanyId = 101L,
                            PermissionType = 120
                        },
                        new
                        {
                            CompanyPermissionId = 133L,
                            CompanyId = 101L,
                            PermissionType = 130
                        },
                        new
                        {
                            CompanyPermissionId = 134L,
                            CompanyId = 101L,
                            PermissionType = 140
                        },
                        new
                        {
                            CompanyPermissionId = 135L,
                            CompanyId = 101L,
                            PermissionType = 150
                        },
                        new
                        {
                            CompanyPermissionId = 136L,
                            CompanyId = 101L,
                            PermissionType = 170
                        },
                        new
                        {
                            CompanyPermissionId = 137L,
                            CompanyId = 101L,
                            PermissionType = 180
                        });
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.CompanyPlatform", b =>
                {
                    b.Property<long>("CompanyPlatformId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("companyplatformid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("CompanyPlatformId"));

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint")
                        .HasColumnName("companyid");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("createddatetime");

                    b.Property<long?>("CreatedUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("createduserid");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("key");

                    b.Property<long?>("ModifiedUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("modifieduserid");

                    b.Property<DateTime>("UpdatedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updateddatetime");

                    b.HasKey("CompanyPlatformId")
                        .HasName("pk_companyplatform");

                    b.HasIndex("CompanyId")
                        .HasDatabaseName("ix_companyplatform_companyid");

                    b.HasIndex("CreatedUserId")
                        .HasDatabaseName("ix_companyplatform_createduserid");

                    b.HasIndex("ModifiedUserId")
                        .HasDatabaseName("ix_companyplatform_modifieduserid");

                    b.ToTable("companyplatform", (string)null);
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.Courier", b =>
                {
                    b.Property<long>("CourierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("courierid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("CourierId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("name");

                    b.HasKey("CourierId")
                        .HasName("pk_courier");

                    b.ToTable("courier", (string)null);

                    b.HasData(
                        new
                        {
                            CourierId = 100L,
                            Name = "Amazon"
                        },
                        new
                        {
                            CourierId = 101L,
                            Name = "USPS"
                        });
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.Inventory", b =>
                {
                    b.Property<Guid>("InventoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("inventoryid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint")
                        .HasColumnName("companyid");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("createddatetime");

                    b.Property<long?>("CreatedUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("createduserid");

                    b.Property<DateTime?>("ExpirationDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("expirationdate");

                    b.Property<string>("LotNumber")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("lotnumber");

                    b.Property<long?>("ModifiedUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("modifieduserid");

                    b.Property<Guid>("ProductVariantId")
                        .HasColumnType("uuid")
                        .HasColumnName("productvariantid");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer")
                        .HasColumnName("quantity");

                    b.Property<Guid>("RackId")
                        .HasColumnType("uuid")
                        .HasColumnName("rackid");

                    b.Property<DateTime>("UpdatedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updateddatetime");

                    b.Property<int>("XSlot")
                        .HasColumnType("integer")
                        .HasColumnName("xslot");

                    b.Property<int>("YSlot")
                        .HasColumnType("integer")
                        .HasColumnName("yslot");

                    b.HasKey("InventoryId")
                        .HasName("pk_inventory");

                    b.HasIndex("CompanyId")
                        .HasDatabaseName("ix_inventory_companyid");

                    b.HasIndex("CreatedUserId")
                        .HasDatabaseName("ix_inventory_createduserid");

                    b.HasIndex("ModifiedUserId")
                        .HasDatabaseName("ix_inventory_modifieduserid");

                    b.HasIndex("ProductVariantId")
                        .HasDatabaseName("ix_inventory_productvariantid");

                    b.HasIndex("RackId")
                        .HasDatabaseName("ix_inventory_rackid");

                    b.ToTable("inventory", (string)null);
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.Location", b =>
                {
                    b.Property<long>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("locationid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("LocationId"));

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("address");

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint")
                        .HasColumnName("companyid");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("createddatetime");

                    b.Property<long?>("CreatedUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("createduserid");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("boolean")
                        .HasColumnName("isarchived");

                    b.Property<int>("LocationType")
                        .HasColumnType("integer")
                        .HasColumnName("locationtype");

                    b.Property<long?>("ModifiedUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("modifieduserid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("name");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("phonenumber");

                    b.Property<DateTime>("UpdatedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updateddatetime");

                    b.HasKey("LocationId")
                        .HasName("pk_location");

                    b.HasIndex("CompanyId")
                        .HasDatabaseName("ix_location_companyid");

                    b.HasIndex("CreatedUserId")
                        .HasDatabaseName("ix_location_createduserid");

                    b.HasIndex("ModifiedUserId")
                        .HasDatabaseName("ix_location_modifieduserid");

                    b.ToTable("location", (string)null);

                    b.HasData(
                        new
                        {
                            LocationId = 100L,
                            Address = "7439 Kemmer Flats, Boganborough, Botswana",
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 196, DateTimeKind.Utc).AddTicks(9045),
                            IsArchived = true,
                            LocationType = 2,
                            Name = "Computers & Games",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 196, DateTimeKind.Utc).AddTicks(9046)
                        },
                        new
                        {
                            LocationId = 101L,
                            Address = "880 Feil Cliff, East Zion, Papua New Guinea",
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(3233),
                            IsArchived = true,
                            LocationType = 2,
                            Name = "Toys, Sports & Clothing",
                            PhoneNumber = "1-511-865-3776 x9397",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(3233)
                        },
                        new
                        {
                            LocationId = 102L,
                            Address = "098 Nasir Centers, South Makennaland, Guinea-Bissau",
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(4196),
                            IsArchived = true,
                            LocationType = 1,
                            Name = "Kids",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(4196)
                        },
                        new
                        {
                            LocationId = 103L,
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(4386),
                            IsArchived = false,
                            LocationType = 2,
                            Name = "Movies & Games",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(4387)
                        },
                        new
                        {
                            LocationId = 104L,
                            Address = "180 Lela Square, New Lavinia, Puerto Rico",
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(4545),
                            IsArchived = false,
                            LocationType = 2,
                            Name = "Clothing & Music",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(4546)
                        },
                        new
                        {
                            LocationId = 105L,
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(4666),
                            IsArchived = false,
                            LocationType = 1,
                            Name = "Kids",
                            PhoneNumber = "(269) 598-7907 x029",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(4666)
                        },
                        new
                        {
                            LocationId = 106L,
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(4831),
                            IsArchived = false,
                            LocationType = 2,
                            Name = "Garden & Games",
                            PhoneNumber = "(856) 351-5559",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(4831)
                        },
                        new
                        {
                            LocationId = 107L,
                            Address = "293 Woodrow Corners, Port Salmatown, Belize",
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(4947),
                            IsArchived = false,
                            LocationType = 1,
                            Name = "Grocery",
                            PhoneNumber = "1-668-380-6715",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(4947)
                        },
                        new
                        {
                            LocationId = 108L,
                            Address = "101 Armando Ridges, Donatoberg, Marshall Islands",
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(5049),
                            IsArchived = true,
                            LocationType = 1,
                            Name = "Tools",
                            PhoneNumber = "(687) 536-0023",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(5049)
                        },
                        new
                        {
                            LocationId = 109L,
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(5152),
                            IsArchived = true,
                            LocationType = 1,
                            Name = "Books",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(5152)
                        },
                        new
                        {
                            LocationId = 110L,
                            Address = "27338 Dickens Pine, South Reginald, New Caledonia",
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(5259),
                            IsArchived = true,
                            LocationType = 1,
                            Name = "Automotive & Kids",
                            PhoneNumber = "1-238-364-9415 x851",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(5259)
                        },
                        new
                        {
                            LocationId = 111L,
                            Address = "041 Presley Plain, Port Eulaliafort, Liberia",
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(5374),
                            IsArchived = true,
                            LocationType = 1,
                            Name = "Kids & Beauty",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(5375)
                        },
                        new
                        {
                            LocationId = 112L,
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(5482),
                            IsArchived = true,
                            LocationType = 1,
                            Name = "Automotive, Computers & Books",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(5482)
                        },
                        new
                        {
                            LocationId = 113L,
                            Address = "868 Virgie Drive, South Kip, Namibia",
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(5632),
                            IsArchived = true,
                            LocationType = 1,
                            Name = "Shoes, Movies & Industrial",
                            PhoneNumber = "(499) 367-3699 x43718",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(5633)
                        },
                        new
                        {
                            LocationId = 114L,
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(5745),
                            IsArchived = false,
                            LocationType = 2,
                            Name = "Music",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(5746)
                        },
                        new
                        {
                            LocationId = 115L,
                            Address = "671 Kian Ports, Harveyberg, Ghana",
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(5844),
                            IsArchived = false,
                            LocationType = 2,
                            Name = "Beauty & Electronics",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(5844)
                        },
                        new
                        {
                            LocationId = 116L,
                            Address = "51633 Marcella Pines, East Sigmund, Austria",
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(5946),
                            IsArchived = true,
                            LocationType = 2,
                            Name = "Shoes",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(5946)
                        },
                        new
                        {
                            LocationId = 117L,
                            Address = "867 Will Forks, Boehmborough, Seychelles",
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(6050),
                            IsArchived = true,
                            LocationType = 1,
                            Name = "Industrial",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(6050)
                        },
                        new
                        {
                            LocationId = 118L,
                            Address = "89716 Wilkinson Centers, Lake Evangeline, Taiwan",
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(6155),
                            IsArchived = true,
                            LocationType = 1,
                            Name = "Games",
                            PhoneNumber = "(708) 254-4873",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(6156)
                        },
                        new
                        {
                            LocationId = 119L,
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(6254),
                            IsArchived = true,
                            LocationType = 2,
                            Name = "Toys, Tools & Baby",
                            PhoneNumber = "431-546-5682 x60531",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(6254)
                        },
                        new
                        {
                            LocationId = 120L,
                            Address = "629 Stark Circles, Lake Judyton, Liberia",
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(6380),
                            IsArchived = false,
                            LocationType = 1,
                            Name = "Music, Movies & Shoes",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(6381)
                        },
                        new
                        {
                            LocationId = 121L,
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(6511),
                            IsArchived = false,
                            LocationType = 1,
                            Name = "Books & Clothing",
                            PhoneNumber = "1-744-266-3903",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(6512)
                        },
                        new
                        {
                            LocationId = 122L,
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(6608),
                            IsArchived = false,
                            LocationType = 1,
                            Name = "Health & Toys",
                            PhoneNumber = "204-692-9833 x3666",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(6608)
                        },
                        new
                        {
                            LocationId = 123L,
                            Address = "4423 Josefina View, Littleburgh, Russian Federation",
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(6716),
                            IsArchived = true,
                            LocationType = 1,
                            Name = "Clothing",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(6717)
                        },
                        new
                        {
                            LocationId = 124L,
                            Address = "6458 MacGyver Trail, Port Thoratown, Christmas Island",
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(6819),
                            IsArchived = false,
                            LocationType = 1,
                            Name = "Automotive & Kids",
                            PhoneNumber = "(707) 997-0839",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(6819)
                        },
                        new
                        {
                            LocationId = 125L,
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(6924),
                            IsArchived = false,
                            LocationType = 2,
                            Name = "Music, Shoes & Books",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(6924)
                        },
                        new
                        {
                            LocationId = 126L,
                            Address = "550 Santino Cliff, North Brielle, Poland",
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(7027),
                            IsArchived = false,
                            LocationType = 1,
                            Name = "Shoes, Home & Jewelery",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(7027)
                        },
                        new
                        {
                            LocationId = 127L,
                            Address = "423 Geoffrey Way, East Ashlymouth, Spain",
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(7140),
                            IsArchived = false,
                            LocationType = 2,
                            Name = "Computers",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(7141)
                        },
                        new
                        {
                            LocationId = 128L,
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(7265),
                            IsArchived = true,
                            LocationType = 2,
                            Name = "Music, Music & Computers",
                            PhoneNumber = "202-749-1486 x93496",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(7265)
                        },
                        new
                        {
                            LocationId = 129L,
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(7364),
                            IsArchived = false,
                            LocationType = 2,
                            Name = "Sports, Home & Garden",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(7364)
                        },
                        new
                        {
                            LocationId = 130L,
                            Address = "385 Tromp Burg, Kohlerchester, Panama",
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(7471),
                            IsArchived = true,
                            LocationType = 2,
                            Name = "Clothing & Computers",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(7472)
                        },
                        new
                        {
                            LocationId = 131L,
                            Address = "38138 Gayle Lodge, South Deanna, Denmark",
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(7584),
                            IsArchived = true,
                            LocationType = 2,
                            Name = "Games & Health",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(7585)
                        },
                        new
                        {
                            LocationId = 132L,
                            Address = "7152 Sydni Keys, Newtonville, American Samoa",
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(7685),
                            IsArchived = true,
                            LocationType = 2,
                            Name = "Outdoors",
                            PhoneNumber = "(571) 444-2390 x592",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(7685)
                        },
                        new
                        {
                            LocationId = 133L,
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(7780),
                            IsArchived = false,
                            LocationType = 2,
                            Name = "Books & Games",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(7780)
                        },
                        new
                        {
                            LocationId = 134L,
                            Address = "73391 Cassin Isle, Port Merltown, Japan",
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(7908),
                            IsArchived = false,
                            LocationType = 2,
                            Name = "Industrial & Computers",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(7908)
                        },
                        new
                        {
                            LocationId = 135L,
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(8025),
                            IsArchived = true,
                            LocationType = 1,
                            Name = "Music, Games & Garden",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(8026)
                        },
                        new
                        {
                            LocationId = 136L,
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(8140),
                            IsArchived = false,
                            LocationType = 2,
                            Name = "Sports, Beauty & Grocery",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(8140)
                        },
                        new
                        {
                            LocationId = 137L,
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(8243),
                            IsArchived = true,
                            LocationType = 2,
                            Name = "Garden & Automotive",
                            PhoneNumber = "715.807.7515",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(8243)
                        },
                        new
                        {
                            LocationId = 138L,
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(8346),
                            IsArchived = true,
                            LocationType = 2,
                            Name = "Jewelery, Toys & Computers",
                            PhoneNumber = "1-795-647-8186 x8761",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(8346)
                        },
                        new
                        {
                            LocationId = 139L,
                            Address = "036 Damaris Centers, West Coraliefort, British Indian Ocean Territory (Chagos Archipelago)",
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(8449),
                            IsArchived = false,
                            LocationType = 1,
                            Name = "Garden, Home & Toys",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(8450)
                        },
                        new
                        {
                            LocationId = 140L,
                            Address = "1278 Josefina Village, Gleasonmouth, Luxembourg",
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(8594),
                            IsArchived = true,
                            LocationType = 2,
                            Name = "Books",
                            PhoneNumber = "(268) 209-9664 x16078",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(8595)
                        },
                        new
                        {
                            LocationId = 141L,
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(8694),
                            IsArchived = true,
                            LocationType = 2,
                            Name = "Grocery",
                            PhoneNumber = "200-275-0852",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(8694)
                        },
                        new
                        {
                            LocationId = 142L,
                            Address = "98499 Lemke Ridge, Oscarview, Norway",
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(8800),
                            IsArchived = true,
                            LocationType = 1,
                            Name = "Games & Garden",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(8800)
                        },
                        new
                        {
                            LocationId = 143L,
                            Address = "64005 Kira Spurs, East Jayne, United States of America",
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(8912),
                            IsArchived = true,
                            LocationType = 2,
                            Name = "Music, Games & Health",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(8913)
                        },
                        new
                        {
                            LocationId = 144L,
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(9022),
                            IsArchived = false,
                            LocationType = 1,
                            Name = "Games, Kids & Automotive",
                            PhoneNumber = "1-304-474-7245",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(9022)
                        },
                        new
                        {
                            LocationId = 145L,
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(9135),
                            IsArchived = false,
                            LocationType = 2,
                            Name = "Jewelery & Clothing",
                            PhoneNumber = "629-297-6840 x47057",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(9135)
                        },
                        new
                        {
                            LocationId = 146L,
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(9241),
                            IsArchived = true,
                            LocationType = 2,
                            Name = "Electronics & Garden",
                            PhoneNumber = "(263) 297-2212 x9324",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(9241)
                        },
                        new
                        {
                            LocationId = 147L,
                            Address = "9664 Marianne Crescent, Lake Anderson, Hong Kong",
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(9380),
                            IsArchived = true,
                            LocationType = 1,
                            Name = "Clothing",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(9381)
                        },
                        new
                        {
                            LocationId = 148L,
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(9480),
                            IsArchived = true,
                            LocationType = 1,
                            Name = "Clothing & Outdoors",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(9480)
                        },
                        new
                        {
                            LocationId = 149L,
                            Address = "3738 Marquardt Expressway, Port Ivory, Romania",
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(9591),
                            IsArchived = true,
                            LocationType = 1,
                            Name = "Games & Electronics",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(9592)
                        },
                        new
                        {
                            LocationId = 150L,
                            Address = "8002 Hane Point, Kiraport, Libyan Arab Jamahiriya",
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(9705),
                            IsArchived = false,
                            LocationType = 2,
                            Name = "Kids",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(9705)
                        },
                        new
                        {
                            LocationId = 151L,
                            Address = "66958 Deckow Roads, East Andresshire, Bangladesh",
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(9798),
                            IsArchived = false,
                            LocationType = 1,
                            Name = "Computers, Tools & Computers",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(9798)
                        },
                        new
                        {
                            LocationId = 152L,
                            Address = "20747 Meghan Turnpike, Anjalichester, Finland",
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(9911),
                            IsArchived = false,
                            LocationType = 1,
                            Name = "Electronics & Home",
                            PhoneNumber = "(797) 966-3091 x24753",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 197, DateTimeKind.Utc).AddTicks(9911)
                        },
                        new
                        {
                            LocationId = 153L,
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(32),
                            IsArchived = false,
                            LocationType = 2,
                            Name = "Beauty, Baby & Jewelery",
                            PhoneNumber = "(693) 677-0608 x409",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(33)
                        },
                        new
                        {
                            LocationId = 154L,
                            Address = "98319 Koss Fords, West Ottilie, Burkina Faso",
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(153),
                            IsArchived = false,
                            LocationType = 1,
                            Name = "Electronics",
                            PhoneNumber = "319.809.8836",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(154)
                        },
                        new
                        {
                            LocationId = 155L,
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(249),
                            IsArchived = true,
                            LocationType = 1,
                            Name = "Books, Electronics & Garden",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(249)
                        },
                        new
                        {
                            LocationId = 156L,
                            Address = "11180 Boehm Rue, Lake Angelicaburgh, Palau",
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(358),
                            IsArchived = true,
                            LocationType = 1,
                            Name = "Garden & Tools",
                            PhoneNumber = "(497) 691-4182",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(358)
                        },
                        new
                        {
                            LocationId = 157L,
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(468),
                            IsArchived = false,
                            LocationType = 2,
                            Name = "Books",
                            PhoneNumber = "1-610-236-2029 x996",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(469)
                        },
                        new
                        {
                            LocationId = 158L,
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(568),
                            IsArchived = false,
                            LocationType = 2,
                            Name = "Baby, Electronics & Sports",
                            PhoneNumber = "(488) 783-0495",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(568)
                        },
                        new
                        {
                            LocationId = 159L,
                            Address = "356 Winston Glen, Jackelinefurt, Peru",
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(692),
                            IsArchived = false,
                            LocationType = 1,
                            Name = "Jewelery",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(692)
                        },
                        new
                        {
                            LocationId = 160L,
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(811),
                            IsArchived = true,
                            LocationType = 2,
                            Name = "Automotive",
                            PhoneNumber = "(589) 964-1719 x8759",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(812)
                        },
                        new
                        {
                            LocationId = 161L,
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(904),
                            IsArchived = true,
                            LocationType = 2,
                            Name = "Clothing & Home",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(904)
                        },
                        new
                        {
                            LocationId = 162L,
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(1005),
                            IsArchived = true,
                            LocationType = 1,
                            Name = "Tools, Clothing & Automotive",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(1005)
                        },
                        new
                        {
                            LocationId = 163L,
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(1120),
                            IsArchived = true,
                            LocationType = 2,
                            Name = "Jewelery, Automotive & Toys",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(1120)
                        },
                        new
                        {
                            LocationId = 164L,
                            Address = "213 Morissette Common, Lake Sophie, Kazakhstan",
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(1235),
                            IsArchived = false,
                            LocationType = 1,
                            Name = "Sports & Toys",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(1236)
                        },
                        new
                        {
                            LocationId = 165L,
                            Address = "73667 Moore Inlet, Champlinside, Turkmenistan",
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(1337),
                            IsArchived = true,
                            LocationType = 2,
                            Name = "Outdoors, Music & Garden",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(1338)
                        },
                        new
                        {
                            LocationId = 166L,
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(1469),
                            IsArchived = true,
                            LocationType = 2,
                            Name = "Books, Computers & Tools",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(1469)
                        },
                        new
                        {
                            LocationId = 167L,
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(1571),
                            IsArchived = false,
                            LocationType = 2,
                            Name = "Beauty, Games & Outdoors",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(1572)
                        },
                        new
                        {
                            LocationId = 168L,
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(1656),
                            IsArchived = true,
                            LocationType = 2,
                            Name = "Games",
                            PhoneNumber = "410-251-2994",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(1656)
                        },
                        new
                        {
                            LocationId = 169L,
                            Address = "7132 Daugherty Branch, South Angus, Bahrain",
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(1847),
                            IsArchived = false,
                            LocationType = 1,
                            Name = "Kids & Games",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(1847)
                        },
                        new
                        {
                            LocationId = 170L,
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(1963),
                            IsArchived = true,
                            LocationType = 2,
                            Name = "Sports, Movies & Beauty",
                            PhoneNumber = "709-464-4571",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(1963)
                        },
                        new
                        {
                            LocationId = 171L,
                            Address = "3233 Dickens Burgs, South Rosaleeport, Guernsey",
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(2067),
                            IsArchived = true,
                            LocationType = 2,
                            Name = "Computers",
                            PhoneNumber = "306.378.4067",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(2068)
                        },
                        new
                        {
                            LocationId = 172L,
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(2172),
                            IsArchived = false,
                            LocationType = 1,
                            Name = "Books, Sports & Clothing",
                            PhoneNumber = "568.374.4116",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(2173)
                        },
                        new
                        {
                            LocationId = 173L,
                            Address = "0622 Precious Skyway, Joanieton, Cocos (Keeling) Islands",
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(2312),
                            IsArchived = true,
                            LocationType = 2,
                            Name = "Automotive",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(2313)
                        },
                        new
                        {
                            LocationId = 174L,
                            Address = "64545 Lacey Groves, Port Halieshire, French Guiana",
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(2408),
                            IsArchived = false,
                            LocationType = 1,
                            Name = "Toys, Jewelery & Grocery",
                            PhoneNumber = "1-793-623-2563 x568",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(2408)
                        },
                        new
                        {
                            LocationId = 175L,
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(2512),
                            IsArchived = false,
                            LocationType = 2,
                            Name = "Kids & Clothing",
                            PhoneNumber = "858-210-7398",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(2512)
                        },
                        new
                        {
                            LocationId = 176L,
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(2621),
                            IsArchived = true,
                            LocationType = 1,
                            Name = "Beauty, Clothing & Sports",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(2621)
                        },
                        new
                        {
                            LocationId = 177L,
                            Address = "91984 Brekke Parkway, Marjorymouth, Kyrgyz Republic",
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(2743),
                            IsArchived = false,
                            LocationType = 2,
                            Name = "Baby & Shoes",
                            PhoneNumber = "1-393-667-7942",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(2743)
                        },
                        new
                        {
                            LocationId = 178L,
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(2850),
                            IsArchived = true,
                            LocationType = 1,
                            Name = "Clothing, Beauty & Computers",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(2850)
                        },
                        new
                        {
                            LocationId = 179L,
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(2958),
                            IsArchived = true,
                            LocationType = 2,
                            Name = "Automotive & Games",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(2959)
                        },
                        new
                        {
                            LocationId = 180L,
                            Address = "399 Bauch Islands, East Twila, Eritrea",
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(3087),
                            IsArchived = true,
                            LocationType = 2,
                            Name = "Outdoors & Home",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(3087)
                        },
                        new
                        {
                            LocationId = 181L,
                            Address = "05771 Nora Unions, Hegmanntown, Syrian Arab Republic",
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(4317),
                            IsArchived = false,
                            LocationType = 2,
                            Name = "Kids & Games",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(4318)
                        },
                        new
                        {
                            LocationId = 182L,
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(4530),
                            IsArchived = true,
                            LocationType = 1,
                            Name = "Movies, Grocery & Garden",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(4530)
                        },
                        new
                        {
                            LocationId = 183L,
                            Address = "16575 Frami Plaza, Steuberfort, Ethiopia",
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(4684),
                            IsArchived = false,
                            LocationType = 2,
                            Name = "Industrial & Automotive",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(4684)
                        },
                        new
                        {
                            LocationId = 184L,
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(4821),
                            IsArchived = false,
                            LocationType = 2,
                            Name = "Games, Books & Electronics",
                            PhoneNumber = "1-702-394-3074 x776",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(4821)
                        },
                        new
                        {
                            LocationId = 185L,
                            Address = "568 Ferry Station, Effertzchester, Dominica",
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(4947),
                            IsArchived = false,
                            LocationType = 2,
                            Name = "Sports & Kids",
                            PhoneNumber = "284.525.8712 x03409",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(4947)
                        },
                        new
                        {
                            LocationId = 186L,
                            Address = "415 Esmeralda Stravenue, Julianneville, Niger",
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(5066),
                            IsArchived = false,
                            LocationType = 2,
                            Name = "Movies & Books",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(5066)
                        },
                        new
                        {
                            LocationId = 187L,
                            Address = "997 Patrick Well, South Leonardo, Kyrgyz Republic",
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(5225),
                            IsArchived = true,
                            LocationType = 2,
                            Name = "Automotive & Sports",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(5226)
                        },
                        new
                        {
                            LocationId = 188L,
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(5334),
                            IsArchived = false,
                            LocationType = 2,
                            Name = "Kids",
                            PhoneNumber = "1-823-732-3467 x05543",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(5334)
                        },
                        new
                        {
                            LocationId = 189L,
                            Address = "698 Kayla Crescent, Jennieberg, Malaysia",
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(5715),
                            IsArchived = false,
                            LocationType = 2,
                            Name = "Shoes & Clothing",
                            PhoneNumber = "1-784-874-1912 x11737",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(5715)
                        },
                        new
                        {
                            LocationId = 190L,
                            Address = "57053 Blick Shore, Port Isabelberg, Taiwan",
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(5871),
                            IsArchived = false,
                            LocationType = 2,
                            Name = "Sports",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(5871)
                        },
                        new
                        {
                            LocationId = 191L,
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(5998),
                            IsArchived = true,
                            LocationType = 2,
                            Name = "Tools & Movies",
                            PhoneNumber = "(408) 460-4430 x89547",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(5998)
                        },
                        new
                        {
                            LocationId = 192L,
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(6126),
                            IsArchived = true,
                            LocationType = 2,
                            Name = "Home, Health & Books",
                            PhoneNumber = "1-790-272-1994 x813",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(6126)
                        },
                        new
                        {
                            LocationId = 193L,
                            Address = "22522 Leonora Way, West Citlallimouth, French Guiana",
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(6263),
                            IsArchived = false,
                            LocationType = 1,
                            Name = "Home, Garden & Grocery",
                            PhoneNumber = "755-715-3790",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(6263)
                        },
                        new
                        {
                            LocationId = 194L,
                            Address = "79936 Marina Loop, New Ninaville, Angola",
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(6403),
                            IsArchived = false,
                            LocationType = 2,
                            Name = "Music",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(6403)
                        },
                        new
                        {
                            LocationId = 195L,
                            Address = "61436 Von Skyway, Schimmelshire, British Indian Ocean Territory (Chagos Archipelago)",
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(6560),
                            IsArchived = false,
                            LocationType = 2,
                            Name = "Toys",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(6560)
                        },
                        new
                        {
                            LocationId = 196L,
                            Address = "90182 Collins Spring, West Shanel, Antarctica (the territory South of 60 deg S)",
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(6665),
                            IsArchived = false,
                            LocationType = 1,
                            Name = "Tools & Home",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(6665)
                        },
                        new
                        {
                            LocationId = 197L,
                            Address = "75675 Durgan Landing, North Zita, Cameroon",
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(6788),
                            IsArchived = false,
                            LocationType = 2,
                            Name = "Beauty, Shoes & Garden",
                            PhoneNumber = "657-394-1695 x60335",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(6789)
                        },
                        new
                        {
                            LocationId = 198L,
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(6918),
                            IsArchived = true,
                            LocationType = 1,
                            Name = "Movies & Clothing",
                            PhoneNumber = "532.991.5330",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(6918)
                        },
                        new
                        {
                            LocationId = 199L,
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(7062),
                            IsArchived = false,
                            LocationType = 1,
                            Name = "Shoes",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 198, DateTimeKind.Utc).AddTicks(7062)
                        });
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.Notification", b =>
                {
                    b.Property<Guid>("NotificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("notificationid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("createddatetime");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("description");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("boolean")
                        .HasColumnName("isarchived");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("name");

                    b.Property<int>("NotificationType")
                        .HasColumnType("integer")
                        .HasColumnName("notificationtype");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("userid");

                    b.HasKey("NotificationId")
                        .HasName("pk_notification");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_notification_userid");

                    b.ToTable("notification", (string)null);
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.Order", b =>
                {
                    b.Property<Guid>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("orderid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<long?>("ClientId")
                        .HasColumnType("bigint")
                        .HasColumnName("clientid");

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint")
                        .HasColumnName("companyid");

                    b.Property<long?>("CourierId")
                        .HasColumnType("bigint")
                        .HasColumnName("courierid");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("createddatetime");

                    b.Property<long?>("CreatedUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("createduserid");

                    b.Property<string>("ExpectedDate")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("expecteddate");

                    b.Property<long?>("ModifiedUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("modifieduserid");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)")
                        .HasColumnName("note");

                    b.Property<string>("OrderNumber")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("ordernumber");

                    b.Property<int>("OrderStatus")
                        .HasColumnType("integer")
                        .HasColumnName("orderstatus");

                    b.Property<long?>("PlatformId")
                        .HasColumnType("bigint")
                        .HasColumnName("platformid");

                    b.Property<long?>("ShippingOptionId")
                        .HasColumnType("bigint")
                        .HasColumnName("shippingoptionid");

                    b.Property<string>("TrackingNumber")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("trackingnumber");

                    b.Property<DateTime>("UpdatedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updateddatetime");

                    b.HasKey("OrderId")
                        .HasName("pk_order");

                    b.HasIndex("ClientId")
                        .HasDatabaseName("ix_order_clientid");

                    b.HasIndex("CompanyId")
                        .HasDatabaseName("ix_order_companyid");

                    b.HasIndex("CourierId")
                        .HasDatabaseName("ix_order_courierid");

                    b.HasIndex("CreatedUserId")
                        .HasDatabaseName("ix_order_createduserid");

                    b.HasIndex("ModifiedUserId")
                        .HasDatabaseName("ix_order_modifieduserid");

                    b.HasIndex("PlatformId")
                        .HasDatabaseName("ix_order_platformid");

                    b.HasIndex("ShippingOptionId")
                        .HasDatabaseName("ix_order_shippingoptionid");

                    b.ToTable("order", (string)null);
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.OrderHistory", b =>
                {
                    b.Property<Guid>("OrderHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("orderhistoryid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<long>("Message")
                        .HasColumnType("bigint")
                        .HasColumnName("message");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uuid")
                        .HasColumnName("orderid");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("userid");

                    b.HasKey("OrderHistoryId")
                        .HasName("pk_orderhistory");

                    b.HasIndex("OrderId")
                        .HasDatabaseName("ix_orderhistory_orderid");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_orderhistory_userid");

                    b.ToTable("orderhistory", (string)null);
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.OrderItem", b =>
                {
                    b.Property<Guid>("OrderItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("orderitemid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<int>("AmountPerItem")
                        .HasColumnType("integer")
                        .HasColumnName("amountperitem");

                    b.Property<int>("Count")
                        .HasColumnType("integer")
                        .HasColumnName("count");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uuid")
                        .HasColumnName("orderid");

                    b.Property<Guid>("ProductVariantId")
                        .HasColumnType("uuid")
                        .HasColumnName("productvariantid");

                    b.HasKey("OrderItemId")
                        .HasName("pk_orderitem");

                    b.HasIndex("OrderId")
                        .HasDatabaseName("ix_orderitem_orderid");

                    b.HasIndex("ProductVariantId")
                        .HasDatabaseName("ix_orderitem_productvariantid");

                    b.ToTable("orderitem", (string)null);
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.PermissionType", b =>
                {
                    b.Property<int>("PermissionTypeId")
                        .HasColumnType("integer")
                        .HasColumnName("permissiontypeid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("name");

                    b.HasKey("PermissionTypeId")
                        .HasName("pk_permissiontype");

                    b.ToTable("permissiontype", (string)null);

                    b.HasData(
                        new
                        {
                            PermissionTypeId = 4,
                            Name = "Order"
                        },
                        new
                        {
                            PermissionTypeId = 13,
                            Name = "Inbound"
                        },
                        new
                        {
                            PermissionTypeId = 20,
                            Name = "Putaway"
                        },
                        new
                        {
                            PermissionTypeId = 30,
                            Name = "Quality"
                        },
                        new
                        {
                            PermissionTypeId = 40,
                            Name = "Outbound"
                        },
                        new
                        {
                            PermissionTypeId = 50,
                            Name = "Picking"
                        },
                        new
                        {
                            PermissionTypeId = 60,
                            Name = "Packing"
                        },
                        new
                        {
                            PermissionTypeId = 70,
                            Name = "Shipping"
                        },
                        new
                        {
                            PermissionTypeId = 80,
                            Name = "Product"
                        },
                        new
                        {
                            PermissionTypeId = 90,
                            Name = "Stock"
                        },
                        new
                        {
                            PermissionTypeId = 95,
                            Name = "Location"
                        },
                        new
                        {
                            PermissionTypeId = 100,
                            Name = "PurchaseOrder"
                        },
                        new
                        {
                            PermissionTypeId = 110,
                            Name = "PurchaseRequest"
                        },
                        new
                        {
                            PermissionTypeId = 120,
                            Name = "Supplier"
                        },
                        new
                        {
                            PermissionTypeId = 130,
                            Name = "ReportOrder"
                        },
                        new
                        {
                            PermissionTypeId = 140,
                            Name = "ReportPurchaseOrder"
                        },
                        new
                        {
                            PermissionTypeId = 150,
                            Name = "ReportInventory"
                        },
                        new
                        {
                            PermissionTypeId = 170,
                            Name = "ManageCompany"
                        },
                        new
                        {
                            PermissionTypeId = 180,
                            Name = "ManageTeam"
                        });
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.Platform", b =>
                {
                    b.Property<long>("PlatformId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("platformid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("PlatformId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("name");

                    b.HasKey("PlatformId")
                        .HasName("pk_platform");

                    b.ToTable("platform", (string)null);

                    b.HasData(
                        new
                        {
                            PlatformId = 100L,
                            Name = "Amazon"
                        },
                        new
                        {
                            PlatformId = 101L,
                            Name = "Ebay"
                        });
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.PlatformCourier", b =>
                {
                    b.Property<long>("PlatformCourierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("platformcourierid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("PlatformCourierId"));

                    b.Property<long>("CourierId")
                        .HasColumnType("bigint")
                        .HasColumnName("courierid");

                    b.Property<long>("PlatformId")
                        .HasColumnType("bigint")
                        .HasColumnName("platformid");

                    b.HasKey("PlatformCourierId")
                        .HasName("pk_platformcourier");

                    b.HasIndex("CourierId")
                        .HasDatabaseName("ix_platformcourier_courierid");

                    b.HasIndex("PlatformId")
                        .HasDatabaseName("ix_platformcourier_platformid");

                    b.ToTable("platformcourier", (string)null);
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.Product", b =>
                {
                    b.Property<Guid>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("productid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint")
                        .HasColumnName("companyid");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("createddatetime");

                    b.Property<long?>("CreatedUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("createduserid");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)")
                        .HasColumnName("description");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("boolean")
                        .HasColumnName("isarchived");

                    b.Property<long?>("ModifiedUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("modifieduserid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("name");

                    b.Property<long?>("SupplierId")
                        .HasColumnType("bigint")
                        .HasColumnName("supplierid");

                    b.Property<DateTime>("UpdatedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updateddatetime");

                    b.HasKey("ProductId")
                        .HasName("pk_product");

                    b.HasIndex("CompanyId")
                        .HasDatabaseName("ix_product_companyid");

                    b.HasIndex("CreatedUserId")
                        .HasDatabaseName("ix_product_createduserid");

                    b.HasIndex("ModifiedUserId")
                        .HasDatabaseName("ix_product_modifieduserid");

                    b.HasIndex("SupplierId")
                        .HasDatabaseName("ix_product_supplierid");

                    b.ToTable("product", (string)null);

                    b.HasData(
                        new
                        {
                            ProductId = new Guid("cc83e122-0410-25ed-c5c8-9ba9f9556e08"),
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(558),
                            IsArchived = false,
                            Name = "Refined Steel Bacon",
                            SupplierId = 126L,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(562)
                        },
                        new
                        {
                            ProductId = new Guid("653dd38d-d89c-5cf6-6cf3-55ee2623679a"),
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(4280),
                            Description = "The Nagasaki Lander is the trademarked name of several series of Nagasaki sport bikes, that started with the 1984 ABC800J",
                            IsArchived = false,
                            Name = "Tasty Plastic Pants",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(4281)
                        },
                        new
                        {
                            ProductId = new Guid("1a14120b-e568-5fba-0e83-30b0bf29f0a4"),
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(4368),
                            Description = "Ergonomic executive chair upholstered in bonded black leather and PVC padded seat and back for all-day comfort and support",
                            IsArchived = false,
                            Name = "Incredible Concrete Shirt",
                            SupplierId = 125L,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(4368)
                        },
                        new
                        {
                            ProductId = new Guid("778660c0-4365-e8fe-2c90-c5e241030d9b"),
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(4402),
                            IsArchived = true,
                            Name = "Licensed Concrete Chicken",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(4402)
                        },
                        new
                        {
                            ProductId = new Guid("3b72bc0b-b71e-d78c-aba8-8434e7a84032"),
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(4426),
                            Description = "The Nagasaki Lander is the trademarked name of several series of Nagasaki sport bikes, that started with the 1984 ABC800J",
                            IsArchived = true,
                            Name = "Fantastic Soft Shirt",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(4427)
                        },
                        new
                        {
                            ProductId = new Guid("06e63b8c-da85-d5ae-6f59-868bac0ed939"),
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(4481),
                            IsArchived = true,
                            Name = "Handmade Wooden Tuna",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(4482)
                        },
                        new
                        {
                            ProductId = new Guid("86195222-ff46-1d33-bd92-7ca6d125cdd6"),
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(4502),
                            IsArchived = true,
                            Name = "Rustic Concrete Bacon",
                            SupplierId = 140L,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(4503)
                        },
                        new
                        {
                            ProductId = new Guid("cc2d75b7-e516-86cb-0262-87954e295a53"),
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(4524),
                            Description = "New ABC 13 9370, 13.3, 5th Gen CoreA5-8250U, 8GB RAM, 256GB SSD, power UHD Graphics, OS 10 Home, OS Office A & J 2016",
                            IsArchived = false,
                            Name = "Sleek Frozen Cheese",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(4524)
                        },
                        new
                        {
                            ProductId = new Guid("a5202e07-085c-5ace-958e-890551a7adb1"),
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(4543),
                            Description = "Ergonomic executive chair upholstered in bonded black leather and PVC padded seat and back for all-day comfort and support",
                            IsArchived = true,
                            Name = "Unbranded Frozen Hat",
                            SupplierId = 177L,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(4544)
                        },
                        new
                        {
                            ProductId = new Guid("63082b39-7e5e-9f05-1a0e-b6aae0a659b9"),
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(4571),
                            Description = "The Football Is Good For Training And Recreational Purposes",
                            IsArchived = false,
                            Name = "Unbranded Wooden Shoes",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(4571)
                        },
                        new
                        {
                            ProductId = new Guid("47ac6a72-f771-2cdf-3f22-ddc5f7361084"),
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(4587),
                            IsArchived = false,
                            Name = "Handmade Fresh Sausages",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(4587)
                        },
                        new
                        {
                            ProductId = new Guid("23b45705-1d18-3ae3-b8ec-135857a817d6"),
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(4605),
                            IsArchived = false,
                            Name = "Handmade Frozen Bike",
                            SupplierId = 169L,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(4605)
                        },
                        new
                        {
                            ProductId = new Guid("d7aee5e8-33a4-4341-bb6b-9f2b082704f9"),
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(4643),
                            Description = "Ergonomic executive chair upholstered in bonded black leather and PVC padded seat and back for all-day comfort and support",
                            IsArchived = false,
                            Name = "Refined Steel Sausages",
                            SupplierId = 183L,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(4643)
                        },
                        new
                        {
                            ProductId = new Guid("eca49e87-c298-2ad4-d72f-38356213b9d2"),
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(4661),
                            Description = "New range of formal shirts are designed keeping you in mind. With fits and styling that will make you stand apart",
                            IsArchived = false,
                            Name = "Generic Rubber Shoes",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(4662)
                        },
                        new
                        {
                            ProductId = new Guid("8c380469-da20-2c57-b71d-959d5622a9ca"),
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(4680),
                            Description = "The Nagasaki Lander is the trademarked name of several series of Nagasaki sport bikes, that started with the 1984 ABC800J",
                            IsArchived = false,
                            Name = "Unbranded Rubber Fish",
                            SupplierId = 126L,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(4681)
                        },
                        new
                        {
                            ProductId = new Guid("09507115-1175-2425-692f-bd9b9eb755e0"),
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(4697),
                            IsArchived = true,
                            Name = "Fantastic Concrete Gloves",
                            SupplierId = 136L,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(4698)
                        },
                        new
                        {
                            ProductId = new Guid("b38145a9-41bf-a8d8-610a-690623410c6f"),
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(4715),
                            IsArchived = true,
                            Name = "Small Wooden Sausages",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(4715)
                        },
                        new
                        {
                            ProductId = new Guid("6c357dbb-56f6-bcf7-5ccb-cba371a9ede4"),
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(4732),
                            Description = "The Apollotech B340 is an affordable wireless mouse with reliable connectivity, 12 months battery life and modern design",
                            IsArchived = true,
                            Name = "Handmade Granite Shirt",
                            SupplierId = 123L,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(4732)
                        },
                        new
                        {
                            ProductId = new Guid("a885d2bb-477d-dfcc-c704-c4a33b6bb471"),
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(4748),
                            IsArchived = true,
                            Name = "Handmade Concrete Pizza",
                            SupplierId = 161L,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(4749)
                        },
                        new
                        {
                            ProductId = new Guid("b5cd263b-d611-4b13-b83b-847113df84fe"),
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(4765),
                            IsArchived = true,
                            Name = "Intelligent Frozen Fish",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(4765)
                        },
                        new
                        {
                            ProductId = new Guid("a9f31e8f-b3e7-7f8e-a142-20ff29b52eb0"),
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(4818),
                            Description = "The beautiful range of Apple Naturalé that has an exciting mix of natural ingredients. With the Goodness of 100% Natural Ingredients",
                            IsArchived = true,
                            Name = "Generic Steel Computer",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(4818)
                        },
                        new
                        {
                            ProductId = new Guid("dc9f5d08-82c5-d454-3a82-b71fa1d187f5"),
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(4835),
                            IsArchived = true,
                            Name = "Gorgeous Metal Fish",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(4836)
                        },
                        new
                        {
                            ProductId = new Guid("c8a136e8-577b-0237-67df-56efa3dbbfcb"),
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(4850),
                            Description = "The slim & simple Maple Gaming Keyboard from Dev Byte comes with a sleek body and 7- Color RGB LED Back-lighting for smart functionality",
                            IsArchived = false,
                            Name = "Awesome Rubber Salad",
                            SupplierId = 104L,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(4851)
                        },
                        new
                        {
                            ProductId = new Guid("8d4ac50d-6d42-2869-62dd-4cb30cbf2a7f"),
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(4865),
                            Description = "The automobile layout consists of a front-engine design, with transaxle-type transmissions mounted at the rear of the engine and four wheel drive",
                            IsArchived = true,
                            Name = "Incredible Wooden Bike",
                            SupplierId = 184L,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(4866)
                        },
                        new
                        {
                            ProductId = new Guid("ffc1acd4-31e8-f885-8e6e-92ed752471ec"),
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(4887),
                            IsArchived = false,
                            Name = "Practical Granite Shirt",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(4887)
                        },
                        new
                        {
                            ProductId = new Guid("77be7c73-be33-6d2f-f56d-c1a8297aacc6"),
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(4903),
                            Description = "Boston's most advanced compression wear technology increases muscle oxygenation, stabilizes active muscles",
                            IsArchived = false,
                            Name = "Intelligent Steel Towels",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(4904)
                        },
                        new
                        {
                            ProductId = new Guid("69970e40-b67f-b97d-0775-b4c7805aaf62"),
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(4921),
                            Description = "New ABC 13 9370, 13.3, 5th Gen CoreA5-8250U, 8GB RAM, 256GB SSD, power UHD Graphics, OS 10 Home, OS Office A & J 2016",
                            IsArchived = true,
                            Name = "Small Concrete Chair",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(4921)
                        },
                        new
                        {
                            ProductId = new Guid("6fdda05d-cb66-3d67-33f3-b0980375b744"),
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(4977),
                            Description = "New range of formal shirts are designed keeping you in mind. With fits and styling that will make you stand apart",
                            IsArchived = false,
                            Name = "Generic Soft Computer",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(4977)
                        },
                        new
                        {
                            ProductId = new Guid("d05e2711-a3ff-4548-bb22-169f4aa0a94c"),
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(4992),
                            IsArchived = false,
                            Name = "Handmade Plastic Tuna",
                            SupplierId = 107L,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(4992)
                        },
                        new
                        {
                            ProductId = new Guid("5ac17955-22ae-3b7d-3954-a3096d334f67"),
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5008),
                            Description = "The Nagasaki Lander is the trademarked name of several series of Nagasaki sport bikes, that started with the 1984 ABC800J",
                            IsArchived = true,
                            Name = "Small Steel Keyboard",
                            SupplierId = 133L,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5008)
                        },
                        new
                        {
                            ProductId = new Guid("a2bbed74-956b-5e1d-64a9-2987ea0dff99"),
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5023),
                            Description = "Andy shoes are designed to keeping in mind durability as well as trends, the most stylish range of shoes & sandals",
                            IsArchived = false,
                            Name = "Rustic Concrete Hat",
                            SupplierId = 112L,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5023)
                        },
                        new
                        {
                            ProductId = new Guid("5fb73477-b1c7-65f7-af3a-35c199cdbe86"),
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5038),
                            Description = "The slim & simple Maple Gaming Keyboard from Dev Byte comes with a sleek body and 7- Color RGB LED Back-lighting for smart functionality",
                            IsArchived = true,
                            Name = "Refined Concrete Soap",
                            SupplierId = 120L,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5038)
                        },
                        new
                        {
                            ProductId = new Guid("55359340-5867-a3d3-0af4-6165fe9df831"),
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5053),
                            Description = "The Apollotech B340 is an affordable wireless mouse with reliable connectivity, 12 months battery life and modern design",
                            IsArchived = false,
                            Name = "Incredible Plastic Chair",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5053)
                        },
                        new
                        {
                            ProductId = new Guid("f1901298-0eb6-64f9-5886-1ec21048e162"),
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5066),
                            IsArchived = true,
                            Name = "Tasty Concrete Gloves",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5067)
                        },
                        new
                        {
                            ProductId = new Guid("88672cbf-752f-a74e-d6ce-4543b254e568"),
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5133),
                            IsArchived = false,
                            Name = "Gorgeous Plastic Towels",
                            SupplierId = 196L,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5134)
                        },
                        new
                        {
                            ProductId = new Guid("306b3cb9-ec5d-fea6-fcf7-e291db2911cf"),
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5149),
                            Description = "The Football Is Good For Training And Recreational Purposes",
                            IsArchived = true,
                            Name = "Tasty Steel Chair",
                            SupplierId = 177L,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5150)
                        },
                        new
                        {
                            ProductId = new Guid("b7550520-ae85-7639-2075-38e37678e19e"),
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5164),
                            IsArchived = true,
                            Name = "Incredible Cotton Bike",
                            SupplierId = 103L,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5164)
                        },
                        new
                        {
                            ProductId = new Guid("5678d654-4e49-7902-3c3d-e751477748a8"),
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5180),
                            Description = "The Nagasaki Lander is the trademarked name of several series of Nagasaki sport bikes, that started with the 1984 ABC800J",
                            IsArchived = false,
                            Name = "Small Metal Bike",
                            SupplierId = 124L,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5181)
                        },
                        new
                        {
                            ProductId = new Guid("eedcb6da-fa1d-4f88-ad31-d7c11fd72735"),
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5195),
                            IsArchived = false,
                            Name = "Handcrafted Plastic Cheese",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5195)
                        },
                        new
                        {
                            ProductId = new Guid("2dc86bbc-af1d-e015-596e-97268a1f435e"),
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5209),
                            IsArchived = true,
                            Name = "Sleek Cotton Sausages",
                            SupplierId = 102L,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5209)
                        },
                        new
                        {
                            ProductId = new Guid("9e866982-ddaf-c778-9360-8ebf229081c2"),
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5223),
                            Description = "The slim & simple Maple Gaming Keyboard from Dev Byte comes with a sleek body and 7- Color RGB LED Back-lighting for smart functionality",
                            IsArchived = true,
                            Name = "Handmade Granite Computer",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5224)
                        },
                        new
                        {
                            ProductId = new Guid("a4f8634b-c174-3b87-8a9a-468e41aa911f"),
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5276),
                            Description = "Ergonomic executive chair upholstered in bonded black leather and PVC padded seat and back for all-day comfort and support",
                            IsArchived = true,
                            Name = "Fantastic Rubber Shoes",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5276)
                        },
                        new
                        {
                            ProductId = new Guid("fd7b3406-a393-8f4e-0263-7980231e9f06"),
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5292),
                            Description = "The Nagasaki Lander is the trademarked name of several series of Nagasaki sport bikes, that started with the 1984 ABC800J",
                            IsArchived = true,
                            Name = "Sleek Granite Towels",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5292)
                        },
                        new
                        {
                            ProductId = new Guid("415ce7b1-6dfc-335a-f56e-8c0c3df7f6f7"),
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5307),
                            IsArchived = true,
                            Name = "Licensed Wooden Pizza",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5307)
                        },
                        new
                        {
                            ProductId = new Guid("8913461a-677a-a518-8de2-bcf24d05f61e"),
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5322),
                            IsArchived = false,
                            Name = "Fantastic Soft Ball",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5322)
                        },
                        new
                        {
                            ProductId = new Guid("bed55f35-76d0-3d0e-93e2-2747aa7b0674"),
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5339),
                            Description = "The Football Is Good For Training And Recreational Purposes",
                            IsArchived = false,
                            Name = "Fantastic Metal Bike",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5339)
                        },
                        new
                        {
                            ProductId = new Guid("0c280c52-d3b3-14a4-4445-0743e6bd6bad"),
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5353),
                            Description = "Ergonomic executive chair upholstered in bonded black leather and PVC padded seat and back for all-day comfort and support",
                            IsArchived = false,
                            Name = "Handcrafted Steel Sausages",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5353)
                        },
                        new
                        {
                            ProductId = new Guid("c48c9793-833f-8426-c47d-69e531df0f82"),
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5368),
                            IsArchived = false,
                            Name = "Rustic Steel Sausages",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5368)
                        },
                        new
                        {
                            ProductId = new Guid("8116f650-b121-7f5a-6d20-3c185005c1e1"),
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5384),
                            IsArchived = true,
                            Name = "Incredible Cotton Chicken",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5384)
                        },
                        new
                        {
                            ProductId = new Guid("aa7c3ba5-126c-e2a4-37ef-8d1003a2cc0e"),
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5415),
                            Description = "The Football Is Good For Training And Recreational Purposes",
                            IsArchived = true,
                            Name = "Sleek Plastic Chair",
                            SupplierId = 136L,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5416)
                        },
                        new
                        {
                            ProductId = new Guid("a7b25e73-ccc4-031c-357c-75ded4000e97"),
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5429),
                            IsArchived = true,
                            Name = "Fantastic Cotton Mouse",
                            SupplierId = 133L,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5430)
                        },
                        new
                        {
                            ProductId = new Guid("3f1bc061-c4e3-08db-8df9-b4f23a722270"),
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5445),
                            Description = "Andy shoes are designed to keeping in mind durability as well as trends, the most stylish range of shoes & sandals",
                            IsArchived = false,
                            Name = "Tasty Frozen Chips",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5445)
                        },
                        new
                        {
                            ProductId = new Guid("404ac733-b74b-3fde-b462-0c01c351b89a"),
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5460),
                            Description = "New range of formal shirts are designed keeping you in mind. With fits and styling that will make you stand apart",
                            IsArchived = false,
                            Name = "Rustic Soft Chair",
                            SupplierId = 150L,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5460)
                        },
                        new
                        {
                            ProductId = new Guid("1c59edc4-cfc2-6afd-03af-fc90c84142d6"),
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5476),
                            Description = "Carbonite web goalkeeper gloves are ergonomically designed to give easy fit",
                            IsArchived = true,
                            Name = "Refined Metal Chips",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5476)
                        },
                        new
                        {
                            ProductId = new Guid("56bb4b5a-3797-5621-7b87-ca8423f1930f"),
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5490),
                            Description = "The Apollotech B340 is an affordable wireless mouse with reliable connectivity, 12 months battery life and modern design",
                            IsArchived = false,
                            Name = "Tasty Steel Sausages",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5490)
                        },
                        new
                        {
                            ProductId = new Guid("de9674f2-7a55-ec71-5f67-8442136b78da"),
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5505),
                            Description = "The beautiful range of Apple Naturalé that has an exciting mix of natural ingredients. With the Goodness of 100% Natural Ingredients",
                            IsArchived = false,
                            Name = "Unbranded Steel Bike",
                            SupplierId = 178L,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5505)
                        },
                        new
                        {
                            ProductId = new Guid("b1da89d7-4cb2-f646-d3a5-c28a78260c59"),
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5558),
                            Description = "The slim & simple Maple Gaming Keyboard from Dev Byte comes with a sleek body and 7- Color RGB LED Back-lighting for smart functionality",
                            IsArchived = false,
                            Name = "Ergonomic Concrete Bacon",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5558)
                        },
                        new
                        {
                            ProductId = new Guid("4c4ac2d0-6231-1adf-d77d-f1973bad1b3d"),
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5574),
                            IsArchived = false,
                            Name = "Unbranded Concrete Table",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5575)
                        },
                        new
                        {
                            ProductId = new Guid("6d0bccb9-5439-b035-cfe2-8afba9a143e2"),
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5590),
                            Description = "The Football Is Good For Training And Recreational Purposes",
                            IsArchived = true,
                            Name = "Handcrafted Metal Towels",
                            SupplierId = 182L,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5591)
                        },
                        new
                        {
                            ProductId = new Guid("748d4380-0e91-9d9c-2e78-95d4ac9d28bb"),
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5606),
                            IsArchived = true,
                            Name = "Generic Soft Chips",
                            SupplierId = 123L,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5606)
                        },
                        new
                        {
                            ProductId = new Guid("917b20df-5c5c-9cb6-9bb9-11a73c3dd3ed"),
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5620),
                            IsArchived = false,
                            Name = "Rustic Rubber Mouse",
                            SupplierId = 193L,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5621)
                        },
                        new
                        {
                            ProductId = new Guid("dd4af1db-de8f-0aa4-a1b2-ed200bd11bdf"),
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5636),
                            Description = "The Football Is Good For Training And Recreational Purposes",
                            IsArchived = true,
                            Name = "Small Wooden Table",
                            SupplierId = 128L,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5637)
                        },
                        new
                        {
                            ProductId = new Guid("d57526e4-1bc4-fa1d-3281-6b6bbf0cda6c"),
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5655),
                            Description = "New ABC 13 9370, 13.3, 5th Gen CoreA5-8250U, 8GB RAM, 256GB SSD, power UHD Graphics, OS 10 Home, OS Office A & J 2016",
                            IsArchived = false,
                            Name = "Gorgeous Metal Chicken",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5655)
                        },
                        new
                        {
                            ProductId = new Guid("691eb2d6-314c-53c3-3aab-b72e34dd96cf"),
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5698),
                            IsArchived = false,
                            Name = "Small Plastic Pizza",
                            SupplierId = 185L,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5698)
                        },
                        new
                        {
                            ProductId = new Guid("10a20f76-91d6-677c-07ee-68ff91e550a8"),
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5715),
                            Description = "Andy shoes are designed to keeping in mind durability as well as trends, the most stylish range of shoes & sandals",
                            IsArchived = false,
                            Name = "Ergonomic Fresh Chair",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5716)
                        },
                        new
                        {
                            ProductId = new Guid("5e5a79a6-5d5b-14ad-bed5-21214263193b"),
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5731),
                            IsArchived = false,
                            Name = "Tasty Plastic Chair",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5731)
                        },
                        new
                        {
                            ProductId = new Guid("e6a3f35b-0d6c-ad52-fa2f-172109ac90ba"),
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5745),
                            IsArchived = true,
                            Name = "Sleek Plastic Gloves",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5745)
                        },
                        new
                        {
                            ProductId = new Guid("c6ce3b76-1246-5a86-5600-690a2e51c7cf"),
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5759),
                            Description = "New ABC 13 9370, 13.3, 5th Gen CoreA5-8250U, 8GB RAM, 256GB SSD, power UHD Graphics, OS 10 Home, OS Office A & J 2016",
                            IsArchived = true,
                            Name = "Tasty Rubber Keyboard",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5760)
                        },
                        new
                        {
                            ProductId = new Guid("d0e3c0e5-8580-5cd2-fff6-d283e6b41d91"),
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5773),
                            IsArchived = false,
                            Name = "Small Frozen Chair",
                            SupplierId = 120L,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5773)
                        },
                        new
                        {
                            ProductId = new Guid("44ec8c13-b9cd-70ba-5260-51a38ad67a96"),
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5787),
                            Description = "Andy shoes are designed to keeping in mind durability as well as trends, the most stylish range of shoes & sandals",
                            IsArchived = false,
                            Name = "Fantastic Concrete Shoes",
                            SupplierId = 134L,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5787)
                        },
                        new
                        {
                            ProductId = new Guid("36d50a52-29c3-9a3f-716c-f9e617313c18"),
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5803),
                            Description = "Carbonite web goalkeeper gloves are ergonomically designed to give easy fit",
                            IsArchived = false,
                            Name = "Sleek Metal Soap",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5803)
                        },
                        new
                        {
                            ProductId = new Guid("53268d03-8513-d5f8-d47b-afe4398f3612"),
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5842),
                            IsArchived = true,
                            Name = "Generic Metal Salad",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5843)
                        },
                        new
                        {
                            ProductId = new Guid("4b40f938-1581-a32e-a5c0-9c18465de601"),
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5858),
                            Description = "The beautiful range of Apple Naturalé that has an exciting mix of natural ingredients. With the Goodness of 100% Natural Ingredients",
                            IsArchived = false,
                            Name = "Gorgeous Rubber Chicken",
                            SupplierId = 156L,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5858)
                        },
                        new
                        {
                            ProductId = new Guid("b07224e6-6de1-078e-77db-8cb78a526581"),
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5874),
                            Description = "The slim & simple Maple Gaming Keyboard from Dev Byte comes with a sleek body and 7- Color RGB LED Back-lighting for smart functionality",
                            IsArchived = false,
                            Name = "Generic Fresh Soap",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5874)
                        },
                        new
                        {
                            ProductId = new Guid("9248519f-5ea8-24f5-929b-f1bbf2c3520d"),
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5889),
                            Description = "New range of formal shirts are designed keeping you in mind. With fits and styling that will make you stand apart",
                            IsArchived = false,
                            Name = "Awesome Cotton Cheese",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5889)
                        },
                        new
                        {
                            ProductId = new Guid("823444f1-24bf-ef69-3041-1b4674ce7d96"),
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5904),
                            Description = "Carbonite web goalkeeper gloves are ergonomically designed to give easy fit",
                            IsArchived = true,
                            Name = "Ergonomic Cotton Bacon",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5904)
                        },
                        new
                        {
                            ProductId = new Guid("2839f2e8-1a35-f860-86b6-19c1a1d27788"),
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5919),
                            IsArchived = false,
                            Name = "Fantastic Granite Soap",
                            SupplierId = 157L,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5919)
                        },
                        new
                        {
                            ProductId = new Guid("db3a8db6-a245-b773-f5d7-312fc7fb26ba"),
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5934),
                            IsArchived = true,
                            Name = "Refined Plastic Soap",
                            SupplierId = 138L,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5935)
                        },
                        new
                        {
                            ProductId = new Guid("464e8df9-4bc5-34f1-637f-8d261d4013a6"),
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5975),
                            IsArchived = false,
                            Name = "Ergonomic Soft Shirt",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5976)
                        },
                        new
                        {
                            ProductId = new Guid("a1e9ae79-c5ef-fa67-ee4c-152571308b3f"),
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5990),
                            Description = "Andy shoes are designed to keeping in mind durability as well as trends, the most stylish range of shoes & sandals",
                            IsArchived = false,
                            Name = "Small Cotton Sausages",
                            SupplierId = 131L,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(5990)
                        },
                        new
                        {
                            ProductId = new Guid("f92a45cb-f494-f2c7-c94c-9d089374b925"),
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(6009),
                            IsArchived = false,
                            Name = "Licensed Steel Sausages",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(6009)
                        },
                        new
                        {
                            ProductId = new Guid("c14aa15d-48e8-e500-e424-7f3d015a584e"),
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(6024),
                            Description = "The Apollotech B340 is an affordable wireless mouse with reliable connectivity, 12 months battery life and modern design",
                            IsArchived = true,
                            Name = "Incredible Concrete Mouse",
                            SupplierId = 144L,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(6025)
                        },
                        new
                        {
                            ProductId = new Guid("04b90168-323c-baca-f337-527c31e1039c"),
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(6040),
                            IsArchived = true,
                            Name = "Handcrafted Rubber Towels",
                            SupplierId = 198L,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(6040)
                        },
                        new
                        {
                            ProductId = new Guid("8197f14e-f5ce-88b2-4d80-4746e0a7f2b5"),
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(6056),
                            Description = "New ABC 13 9370, 13.3, 5th Gen CoreA5-8250U, 8GB RAM, 256GB SSD, power UHD Graphics, OS 10 Home, OS Office A & J 2016",
                            IsArchived = false,
                            Name = "Awesome Soft Bike",
                            SupplierId = 106L,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(6056)
                        },
                        new
                        {
                            ProductId = new Guid("889eb714-3e8c-1e2c-54ed-40323924419f"),
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(6070),
                            Description = "Carbonite web goalkeeper gloves are ergonomically designed to give easy fit",
                            IsArchived = true,
                            Name = "Incredible Wooden Soap",
                            SupplierId = 197L,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(6070)
                        },
                        new
                        {
                            ProductId = new Guid("95b11b65-4dde-b62c-2fb9-3d14ffc1411b"),
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(6106),
                            Description = "Boston's most advanced compression wear technology increases muscle oxygenation, stabilizes active muscles",
                            IsArchived = true,
                            Name = "Awesome Concrete Shirt",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(6106)
                        },
                        new
                        {
                            ProductId = new Guid("25631cdd-d2fb-3fb0-0426-227a89759f14"),
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(6120),
                            Description = "The slim & simple Maple Gaming Keyboard from Dev Byte comes with a sleek body and 7- Color RGB LED Back-lighting for smart functionality",
                            IsArchived = false,
                            Name = "Handmade Cotton Towels",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(6120)
                        },
                        new
                        {
                            ProductId = new Guid("ac4db52d-1c01-cf30-2e01-30c89033e78d"),
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(6135),
                            IsArchived = false,
                            Name = "Ergonomic Plastic Cheese",
                            SupplierId = 121L,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(6135)
                        },
                        new
                        {
                            ProductId = new Guid("de7f3f06-e8db-44f9-84ce-1d62920309f2"),
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(6150),
                            IsArchived = false,
                            Name = "Fantastic Fresh Bike",
                            SupplierId = 182L,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(6150)
                        },
                        new
                        {
                            ProductId = new Guid("0088f9b5-8d00-329f-0ffb-dcb1f0521836"),
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(6164),
                            Description = "Andy shoes are designed to keeping in mind durability as well as trends, the most stylish range of shoes & sandals",
                            IsArchived = false,
                            Name = "Unbranded Frozen Keyboard",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(6165)
                        },
                        new
                        {
                            ProductId = new Guid("aba244f4-1a51-fc6a-6926-ef714384407d"),
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(6179),
                            Description = "The slim & simple Maple Gaming Keyboard from Dev Byte comes with a sleek body and 7- Color RGB LED Back-lighting for smart functionality",
                            IsArchived = false,
                            Name = "Rustic Rubber Sausages",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(6179)
                        },
                        new
                        {
                            ProductId = new Guid("b970dfc8-734a-f701-d40b-49fd87bde072"),
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(6194),
                            IsArchived = true,
                            Name = "Unbranded Granite Shirt",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(6194)
                        },
                        new
                        {
                            ProductId = new Guid("63f0befa-3aeb-463c-7289-3af9421eb2ee"),
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(6257),
                            Description = "Ergonomic executive chair upholstered in bonded black leather and PVC padded seat and back for all-day comfort and support",
                            IsArchived = false,
                            Name = "Incredible Steel Gloves",
                            SupplierId = 181L,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(6258)
                        },
                        new
                        {
                            ProductId = new Guid("32db338c-8773-4c58-6d4f-b41193e8d10d"),
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(6272),
                            IsArchived = false,
                            Name = "Gorgeous Plastic Bacon",
                            SupplierId = 128L,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(6273)
                        },
                        new
                        {
                            ProductId = new Guid("2d0dd14a-51cb-c9f8-a85f-076014ff01e1"),
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(6287),
                            IsArchived = true,
                            Name = "Licensed Wooden Towels",
                            SupplierId = 169L,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(6288)
                        },
                        new
                        {
                            ProductId = new Guid("809094ca-1942-62ca-f728-b54a1ea2febc"),
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(6301),
                            Description = "The automobile layout consists of a front-engine design, with transaxle-type transmissions mounted at the rear of the engine and four wheel drive",
                            IsArchived = true,
                            Name = "Licensed Steel Towels",
                            SupplierId = 169L,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(6301)
                        },
                        new
                        {
                            ProductId = new Guid("7b9a9dca-645d-654a-4300-bd684865463d"),
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(6315),
                            Description = "New range of formal shirts are designed keeping you in mind. With fits and styling that will make you stand apart",
                            IsArchived = true,
                            Name = "Licensed Granite Mouse",
                            SupplierId = 114L,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(6315)
                        },
                        new
                        {
                            ProductId = new Guid("defefb95-283b-5d7f-bb78-7c2fe699c46a"),
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(6329),
                            IsArchived = false,
                            Name = "Unbranded Metal Table",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(6329)
                        },
                        new
                        {
                            ProductId = new Guid("e73d84af-3b2d-c96a-3ac8-684c8708d73d"),
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(6347),
                            IsArchived = false,
                            Name = "Fantastic Rubber Soap",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(6347)
                        },
                        new
                        {
                            ProductId = new Guid("8f91b4b2-96ed-bb76-508c-a442768d3c12"),
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(6396),
                            IsArchived = false,
                            Name = "Licensed Frozen Towels",
                            SupplierId = 115L,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 201, DateTimeKind.Utc).AddTicks(6396)
                        });
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.ProductBundle", b =>
                {
                    b.Property<Guid>("ProductBundleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("productbundleid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("createddatetime");

                    b.Property<long?>("CreatedUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("createduserid");

                    b.Property<long?>("ModifiedUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("modifieduserid");

                    b.Property<Guid>("ProductVariantId")
                        .HasColumnType("uuid")
                        .HasColumnName("productvariantid");

                    b.Property<DateTime>("UpdatedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updateddatetime");

                    b.HasKey("ProductBundleId")
                        .HasName("pk_productbundle");

                    b.HasIndex("CreatedUserId")
                        .HasDatabaseName("ix_productbundle_createduserid");

                    b.HasIndex("ModifiedUserId")
                        .HasDatabaseName("ix_productbundle_modifieduserid");

                    b.HasIndex("ProductVariantId")
                        .HasDatabaseName("ix_productbundle_productvariantid");

                    b.ToTable("productbundle", (string)null);
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.ProductHistory", b =>
                {
                    b.Property<Guid>("ProductHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("producthistoryid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("createddatetime");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)")
                        .HasColumnName("message");

                    b.Property<Guid?>("ProductId")
                        .HasColumnType("uuid")
                        .HasColumnName("productid");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("userid");

                    b.HasKey("ProductHistoryId")
                        .HasName("pk_producthistory");

                    b.HasIndex("ProductId")
                        .HasDatabaseName("ix_producthistory_productid");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_producthistory_userid");

                    b.ToTable("producthistory", (string)null);
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.ProductVariant", b =>
                {
                    b.Property<Guid>("ProductVariantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("productvariantid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<string>("Barcode")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("barcode");

                    b.Property<string>("Barcode1")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("barcode1");

                    b.Property<string>("Barcode2")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("barcode2");

                    b.Property<string>("Barcode3")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("barcode3");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("createddatetime");

                    b.Property<long?>("CreatedUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("createduserid");

                    b.Property<double?>("Height")
                        .HasColumnType("double precision")
                        .HasColumnName("height");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("boolean")
                        .HasColumnName("isarchived");

                    b.Property<double?>("Length")
                        .HasColumnType("double precision")
                        .HasColumnName("length");

                    b.Property<long?>("ModifiedUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("modifieduserid");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid")
                        .HasColumnName("productid");

                    b.Property<float?>("PurchasePrice")
                        .HasColumnType("real")
                        .HasColumnName("purchaseprice");

                    b.Property<float?>("RetailPrice")
                        .HasColumnType("real")
                        .HasColumnName("retailprice");

                    b.Property<string>("SKU")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("sku");

                    b.Property<float?>("TaxRate")
                        .HasColumnType("real")
                        .HasColumnName("taxrate");

                    b.Property<DateTime>("UpdatedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updateddatetime");

                    b.Property<double?>("Weight")
                        .HasColumnType("double precision")
                        .HasColumnName("weight");

                    b.Property<double?>("Width")
                        .HasColumnType("double precision")
                        .HasColumnName("width");

                    b.HasKey("ProductVariantId")
                        .HasName("pk_productvariant");

                    b.HasIndex("CreatedUserId")
                        .HasDatabaseName("ix_productvariant_createduserid");

                    b.HasIndex("ModifiedUserId")
                        .HasDatabaseName("ix_productvariant_modifieduserid");

                    b.HasIndex("ProductId")
                        .HasDatabaseName("ix_productvariant_productid");

                    b.ToTable("productvariant", (string)null);

                    b.HasData(
                        new
                        {
                            ProductVariantId = new Guid("79977149-987f-2aff-067b-86d83a4c31f2"),
                            Barcode = "Concrete",
                            Barcode3 = "Auto Loan Account",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 204, DateTimeKind.Utc).AddTicks(3490),
                            IsArchived = true,
                            Length = 0.86414574173472158,
                            ProductId = new Guid("0088f9b5-8d00-329f-0ffb-dcb1f0521836"),
                            RetailPrice = 0.7914169f,
                            SKU = "Streamlined",
                            TaxRate = 0.05820383f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 204, DateTimeKind.Utc).AddTicks(3499),
                            Weight = 0.40008344007659863,
                            Width = 0.85700747503759689
                        },
                        new
                        {
                            ProductVariantId = new Guid("9e5f2b39-8c69-5626-9607-b570e6c1d82c"),
                            Barcode = "Checking Account",
                            Barcode1 = "Refined",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 204, DateTimeKind.Utc).AddTicks(5767),
                            Height = 0.8471974110450583,
                            IsArchived = false,
                            Length = 0.39311196114547176,
                            ProductId = new Guid("de9674f2-7a55-ec71-5f67-8442136b78da"),
                            PurchasePrice = 0.21228148f,
                            RetailPrice = 0.03690901f,
                            SKU = "Strategist",
                            TaxRate = 0.043476004f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 204, DateTimeKind.Utc).AddTicks(5768),
                            Width = 0.34737367106013639
                        },
                        new
                        {
                            ProductVariantId = new Guid("f880f7b4-58c7-2ca3-ea10-287db692563e"),
                            Barcode = "Liaison",
                            Barcode3 = "bypass",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 204, DateTimeKind.Utc).AddTicks(5904),
                            IsArchived = true,
                            Length = 0.30356071856970002,
                            ProductId = new Guid("653dd38d-d89c-5cf6-6cf3-55ee2623679a"),
                            SKU = "Checking Account",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 204, DateTimeKind.Utc).AddTicks(5904),
                            Width = 0.43836402540950292
                        },
                        new
                        {
                            ProductVariantId = new Guid("f68355fd-6df7-29bd-605d-320b3c9ca622"),
                            Barcode = "Garden",
                            Barcode1 = "tan",
                            Barcode2 = "Village",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 204, DateTimeKind.Utc).AddTicks(6001),
                            Height = 0.48991040815129427,
                            IsArchived = false,
                            ProductId = new Guid("a885d2bb-477d-dfcc-c704-c4a33b6bb471"),
                            PurchasePrice = 0.65996826f,
                            RetailPrice = 0.30638018f,
                            SKU = "Borders",
                            TaxRate = 0.012293015f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 204, DateTimeKind.Utc).AddTicks(6001),
                            Weight = 0.61296149511493814,
                            Width = 0.80127031765937351
                        },
                        new
                        {
                            ProductVariantId = new Guid("131ad091-d9c3-f212-0ba8-5949bb871ab0"),
                            Barcode = "Alabama",
                            Barcode1 = "Markets",
                            Barcode2 = "Internal",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 204, DateTimeKind.Utc).AddTicks(6068),
                            Height = 0.36224335588619272,
                            IsArchived = true,
                            ProductId = new Guid("5e5a79a6-5d5b-14ad-bed5-21214263193b"),
                            PurchasePrice = 0.05242452f,
                            RetailPrice = 0.17162955f,
                            SKU = "Handcrafted Metal Bike",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 204, DateTimeKind.Utc).AddTicks(6068)
                        },
                        new
                        {
                            ProductVariantId = new Guid("5eab708d-974b-0671-4492-3da477d0aa58"),
                            Barcode = "eyeballs",
                            Barcode1 = "Tunisia",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 204, DateTimeKind.Utc).AddTicks(6145),
                            IsArchived = false,
                            ProductId = new Guid("2839f2e8-1a35-f860-86b6-19c1a1d27788"),
                            PurchasePrice = 0.9356859f,
                            SKU = "Generic",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 204, DateTimeKind.Utc).AddTicks(6145),
                            Weight = 0.18550741262059073
                        },
                        new
                        {
                            ProductVariantId = new Guid("c1eea81a-6bb7-b79a-35e3-e3d9eec6ef92"),
                            Barcode = "Harbors",
                            Barcode3 = "Small Granite Salad",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 204, DateTimeKind.Utc).AddTicks(6187),
                            IsArchived = false,
                            Length = 0.026930574805909106,
                            ProductId = new Guid("de7f3f06-e8db-44f9-84ce-1d62920309f2"),
                            RetailPrice = 0.34447715f,
                            SKU = "black",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 204, DateTimeKind.Utc).AddTicks(6187),
                            Width = 0.70034504714437995
                        },
                        new
                        {
                            ProductVariantId = new Guid("7975526e-bd17-e2e6-7908-980d4e28c006"),
                            Barcode = "Handcrafted Steel Gloves",
                            Barcode1 = "Streets",
                            Barcode2 = "Home & Tools",
                            Barcode3 = "global",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 204, DateTimeKind.Utc).AddTicks(6256),
                            IsArchived = false,
                            Length = 0.5800343191158186,
                            ProductId = new Guid("95b11b65-4dde-b62c-2fb9-3d14ffc1411b"),
                            PurchasePrice = 0.97941506f,
                            RetailPrice = 0.3617855f,
                            SKU = "functionalities",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 204, DateTimeKind.Utc).AddTicks(6257)
                        },
                        new
                        {
                            ProductVariantId = new Guid("c47e2cad-1be9-1624-fad7-4ee0cac2a75b"),
                            Barcode = "SQL",
                            Barcode1 = "Mississippi",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 204, DateTimeKind.Utc).AddTicks(6349),
                            IsArchived = true,
                            Length = 0.85880551666897043,
                            ProductId = new Guid("464e8df9-4bc5-34f1-637f-8d261d4013a6"),
                            PurchasePrice = 0.8953465f,
                            SKU = "orchid",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 204, DateTimeKind.Utc).AddTicks(6349),
                            Weight = 0.14759440959784872,
                            Width = 0.85104775235571328
                        },
                        new
                        {
                            ProductVariantId = new Guid("5c64f572-a44f-0f02-82f5-e2a45f44755d"),
                            Barcode = "Investor",
                            Barcode1 = "Haven",
                            Barcode3 = "policy",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 204, DateTimeKind.Utc).AddTicks(6386),
                            IsArchived = true,
                            ProductId = new Guid("8197f14e-f5ce-88b2-4d80-4746e0a7f2b5"),
                            PurchasePrice = 0.42195344f,
                            SKU = "incubate",
                            TaxRate = 0.05718063f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 204, DateTimeKind.Utc).AddTicks(6386),
                            Weight = 0.21129566394318625,
                            Width = 0.098499135625781095
                        },
                        new
                        {
                            ProductVariantId = new Guid("36b5ce01-d0ee-42ea-928d-9a19135921c4"),
                            Barcode = "turquoise",
                            Barcode2 = "indexing",
                            Barcode3 = "Assistant",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 204, DateTimeKind.Utc).AddTicks(6449),
                            Height = 0.47922918222808708,
                            IsArchived = true,
                            Length = 0.70318881548158307,
                            ProductId = new Guid("778660c0-4365-e8fe-2c90-c5e241030d9b"),
                            PurchasePrice = 0.5117925f,
                            RetailPrice = 0.2842959f,
                            SKU = "Pennsylvania",
                            TaxRate = 0.023854628f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 204, DateTimeKind.Utc).AddTicks(6449),
                            Weight = 0.2499539108248213
                        },
                        new
                        {
                            ProductVariantId = new Guid("1f904565-ee92-a64e-cb36-a3857e3feada"),
                            Barcode = "Delaware",
                            Barcode1 = "Swedish Krona",
                            Barcode2 = "invoice",
                            Barcode3 = "Licensed Frozen Bacon",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 204, DateTimeKind.Utc).AddTicks(6487),
                            Height = 0.18693968569251693,
                            IsArchived = true,
                            Length = 0.79886052189341772,
                            ProductId = new Guid("95b11b65-4dde-b62c-2fb9-3d14ffc1411b"),
                            RetailPrice = 0.28721365f,
                            SKU = "empower",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 204, DateTimeKind.Utc).AddTicks(6487)
                        },
                        new
                        {
                            ProductVariantId = new Guid("39f7c055-aaac-2bb3-2ff2-385ef84d8499"),
                            Barcode = "synthesize",
                            Barcode1 = "Grocery",
                            Barcode3 = "Markets",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 204, DateTimeKind.Utc).AddTicks(6533),
                            Height = 0.30136898686241775,
                            IsArchived = true,
                            Length = 0.48633097414222126,
                            ProductId = new Guid("d57526e4-1bc4-fa1d-3281-6b6bbf0cda6c"),
                            SKU = "Forward",
                            TaxRate = 0.03843593f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 204, DateTimeKind.Utc).AddTicks(6533),
                            Weight = 0.48082006977909247
                        },
                        new
                        {
                            ProductVariantId = new Guid("12e34d1c-649a-1265-f0a6-9382bb273d43"),
                            Barcode = "Iowa",
                            Barcode1 = "Fresh",
                            Barcode3 = "copying",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 204, DateTimeKind.Utc).AddTicks(6573),
                            Height = 0.49319955263901483,
                            IsArchived = false,
                            Length = 0.52944283212043475,
                            ProductId = new Guid("10a20f76-91d6-677c-07ee-68ff91e550a8"),
                            PurchasePrice = 0.602984f,
                            SKU = "Tactics",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 204, DateTimeKind.Utc).AddTicks(6573),
                            Weight = 0.94361282882448883,
                            Width = 0.57043089092263533
                        },
                        new
                        {
                            ProductVariantId = new Guid("c13d5b93-08c7-a352-ee4f-114a698e35a5"),
                            Barcode = "optimal",
                            Barcode1 = "user-centric",
                            Barcode3 = "grow",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 204, DateTimeKind.Utc).AddTicks(6607),
                            Height = 0.85209119452726623,
                            IsArchived = true,
                            Length = 0.73297143621974226,
                            ProductId = new Guid("32db338c-8773-4c58-6d4f-b41193e8d10d"),
                            PurchasePrice = 0.5459336f,
                            RetailPrice = 0.09055306f,
                            SKU = "streamline",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 204, DateTimeKind.Utc).AddTicks(6607),
                            Weight = 0.9488794849947465
                        },
                        new
                        {
                            ProductVariantId = new Guid("4ff922d5-27bf-2e7d-4c43-58567da41101"),
                            Barcode = "artificial intelligence",
                            Barcode1 = "Principal",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 204, DateTimeKind.Utc).AddTicks(6645),
                            Height = 0.41501014326466718,
                            IsArchived = false,
                            Length = 0.41059576040627238,
                            ProductId = new Guid("c14aa15d-48e8-e500-e424-7f3d015a584e"),
                            RetailPrice = 0.77748865f,
                            SKU = "New Hampshire",
                            TaxRate = 0.08929571f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 204, DateTimeKind.Utc).AddTicks(6645),
                            Weight = 0.3822849483146728
                        },
                        new
                        {
                            ProductVariantId = new Guid("e39305b3-3418-17dd-bb53-e8bc5c239df2"),
                            Barcode = "Rustic Soft Car",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 204, DateTimeKind.Utc).AddTicks(6677),
                            IsArchived = true,
                            ProductId = new Guid("8116f650-b121-7f5a-6d20-3c185005c1e1"),
                            PurchasePrice = 0.77234125f,
                            RetailPrice = 0.24783644f,
                            SKU = "reintermediate",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 204, DateTimeKind.Utc).AddTicks(6677)
                        },
                        new
                        {
                            ProductVariantId = new Guid("0a926617-2264-22f2-faef-376525a70259"),
                            Barcode = "Assistant",
                            Barcode2 = "Garden",
                            Barcode3 = "French Polynesia",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 204, DateTimeKind.Utc).AddTicks(6718),
                            Height = 0.46647041498984693,
                            IsArchived = true,
                            Length = 0.10596302249746538,
                            ProductId = new Guid("04b90168-323c-baca-f337-527c31e1039c"),
                            PurchasePrice = 0.4273202f,
                            SKU = "Antigua and Barbuda",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 204, DateTimeKind.Utc).AddTicks(6718),
                            Weight = 0.061381635284694674,
                            Width = 0.13459026586943784
                        },
                        new
                        {
                            ProductVariantId = new Guid("aa709680-53e7-5ac2-6ce6-416c845cbd75"),
                            Barcode = "primary",
                            Barcode1 = "directional",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 204, DateTimeKind.Utc).AddTicks(6788),
                            IsArchived = false,
                            ProductId = new Guid("c8a136e8-577b-0237-67df-56efa3dbbfcb"),
                            PurchasePrice = 0.040292643f,
                            SKU = "programming",
                            TaxRate = 0.06910888f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 204, DateTimeKind.Utc).AddTicks(6788),
                            Weight = 0.22150500035914825,
                            Width = 0.74868001637453219
                        },
                        new
                        {
                            ProductVariantId = new Guid("f75b3b0d-5b6d-2c3d-5b92-4d0841ec7afe"),
                            Barcode = "Dynamic",
                            Barcode2 = "Generic",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 204, DateTimeKind.Utc).AddTicks(6828),
                            IsArchived = true,
                            ProductId = new Guid("db3a8db6-a245-b773-f5d7-312fc7fb26ba"),
                            PurchasePrice = 0.8696756f,
                            SKU = "Eritrea",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 204, DateTimeKind.Utc).AddTicks(6828),
                            Weight = 0.27546825319317553,
                            Width = 0.58284018634950752
                        },
                        new
                        {
                            ProductVariantId = new Guid("9e40fa95-81a8-c801-f98e-262044d73365"),
                            Barcode = "Cambridgeshire",
                            Barcode3 = "withdrawal",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 204, DateTimeKind.Utc).AddTicks(6860),
                            Height = 0.32853902845109767,
                            IsArchived = false,
                            ProductId = new Guid("56bb4b5a-3797-5621-7b87-ca8423f1930f"),
                            SKU = "Rubber",
                            TaxRate = 0.032407064f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 204, DateTimeKind.Utc).AddTicks(6861),
                            Weight = 0.62269785982682269,
                            Width = 0.04736083701595703
                        },
                        new
                        {
                            ProductVariantId = new Guid("d391b310-af6b-a823-40d5-8dfd0255a288"),
                            Barcode = "sticky",
                            Barcode1 = "Accounts",
                            Barcode3 = "even-keeled",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 204, DateTimeKind.Utc).AddTicks(6892),
                            IsArchived = false,
                            Length = 0.66736245232977087,
                            ProductId = new Guid("db3a8db6-a245-b773-f5d7-312fc7fb26ba"),
                            PurchasePrice = 0.4691677f,
                            RetailPrice = 0.0075491443f,
                            SKU = "Markets",
                            TaxRate = 0.041865826f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 204, DateTimeKind.Utc).AddTicks(6893),
                            Width = 0.81019146591899516
                        },
                        new
                        {
                            ProductVariantId = new Guid("49e3b242-d8cf-8c09-c71e-338e44debb81"),
                            Barcode = "leverage",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 204, DateTimeKind.Utc).AddTicks(6925),
                            IsArchived = true,
                            Length = 0.78530095181674742,
                            ProductId = new Guid("d0e3c0e5-8580-5cd2-fff6-d283e6b41d91"),
                            PurchasePrice = 0.6622502f,
                            SKU = "feed",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 204, DateTimeKind.Utc).AddTicks(6926),
                            Width = 0.63229017827300826
                        },
                        new
                        {
                            ProductVariantId = new Guid("472d24c4-044e-6095-3371-8a64c5f9afc2"),
                            Barcode = "back up",
                            Barcode2 = "compressing",
                            Barcode3 = "Rustic",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 204, DateTimeKind.Utc).AddTicks(6960),
                            Height = 0.65011883929843028,
                            IsArchived = true,
                            Length = 0.25516166968977155,
                            ProductId = new Guid("b07224e6-6de1-078e-77db-8cb78a526581"),
                            RetailPrice = 0.79334134f,
                            SKU = "Avon",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 204, DateTimeKind.Utc).AddTicks(6960),
                            Weight = 0.97342920115842912
                        },
                        new
                        {
                            ProductVariantId = new Guid("ab688498-0101-2993-cda9-1130008916ee"),
                            Barcode = "invoice",
                            Barcode2 = "CSS",
                            Barcode3 = "Ville",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 204, DateTimeKind.Utc).AddTicks(6990),
                            Height = 0.097801091660652817,
                            IsArchived = false,
                            Length = 0.07514739505720669,
                            ProductId = new Guid("06e63b8c-da85-d5ae-6f59-868bac0ed939"),
                            PurchasePrice = 0.7045494f,
                            SKU = "Vista",
                            TaxRate = 0.054352716f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 204, DateTimeKind.Utc).AddTicks(6990),
                            Width = 0.22274613809899713
                        },
                        new
                        {
                            ProductVariantId = new Guid("4585e7cb-4e7f-d6f6-84d6-ebd7faf8265d"),
                            Barcode = "Solutions",
                            Barcode1 = "invoice",
                            Barcode2 = "Checking Account",
                            Barcode3 = "Senior",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 204, DateTimeKind.Utc).AddTicks(7023),
                            Height = 0.8222299757517082,
                            IsArchived = true,
                            ProductId = new Guid("404ac733-b74b-3fde-b462-0c01c351b89a"),
                            PurchasePrice = 0.37612382f,
                            RetailPrice = 0.010608641f,
                            SKU = "Reverse-engineered",
                            TaxRate = 0.026072279f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 204, DateTimeKind.Utc).AddTicks(7023),
                            Weight = 0.71510552787925374,
                            Width = 0.83020041502555852
                        },
                        new
                        {
                            ProductVariantId = new Guid("b580b3dc-7503-26cc-a772-aeeb22e23e55"),
                            Barcode = "Home, Computers & Computers",
                            Barcode1 = "Cambridgeshire",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 204, DateTimeKind.Utc).AddTicks(8292),
                            Height = 0.6022440710115452,
                            IsArchived = false,
                            ProductId = new Guid("36d50a52-29c3-9a3f-716c-f9e617313c18"),
                            SKU = "Intelligent Metal Computer",
                            TaxRate = 0.028462041f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 204, DateTimeKind.Utc).AddTicks(8294),
                            Width = 0.68046325756258486
                        },
                        new
                        {
                            ProductVariantId = new Guid("99e2ce9b-430f-70ad-82c4-a9f11dcd9e21"),
                            Barcode = "connecting",
                            Barcode1 = "JSON",
                            Barcode2 = "Bhutanese Ngultrum",
                            Barcode3 = "tertiary",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 204, DateTimeKind.Utc).AddTicks(8746),
                            Height = 0.22860951872012089,
                            IsArchived = true,
                            ProductId = new Guid("b970dfc8-734a-f701-d40b-49fd87bde072"),
                            PurchasePrice = 0.8626503f,
                            SKU = "complexity",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 204, DateTimeKind.Utc).AddTicks(8749)
                        },
                        new
                        {
                            ProductVariantId = new Guid("e3c87d82-e918-0204-7888-39d798788041"),
                            Barcode = "withdrawal",
                            Barcode1 = "Handmade Rubber Fish",
                            Barcode2 = "connect",
                            Barcode3 = "redundant",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 204, DateTimeKind.Utc).AddTicks(8950),
                            IsArchived = false,
                            Length = 0.77805513971394635,
                            ProductId = new Guid("ffc1acd4-31e8-f885-8e6e-92ed752471ec"),
                            SKU = "firewall",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 204, DateTimeKind.Utc).AddTicks(8950),
                            Width = 0.50084566581102352
                        },
                        new
                        {
                            ProductVariantId = new Guid("b60199ba-146e-7e27-4202-3a4ba1ff26e9"),
                            Barcode = "Unbranded Cotton Shirt",
                            Barcode2 = "Sleek Concrete Keyboard",
                            Barcode3 = "Phased",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 204, DateTimeKind.Utc).AddTicks(9100),
                            IsArchived = false,
                            ProductId = new Guid("e6a3f35b-0d6c-ad52-fa2f-172109ac90ba"),
                            PurchasePrice = 0.91364586f,
                            SKU = "Checking Account",
                            TaxRate = 0.08360296f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 204, DateTimeKind.Utc).AddTicks(9100),
                            Weight = 0.74330721830171864,
                            Width = 0.50371532351882908
                        },
                        new
                        {
                            ProductVariantId = new Guid("c0669383-0ba3-2adf-f92f-93fee3b13aa2"),
                            Barcode = "Fresh",
                            Barcode1 = "invoice",
                            Barcode3 = "Buckinghamshire",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 204, DateTimeKind.Utc).AddTicks(9235),
                            IsArchived = false,
                            Length = 0.45160755442995931,
                            ProductId = new Guid("a7b25e73-ccc4-031c-357c-75ded4000e97"),
                            PurchasePrice = 0.6313671f,
                            SKU = "Personal Loan Account",
                            TaxRate = 0.023619546f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 204, DateTimeKind.Utc).AddTicks(9235),
                            Weight = 0.051681930223331757
                        },
                        new
                        {
                            ProductVariantId = new Guid("216141e2-4e6c-df72-7135-b109185d3d18"),
                            Barcode = "user-centric",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 204, DateTimeKind.Utc).AddTicks(9326),
                            IsArchived = true,
                            Length = 0.60754018817448063,
                            ProductId = new Guid("b07224e6-6de1-078e-77db-8cb78a526581"),
                            RetailPrice = 0.84674776f,
                            SKU = "Netherlands Antillian Guilder",
                            TaxRate = 0.05335504f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 204, DateTimeKind.Utc).AddTicks(9327),
                            Width = 0.19399138735327467
                        },
                        new
                        {
                            ProductVariantId = new Guid("f040876b-2d4f-fdee-b98a-f85ac36654fb"),
                            Barcode = "Prairie",
                            Barcode3 = "sky blue",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 204, DateTimeKind.Utc).AddTicks(9568),
                            IsArchived = false,
                            Length = 0.83916923722213566,
                            ProductId = new Guid("d57526e4-1bc4-fa1d-3281-6b6bbf0cda6c"),
                            RetailPrice = 0.16219097f,
                            SKU = "Beauty & Automotive",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 204, DateTimeKind.Utc).AddTicks(9569)
                        },
                        new
                        {
                            ProductVariantId = new Guid("70e36954-9a8b-45fd-8e6e-baef79f7af07"),
                            Barcode = "sexy",
                            Barcode1 = "indexing",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 204, DateTimeKind.Utc).AddTicks(9756),
                            IsArchived = false,
                            ProductId = new Guid("a5202e07-085c-5ace-958e-890551a7adb1"),
                            PurchasePrice = 0.63296133f,
                            RetailPrice = 0.31507972f,
                            SKU = "Netherlands",
                            TaxRate = 0.06801763f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 204, DateTimeKind.Utc).AddTicks(9756),
                            Width = 0.81404722706137567
                        },
                        new
                        {
                            ProductVariantId = new Guid("fe8e00a0-d576-71d0-0533-6aab8c0e9a23"),
                            Barcode = "Harbor",
                            Barcode2 = "Lodge",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 204, DateTimeKind.Utc).AddTicks(9997),
                            IsArchived = true,
                            ProductId = new Guid("56bb4b5a-3797-5621-7b87-ca8423f1930f"),
                            RetailPrice = 0.49701288f,
                            SKU = "out-of-the-box",
                            TaxRate = 0.06061178f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 204, DateTimeKind.Utc).AddTicks(9998),
                            Weight = 0.64437150240148022
                        },
                        new
                        {
                            ProductVariantId = new Guid("9847852a-2012-745a-381c-ad2c78258238"),
                            Barcode = "XML",
                            Barcode2 = "Generic",
                            Barcode3 = "bypass",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(98),
                            Height = 0.16918180844242769,
                            IsArchived = true,
                            ProductId = new Guid("cc2d75b7-e516-86cb-0262-87954e295a53"),
                            SKU = "Ergonomic Frozen Tuna",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(98),
                            Weight = 0.20994736263991676
                        },
                        new
                        {
                            ProductVariantId = new Guid("b891fc74-1306-fb65-efd7-a2db3af5cab3"),
                            Barcode = "Ergonomic Soft Computer",
                            Barcode2 = "Internal",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(210),
                            IsArchived = false,
                            ProductId = new Guid("eca49e87-c298-2ad4-d72f-38356213b9d2"),
                            SKU = "matrix",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(211),
                            Width = 0.94411657887702649
                        },
                        new
                        {
                            ProductVariantId = new Guid("fa618566-2596-2412-395c-aa201c5a95c3"),
                            Barcode = "Row",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(262),
                            IsArchived = false,
                            Length = 0.57252133384930037,
                            ProductId = new Guid("a7b25e73-ccc4-031c-357c-75ded4000e97"),
                            PurchasePrice = 0.6411824f,
                            RetailPrice = 0.8656147f,
                            SKU = "experiences",
                            TaxRate = 0.073623374f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(262),
                            Width = 0.057598015320300129
                        },
                        new
                        {
                            ProductVariantId = new Guid("73417c8a-0596-1cfd-c243-3f0f17dc574a"),
                            Barcode = "visualize",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(306),
                            Height = 0.87817558780227578,
                            IsArchived = true,
                            Length = 0.45605916318300144,
                            ProductId = new Guid("10a20f76-91d6-677c-07ee-68ff91e550a8"),
                            PurchasePrice = 0.44564572f,
                            SKU = "Buckinghamshire",
                            TaxRate = 0.048609596f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(306),
                            Weight = 0.16872281868416947,
                            Width = 0.0033803670682852937
                        },
                        new
                        {
                            ProductVariantId = new Guid("3f73de0e-8772-1e33-bdfe-3a28a8e6271b"),
                            Barcode = "Intelligent",
                            Barcode1 = "Analyst",
                            Barcode2 = "card",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(394),
                            IsArchived = true,
                            ProductId = new Guid("55359340-5867-a3d3-0af4-6165fe9df831"),
                            RetailPrice = 0.6627674f,
                            SKU = "hacking",
                            TaxRate = 0.002325075f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(394)
                        },
                        new
                        {
                            ProductVariantId = new Guid("733f496e-08d2-6711-a732-c749c2ccc9a0"),
                            Barcode = "back up",
                            Barcode3 = "Lake",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(446),
                            IsArchived = false,
                            ProductId = new Guid("6fdda05d-cb66-3d67-33f3-b0980375b744"),
                            RetailPrice = 0.25781435f,
                            SKU = "Cross-platform",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(447),
                            Weight = 0.4927614584997117
                        },
                        new
                        {
                            ProductVariantId = new Guid("3e6bbd2d-5300-18e8-57cf-6942457a4dc7"),
                            Barcode = "turquoise",
                            Barcode3 = "Internal",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(492),
                            IsArchived = true,
                            Length = 0.29087657355278573,
                            ProductId = new Guid("69970e40-b67f-b97d-0775-b4c7805aaf62"),
                            RetailPrice = 0.88061714f,
                            SKU = "calculating",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(492)
                        },
                        new
                        {
                            ProductVariantId = new Guid("c3b89973-0cc3-f3e8-3459-645472ea7404"),
                            Barcode = "bypassing",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(526),
                            IsArchived = false,
                            ProductId = new Guid("415ce7b1-6dfc-335a-f56e-8c0c3df7f6f7"),
                            RetailPrice = 0.24046536f,
                            SKU = "Ecuador",
                            TaxRate = 0.021411914f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(527)
                        },
                        new
                        {
                            ProductVariantId = new Guid("a921c3b2-ca18-03dc-3f62-b3159e7d31bc"),
                            Barcode = "syndicate",
                            Barcode1 = "neutral",
                            Barcode3 = "Mews",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(566),
                            Height = 0.094302273864998606,
                            IsArchived = false,
                            ProductId = new Guid("a885d2bb-477d-dfcc-c704-c4a33b6bb471"),
                            SKU = "Handmade Granite Towels",
                            TaxRate = 0.034328274f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(566)
                        },
                        new
                        {
                            ProductVariantId = new Guid("a1e4c689-ace0-b246-340b-1627abb378f9"),
                            Barcode = "multi-byte",
                            Barcode1 = "payment",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(606),
                            Height = 0.22514719386824741,
                            IsArchived = false,
                            Length = 0.95757110647744081,
                            ProductId = new Guid("63082b39-7e5e-9f05-1a0e-b6aae0a659b9"),
                            SKU = "invoice",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(607),
                            Weight = 0.36306645225876311,
                            Width = 0.93169324050270641
                        },
                        new
                        {
                            ProductVariantId = new Guid("1ee21374-3716-e3ea-779f-6358fa47d180"),
                            Barcode = "PCI",
                            Barcode2 = "copying",
                            Barcode3 = "SQL",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(641),
                            Height = 1.8657650807247335E-05,
                            IsArchived = true,
                            ProductId = new Guid("c8a136e8-577b-0237-67df-56efa3dbbfcb"),
                            RetailPrice = 0.5553924f,
                            SKU = "Engineer",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(641),
                            Weight = 0.39551303135022198
                        },
                        new
                        {
                            ProductVariantId = new Guid("f41921cd-eb55-1610-e1a1-3ded074ab077"),
                            Barcode = "Handcrafted",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(675),
                            IsArchived = false,
                            ProductId = new Guid("c6ce3b76-1246-5a86-5600-690a2e51c7cf"),
                            PurchasePrice = 0.82213396f,
                            SKU = "payment",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(675),
                            Weight = 0.22307399111943041
                        },
                        new
                        {
                            ProductVariantId = new Guid("1ec8dcda-84b0-9a02-d775-e7aaf7eab97c"),
                            Barcode = "Factors",
                            Barcode2 = "Toys & Sports",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(713),
                            IsArchived = true,
                            ProductId = new Guid("f1901298-0eb6-64f9-5886-1ec21048e162"),
                            SKU = "RAM",
                            TaxRate = 0.07488202f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(714),
                            Width = 0.81725482121913451
                        },
                        new
                        {
                            ProductVariantId = new Guid("eaac149c-f5f7-e401-2675-85b2de9d1060"),
                            Barcode = "Berkshire",
                            Barcode2 = "deposit",
                            Barcode3 = "IB",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(780),
                            Height = 0.21520950049870158,
                            IsArchived = true,
                            ProductId = new Guid("b970dfc8-734a-f701-d40b-49fd87bde072"),
                            PurchasePrice = 0.17180917f,
                            RetailPrice = 0.708011f,
                            SKU = "Inverse",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(780),
                            Weight = 0.65336428473394559
                        },
                        new
                        {
                            ProductVariantId = new Guid("ae23f6af-2540-8df0-85f1-e11ad5bc3b1a"),
                            Barcode = "Soft",
                            Barcode1 = "matrix",
                            Barcode2 = "Circle",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(812),
                            IsArchived = false,
                            ProductId = new Guid("778660c0-4365-e8fe-2c90-c5e241030d9b"),
                            PurchasePrice = 0.54709435f,
                            SKU = "Refined Cotton Cheese",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(813),
                            Weight = 0.028085404088760448
                        },
                        new
                        {
                            ProductVariantId = new Guid("b24507f5-35d4-be12-cf3b-cf7c6d9af95a"),
                            Barcode = "SMTP",
                            Barcode2 = "Facilitator",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(852),
                            IsArchived = false,
                            ProductId = new Guid("d05e2711-a3ff-4548-bb22-169f4aa0a94c"),
                            RetailPrice = 0.96905625f,
                            SKU = "Fantastic Granite Ball",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(852),
                            Weight = 0.99211809690674679,
                            Width = 0.31883787145784026
                        },
                        new
                        {
                            ProductVariantId = new Guid("473b5293-38a7-9856-b790-e243759025f2"),
                            Barcode = "withdrawal",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(893),
                            IsArchived = true,
                            ProductId = new Guid("2839f2e8-1a35-f860-86b6-19c1a1d27788"),
                            PurchasePrice = 0.55294734f,
                            RetailPrice = 0.23356098f,
                            SKU = "Branch",
                            TaxRate = 0.013554017f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(893),
                            Weight = 0.04731301034209924
                        },
                        new
                        {
                            ProductVariantId = new Guid("710476ec-02d7-62e9-8f47-cd10b085866f"),
                            Barcode = "indexing",
                            Barcode3 = "Granite",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(930),
                            IsArchived = false,
                            Length = 0.57967428983173996,
                            ProductId = new Guid("9248519f-5ea8-24f5-929b-f1bbf2c3520d"),
                            PurchasePrice = 0.16307665f,
                            RetailPrice = 0.0647977f,
                            SKU = "needs-based",
                            TaxRate = 0.05769548f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(930)
                        },
                        new
                        {
                            ProductVariantId = new Guid("922d313b-b612-a3ba-bf52-6eeba38107d0"),
                            Barcode = "Movies & Garden",
                            Barcode1 = "rich",
                            Barcode3 = "synthesize",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(964),
                            Height = 0.064959122829585852,
                            IsArchived = true,
                            Length = 0.21126253773051432,
                            ProductId = new Guid("691eb2d6-314c-53c3-3aab-b72e34dd96cf"),
                            PurchasePrice = 0.0074548046f,
                            RetailPrice = 0.61610585f,
                            SKU = "Corporate",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(964),
                            Weight = 0.98200754867028794
                        },
                        new
                        {
                            ProductVariantId = new Guid("99a80d9b-18b6-58b7-d85b-6f65c7ab2cb6"),
                            Barcode = "Springs",
                            Barcode1 = "Mauritius",
                            Barcode3 = "Knolls",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(1004),
                            IsArchived = true,
                            ProductId = new Guid("e73d84af-3b2d-c96a-3ac8-684c8708d73d"),
                            SKU = "Practical Rubber Chair",
                            TaxRate = 0.04231773f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(1004),
                            Width = 0.95212190083792525
                        },
                        new
                        {
                            ProductVariantId = new Guid("6708c5c3-e5b8-7abb-cea4-dd04e31d0dac"),
                            Barcode = "Personal Loan Account",
                            Barcode1 = "Small Plastic Chips",
                            Barcode2 = "programming",
                            Barcode3 = "Fresh",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(1074),
                            IsArchived = false,
                            ProductId = new Guid("88672cbf-752f-a74e-d6ce-4543b254e568"),
                            SKU = "Handcrafted Concrete Chips",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(1074),
                            Weight = 0.50617390848052402
                        },
                        new
                        {
                            ProductVariantId = new Guid("8b357998-f854-1987-9783-b75389b8de7d"),
                            Barcode = "Technician",
                            Barcode1 = "Rustic Granite Soap",
                            Barcode2 = "Meadows",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(1114),
                            IsArchived = false,
                            Length = 0.48464855481155616,
                            ProductId = new Guid("77be7c73-be33-6d2f-f56d-c1a8297aacc6"),
                            PurchasePrice = 0.8684275f,
                            RetailPrice = 0.19096145f,
                            SKU = "grey",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(1114),
                            Width = 0.72534657582889617
                        },
                        new
                        {
                            ProductVariantId = new Guid("c05ec297-e430-49dd-9026-bf00b04aec49"),
                            Barcode = "orchid",
                            Barcode3 = "Wooden",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(1154),
                            Height = 0.17549361715814732,
                            IsArchived = true,
                            Length = 0.46740717835137957,
                            ProductId = new Guid("ffc1acd4-31e8-f885-8e6e-92ed752471ec"),
                            PurchasePrice = 0.82414895f,
                            RetailPrice = 0.43495777f,
                            SKU = "Villages",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(1155),
                            Weight = 0.52103982564110296
                        },
                        new
                        {
                            ProductVariantId = new Guid("c39a94a9-7e81-3c50-a6af-095ad2c40ac3"),
                            Barcode = "invoice",
                            Barcode1 = "Dominican Peso",
                            Barcode2 = "Soft",
                            Barcode3 = "transmitter",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(1186),
                            IsArchived = false,
                            ProductId = new Guid("3f1bc061-c4e3-08db-8df9-b4f23a722270"),
                            RetailPrice = 0.49441066f,
                            SKU = "Gorgeous Metal Chair",
                            TaxRate = 0.072846375f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(1186),
                            Weight = 0.79837542204110667,
                            Width = 0.34374105434107644
                        },
                        new
                        {
                            ProductVariantId = new Guid("4a6f0d83-048c-0bf2-070c-64b0a9372dce"),
                            Barcode = "synthesize",
                            Barcode1 = "transmit",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(1236),
                            IsArchived = false,
                            Length = 0.71247961032785456,
                            ProductId = new Guid("5fb73477-b1c7-65f7-af3a-35c199cdbe86"),
                            SKU = "Valleys",
                            TaxRate = 0.01033353f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(1237),
                            Width = 0.31950711147836741
                        },
                        new
                        {
                            ProductVariantId = new Guid("4a4634c3-a78d-f81f-3b26-1294331881ed"),
                            Barcode = "paradigm",
                            Barcode2 = "Self-enabling",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(1274),
                            IsArchived = false,
                            Length = 0.14981915296512616,
                            ProductId = new Guid("a9f31e8f-b3e7-7f8e-a142-20ff29b52eb0"),
                            PurchasePrice = 0.24429698f,
                            SKU = "Light",
                            TaxRate = 0.09818877f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(1274),
                            Width = 0.2395949509179196
                        },
                        new
                        {
                            ProductVariantId = new Guid("4731cc80-1803-2d0d-86e6-a6c2d132bedf"),
                            Barcode = "Brand",
                            Barcode2 = "communities",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(1586),
                            IsArchived = false,
                            ProductId = new Guid("b970dfc8-734a-f701-d40b-49fd87bde072"),
                            SKU = "mesh",
                            TaxRate = 0.079070866f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(1588),
                            Weight = 0.4247124206389824
                        },
                        new
                        {
                            ProductVariantId = new Guid("7f68ff12-5e62-3c5a-14c2-dfb2889be6a6"),
                            Barcode = "Canadian Dollar",
                            Barcode1 = "Senior",
                            Barcode2 = "RAM",
                            Barcode3 = "system",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(1952),
                            IsArchived = false,
                            Length = 0.36410298355114784,
                            ProductId = new Guid("77be7c73-be33-6d2f-f56d-c1a8297aacc6"),
                            PurchasePrice = 0.1795215f,
                            RetailPrice = 0.73886925f,
                            SKU = "Concrete",
                            TaxRate = 0.061268f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(1953),
                            Weight = 0.43927396714653538,
                            Width = 0.064156874578519194
                        },
                        new
                        {
                            ProductVariantId = new Guid("39ad0d4f-1160-f7a6-59e6-b1f1ccc31818"),
                            Barcode = "hard drive",
                            Barcode1 = "Brook",
                            Barcode2 = "Configurable",
                            Barcode3 = "Division",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(2031),
                            Height = 0.63375769771344848,
                            IsArchived = false,
                            ProductId = new Guid("aa7c3ba5-126c-e2a4-37ef-8d1003a2cc0e"),
                            SKU = "Strategist",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(2032),
                            Weight = 0.064117936447317683
                        },
                        new
                        {
                            ProductVariantId = new Guid("61bf3c2c-0c99-165f-340a-8266aa70c289"),
                            Barcode = "Buckinghamshire",
                            Barcode2 = "markets",
                            Barcode3 = "Idaho",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(2077),
                            IsArchived = false,
                            Length = 0.74690545850754975,
                            ProductId = new Guid("889eb714-3e8c-1e2c-54ed-40323924419f"),
                            PurchasePrice = 0.772648f,
                            SKU = "Unbranded Frozen Chicken",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(2078)
                        },
                        new
                        {
                            ProductVariantId = new Guid("8043f10b-5b07-4a6c-4754-69841be3ebae"),
                            Barcode = "Executive",
                            Barcode2 = "Chief",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(2138),
                            Height = 0.58120674620438684,
                            IsArchived = false,
                            Length = 0.59832232287075482,
                            ProductId = new Guid("db3a8db6-a245-b773-f5d7-312fc7fb26ba"),
                            SKU = "bus",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(2139),
                            Width = 0.35201585914567851
                        },
                        new
                        {
                            ProductVariantId = new Guid("0e380ff1-1f4e-a83f-1d5e-37908127fe46"),
                            Barcode = "Soft",
                            Barcode1 = "deposit",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(2174),
                            Height = 0.12740986194806633,
                            IsArchived = false,
                            Length = 0.3011340491013294,
                            ProductId = new Guid("0088f9b5-8d00-329f-0ffb-dcb1f0521836"),
                            RetailPrice = 0.6461134f,
                            SKU = "solid state",
                            TaxRate = 0.05039687f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(2174),
                            Weight = 0.52116882545927945
                        },
                        new
                        {
                            ProductVariantId = new Guid("6bd5a3f1-669e-1b26-c562-738372a4c565"),
                            Barcode = "District",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(2218),
                            IsArchived = false,
                            Length = 0.29080278672780974,
                            ProductId = new Guid("77be7c73-be33-6d2f-f56d-c1a8297aacc6"),
                            PurchasePrice = 0.19078538f,
                            SKU = "Canyon",
                            TaxRate = 0.010183649f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(2219),
                            Weight = 0.21441351120100055
                        },
                        new
                        {
                            ProductVariantId = new Guid("8bde6a77-be88-4179-912c-b5851667350e"),
                            Barcode = "Planner",
                            Barcode2 = "Borders",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(2262),
                            Height = 0.28346798442465626,
                            IsArchived = true,
                            ProductId = new Guid("56bb4b5a-3797-5621-7b87-ca8423f1930f"),
                            SKU = "Handmade Frozen Chips",
                            TaxRate = 0.049467318f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(2262),
                            Weight = 0.29117879005669561
                        },
                        new
                        {
                            ProductVariantId = new Guid("4194ca01-16d7-d84e-b1aa-0874ecab8ad6"),
                            Barcode = "matrices",
                            Barcode1 = "SAS",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(2324),
                            Height = 0.58949091871711001,
                            IsArchived = true,
                            ProductId = new Guid("36d50a52-29c3-9a3f-716c-f9e617313c18"),
                            PurchasePrice = 0.1814942f,
                            RetailPrice = 0.12245311f,
                            SKU = "Sleek Metal Table",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(2324),
                            Width = 0.45138415016764039
                        },
                        new
                        {
                            ProductVariantId = new Guid("b9dd3fa7-84f6-5381-6bc9-89af6b8beffa"),
                            Barcode = "Coordinator",
                            Barcode2 = "holistic",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(2369),
                            Height = 0.11902047699271723,
                            IsArchived = false,
                            Length = 0.59804875850586625,
                            ProductId = new Guid("3f1bc061-c4e3-08db-8df9-b4f23a722270"),
                            SKU = "Consultant",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(2369),
                            Width = 0.35570374846258374
                        },
                        new
                        {
                            ProductVariantId = new Guid("802c4e29-64f8-e7be-91f1-c91bd4eee443"),
                            Barcode = "Profound",
                            Barcode3 = "sticky",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(2413),
                            IsArchived = true,
                            Length = 0.76183095935817391,
                            ProductId = new Guid("88672cbf-752f-a74e-d6ce-4543b254e568"),
                            SKU = "Steel",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(2414),
                            Weight = 0.90843228106779617,
                            Width = 0.66624544359103099
                        },
                        new
                        {
                            ProductVariantId = new Guid("8b6c863e-fe88-0858-807f-33eb583aa2ad"),
                            Barcode = "connecting",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(2457),
                            Height = 0.38687955326721052,
                            IsArchived = false,
                            Length = 0.58393070175495498,
                            ProductId = new Guid("86195222-ff46-1d33-bd92-7ca6d125cdd6"),
                            PurchasePrice = 0.1255316f,
                            RetailPrice = 0.478664f,
                            SKU = "fault-tolerant",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(2458),
                            Weight = 0.66874975975078987
                        },
                        new
                        {
                            ProductVariantId = new Guid("ebaf8c61-ad04-4918-5d28-bcf10d3982ae"),
                            Barcode = "system-worthy",
                            Barcode1 = "Prairie",
                            Barcode2 = "Kids & Games",
                            Barcode3 = "matrix",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(2498),
                            IsArchived = true,
                            ProductId = new Guid("1a14120b-e568-5fba-0e83-30b0bf29f0a4"),
                            PurchasePrice = 0.40839836f,
                            RetailPrice = 0.9469648f,
                            SKU = "customer loyalty",
                            TaxRate = 0.00042078207f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(2498),
                            Weight = 0.83068608158765644
                        },
                        new
                        {
                            ProductVariantId = new Guid("052ecf28-c157-3ff1-761e-5fdf256a5439"),
                            Barcode = "e-tailers",
                            Barcode2 = "supply-chains",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(2566),
                            Height = 0.58388532678777605,
                            IsArchived = false,
                            ProductId = new Guid("bed55f35-76d0-3d0e-93e2-2747aa7b0674"),
                            PurchasePrice = 0.66423565f,
                            SKU = "Baht",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(2566),
                            Weight = 0.78279995349366216,
                            Width = 0.79720870116595588
                        },
                        new
                        {
                            ProductVariantId = new Guid("323ff609-f33e-0ae7-7760-ddc51f698a42"),
                            Barcode = "tangible",
                            Barcode3 = "Belize Dollar",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(2603),
                            IsArchived = true,
                            Length = 0.96798596529661951,
                            ProductId = new Guid("c48c9793-833f-8426-c47d-69e531df0f82"),
                            RetailPrice = 0.7100836f,
                            SKU = "Direct",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(2603),
                            Weight = 0.30695618889618487,
                            Width = 0.044508316109193639
                        },
                        new
                        {
                            ProductVariantId = new Guid("3a926c3f-4d28-00e8-92f1-eed1e7ee02bb"),
                            Barcode = "reboot",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(2690),
                            IsArchived = true,
                            Length = 0.97387541317095772,
                            ProductId = new Guid("2d0dd14a-51cb-c9f8-a85f-076014ff01e1"),
                            SKU = "Saudi Riyal",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(2691),
                            Weight = 0.18037515514547711
                        },
                        new
                        {
                            ProductVariantId = new Guid("c268d352-d05a-2f50-1973-67b78fc49c77"),
                            Barcode = "deposit",
                            Barcode1 = "Cambridgeshire",
                            Barcode2 = "Consultant",
                            Barcode3 = "virtual",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(2734),
                            IsArchived = false,
                            ProductId = new Guid("a9f31e8f-b3e7-7f8e-a142-20ff29b52eb0"),
                            SKU = "Borders",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(2734),
                            Width = 0.49214748129814279
                        },
                        new
                        {
                            ProductVariantId = new Guid("2c592cc0-8c0c-f2f6-3a77-b3813f375bcf"),
                            Barcode = "Future",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(2764),
                            IsArchived = true,
                            ProductId = new Guid("fd7b3406-a393-8f4e-0263-7980231e9f06"),
                            SKU = "deploy",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(2764),
                            Weight = 0.85392937942125335,
                            Width = 0.62427755707142762
                        },
                        new
                        {
                            ProductVariantId = new Guid("71b22d35-4ae6-4c3f-2ece-d750b747023b"),
                            Barcode = "models",
                            Barcode3 = "synergies",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(2800),
                            IsArchived = true,
                            ProductId = new Guid("aba244f4-1a51-fc6a-6926-ef714384407d"),
                            PurchasePrice = 0.59291095f,
                            RetailPrice = 0.15727952f,
                            SKU = "Ameliorated",
                            TaxRate = 0.06616952f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(2801)
                        },
                        new
                        {
                            ProductVariantId = new Guid("9e837a31-104b-41b7-e4b9-45e9bf17153f"),
                            Barcode = "Intelligent Granite Cheese",
                            Barcode1 = "Indian Rupee",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(2841),
                            Height = 0.11325689410476801,
                            IsArchived = true,
                            ProductId = new Guid("9248519f-5ea8-24f5-929b-f1bbf2c3520d"),
                            PurchasePrice = 0.79739374f,
                            SKU = "Locks",
                            TaxRate = 0.060160078f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(2841),
                            Width = 0.32328241799179575
                        },
                        new
                        {
                            ProductVariantId = new Guid("3cfa9f54-6ed8-6bd3-9954-e64c21f7e84c"),
                            Barcode = "dot-com",
                            Barcode1 = "SQL",
                            Barcode3 = "best-of-breed",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(2887),
                            Height = 0.99695247039056967,
                            IsArchived = false,
                            ProductId = new Guid("5fb73477-b1c7-65f7-af3a-35c199cdbe86"),
                            PurchasePrice = 0.20352437f,
                            RetailPrice = 0.7024504f,
                            SKU = "Unbranded",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(2888),
                            Weight = 0.75500836211955569
                        },
                        new
                        {
                            ProductVariantId = new Guid("014a3b7f-37a4-8dde-cc27-3d3a4444102d"),
                            Barcode = "teal",
                            Barcode1 = "parse",
                            Barcode2 = "leading edge",
                            Barcode3 = "Senior",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(2919),
                            IsArchived = true,
                            ProductId = new Guid("2839f2e8-1a35-f860-86b6-19c1a1d27788"),
                            SKU = "1080p",
                            TaxRate = 0.013547465f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(2920),
                            Width = 0.76740487700673043
                        },
                        new
                        {
                            ProductVariantId = new Guid("8dceb6f5-24de-9af3-0a01-d491174852b6"),
                            Barcode = "AGP",
                            Barcode1 = "Manager",
                            Barcode2 = "Inverse",
                            Barcode3 = "SQL",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(2949),
                            IsArchived = false,
                            Length = 0.15102169949143274,
                            ProductId = new Guid("8913461a-677a-a518-8de2-bcf24d05f61e"),
                            SKU = "Auto Loan Account",
                            TaxRate = 0.068522654f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(2949),
                            Weight = 0.81438548668026245,
                            Width = 0.79878558814469058
                        },
                        new
                        {
                            ProductVariantId = new Guid("9e7bdefa-ebdf-b8e9-e7f7-c483030aa7db"),
                            Barcode = "Island",
                            Barcode1 = "Metal",
                            Barcode2 = "fresh-thinking",
                            Barcode3 = "Home",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(3008),
                            IsArchived = true,
                            Length = 0.72336417842813028,
                            ProductId = new Guid("f92a45cb-f494-f2c7-c94c-9d089374b925"),
                            RetailPrice = 0.69447416f,
                            SKU = "Fantastic Soft Salad",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(3008),
                            Width = 0.14971245925394466
                        },
                        new
                        {
                            ProductVariantId = new Guid("b2bfb039-f920-c2a5-73f5-e7dacbfc284b"),
                            Barcode = "cyan",
                            Barcode2 = "Quality",
                            Barcode3 = "Illinois",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(3049),
                            IsArchived = true,
                            Length = 0.089540316764982558,
                            ProductId = new Guid("d0e3c0e5-8580-5cd2-fff6-d283e6b41d91"),
                            PurchasePrice = 0.0040012337f,
                            RetailPrice = 0.5163157f,
                            SKU = "Berkshire",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(3049),
                            Width = 0.4205886975026637
                        },
                        new
                        {
                            ProductVariantId = new Guid("f404757d-3725-b76d-d18c-e9a4faa884e4"),
                            Barcode = "solution-oriented",
                            Barcode1 = "e-business",
                            Barcode2 = "Credit Card Account",
                            Barcode3 = "Buckinghamshire",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(3088),
                            Height = 0.2694801559063979,
                            IsArchived = true,
                            Length = 0.33658437958759457,
                            ProductId = new Guid("d7aee5e8-33a4-4341-bb6b-9f2b082704f9"),
                            PurchasePrice = 0.95472527f,
                            RetailPrice = 0.18236631f,
                            SKU = "calculate",
                            TaxRate = 0.0786979f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(3088),
                            Weight = 0.084904092869211037
                        },
                        new
                        {
                            ProductVariantId = new Guid("8d1fe23a-bc44-27ca-6a17-f8bcbbaab781"),
                            Barcode = "wireless",
                            Barcode1 = "Station",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(3126),
                            IsArchived = true,
                            ProductId = new Guid("c14aa15d-48e8-e500-e424-7f3d015a584e"),
                            RetailPrice = 0.024635866f,
                            SKU = "Orchestrator",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(3127),
                            Width = 0.94108323284475282
                        },
                        new
                        {
                            ProductVariantId = new Guid("e942556a-2afd-0f68-b54a-c84d023071e4"),
                            Barcode = "Balboa",
                            Barcode2 = "Indiana",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(3160),
                            Height = 0.98545748460360683,
                            IsArchived = false,
                            Length = 0.66667481216912849,
                            ProductId = new Guid("dc9f5d08-82c5-d454-3a82-b71fa1d187f5"),
                            PurchasePrice = 0.20659226f,
                            SKU = "parsing",
                            TaxRate = 0.015578556f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(3161)
                        },
                        new
                        {
                            ProductVariantId = new Guid("82c1933e-80bb-b35b-989a-df1ba6be112e"),
                            Barcode = "communities",
                            Barcode3 = "deposit",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(3196),
                            Height = 0.18004230790773515,
                            IsArchived = false,
                            Length = 0.33167926470361614,
                            ProductId = new Guid("dd4af1db-de8f-0aa4-a1b2-ed200bd11bdf"),
                            PurchasePrice = 0.548601f,
                            SKU = "bus",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(3196),
                            Weight = 0.514078859013542,
                            Width = 0.081648117900662176
                        },
                        new
                        {
                            ProductVariantId = new Guid("1cfc2eb2-a7b7-2725-3a1a-838e6c82b3c9"),
                            Barcode = "experiences",
                            Barcode1 = "Buckinghamshire",
                            Barcode3 = "Factors",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(3237),
                            Height = 0.37171166826584917,
                            IsArchived = false,
                            Length = 0.21072344491757614,
                            ProductId = new Guid("dd4af1db-de8f-0aa4-a1b2-ed200bd11bdf"),
                            PurchasePrice = 0.92620367f,
                            SKU = "multi-state",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(3238)
                        },
                        new
                        {
                            ProductVariantId = new Guid("d22c2bdd-415d-9d4a-e175-07469731f4fe"),
                            Barcode = "sensor",
                            Barcode1 = "program",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(3272),
                            IsArchived = true,
                            Length = 0.7239582821372702,
                            ProductId = new Guid("dd4af1db-de8f-0aa4-a1b2-ed200bd11bdf"),
                            PurchasePrice = 0.7954853f,
                            SKU = "embrace",
                            TaxRate = 0.008742437f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(3273),
                            Weight = 0.3868988777449815
                        },
                        new
                        {
                            ProductVariantId = new Guid("ea35b956-cb30-5eab-7c9f-a7f250911ad7"),
                            Barcode = "Cliffs",
                            Barcode2 = "Senior",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(3328),
                            IsArchived = false,
                            Length = 0.37360165052749295,
                            ProductId = new Guid("47ac6a72-f771-2cdf-3f22-ddc5f7361084"),
                            PurchasePrice = 0.86708885f,
                            SKU = "SDR",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(3328),
                            Weight = 0.26515514089965969,
                            Width = 0.032750810046098575
                        },
                        new
                        {
                            ProductVariantId = new Guid("10f0ac13-3411-a949-0a1a-6d959cfb2e67"),
                            Barcode = "Intelligent Fresh Towels",
                            Barcode2 = "Tennessee",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(3361),
                            IsArchived = true,
                            Length = 0.79654010003271514,
                            ProductId = new Guid("63082b39-7e5e-9f05-1a0e-b6aae0a659b9"),
                            RetailPrice = 0.99151075f,
                            SKU = "payment",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(3362),
                            Weight = 0.59650139026180904,
                            Width = 0.73531103494358763
                        },
                        new
                        {
                            ProductVariantId = new Guid("8cecc452-1aef-157d-5652-497f6e6fc23b"),
                            Barcode = "Incredible Frozen Gloves",
                            Barcode2 = "Chief",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(3398),
                            IsArchived = true,
                            ProductId = new Guid("778660c0-4365-e8fe-2c90-c5e241030d9b"),
                            PurchasePrice = 0.6080595f,
                            SKU = "Implementation",
                            TaxRate = 0.044131257f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(3398),
                            Weight = 0.52781398386127032
                        },
                        new
                        {
                            ProductVariantId = new Guid("47e63e10-16ae-a3ad-33ea-f99d5fd3275b"),
                            Barcode = "Land",
                            Barcode1 = "real-time",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(3434),
                            Height = 0.86092729860028594,
                            IsArchived = false,
                            Length = 0.52084502974564439,
                            ProductId = new Guid("dc9f5d08-82c5-d454-3a82-b71fa1d187f5"),
                            SKU = "cross-platform",
                            TaxRate = 0.03203656f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(3434),
                            Weight = 0.46700025697564718
                        },
                        new
                        {
                            ProductVariantId = new Guid("aa1a9efe-c037-0c2d-f48b-123e2c007f9d"),
                            Barcode = "project",
                            Barcode1 = "withdrawal",
                            Barcode2 = "Money Market Account",
                            Barcode3 = "parse",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(3467),
                            IsArchived = true,
                            Length = 0.93376454661309927,
                            ProductId = new Guid("778660c0-4365-e8fe-2c90-c5e241030d9b"),
                            RetailPrice = 0.56646633f,
                            SKU = "Auto Loan Account",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(3468),
                            Width = 0.41438209284766675
                        },
                        new
                        {
                            ProductVariantId = new Guid("4e49a7d8-b876-a526-c457-79de7d99af45"),
                            Barcode = "service-desk",
                            Barcode2 = "Generic Soft Pants",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(3496),
                            IsArchived = true,
                            Length = 0.5840403403081188,
                            ProductId = new Guid("6fdda05d-cb66-3d67-33f3-b0980375b744"),
                            RetailPrice = 0.40871453f,
                            SKU = "Practical",
                            TaxRate = 0.04452536f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(3496),
                            Weight = 0.23065968986165694,
                            Width = 0.2052647323372144
                        },
                        new
                        {
                            ProductVariantId = new Guid("83937b30-1fb9-d085-c1ad-9260374a10e5"),
                            Barcode = "Croatia",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(3534),
                            Height = 0.48926644003450237,
                            IsArchived = true,
                            ProductId = new Guid("8913461a-677a-a518-8de2-bcf24d05f61e"),
                            PurchasePrice = 0.91975f,
                            SKU = "mint green",
                            TaxRate = 0.016215058f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(3534),
                            Weight = 0.3316314939091129,
                            Width = 0.24172993900334924
                        },
                        new
                        {
                            ProductVariantId = new Guid("c5ee5b58-0933-b6f7-7fdb-ceac7f164a53"),
                            Barcode = "Minnesota",
                            Barcode2 = "Product",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(3590),
                            IsArchived = true,
                            Length = 0.15385847825271007,
                            ProductId = new Guid("6d0bccb9-5439-b035-cfe2-8afba9a143e2"),
                            SKU = "overriding",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(3590),
                            Weight = 0.75334250310125872,
                            Width = 0.34879254379719149
                        },
                        new
                        {
                            ProductVariantId = new Guid("59ec70cf-6711-f3a5-3484-e14f7995cedc"),
                            Barcode = "Music",
                            Barcode2 = "Generic",
                            Barcode3 = "Developer",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(3634),
                            Height = 0.42849071530089283,
                            IsArchived = true,
                            ProductId = new Guid("3f1bc061-c4e3-08db-8df9-b4f23a722270"),
                            RetailPrice = 0.17311072f,
                            SKU = "Steel",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(3635),
                            Weight = 0.66711389118205466,
                            Width = 0.18418566285827462
                        },
                        new
                        {
                            ProductVariantId = new Guid("5459148c-064b-dd8d-a3cf-39777f820240"),
                            Barcode = "Steel",
                            Barcode1 = "PCI",
                            Barcode2 = "Rustic Rubber Chips",
                            Barcode3 = "Plastic",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(3665),
                            IsArchived = false,
                            Length = 0.57741334595597038,
                            ProductId = new Guid("dc9f5d08-82c5-d454-3a82-b71fa1d187f5"),
                            RetailPrice = 0.59877115f,
                            SKU = "Mountain",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(3665),
                            Weight = 0.10539986430918792
                        },
                        new
                        {
                            ProductVariantId = new Guid("09b582c8-5e14-dcb7-2023-43648cd330c3"),
                            Barcode = "Checking Account",
                            Barcode2 = "Liberian Dollar",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(3703),
                            IsArchived = false,
                            Length = 0.7993590341877933,
                            ProductId = new Guid("5fb73477-b1c7-65f7-af3a-35c199cdbe86"),
                            PurchasePrice = 0.009284317f,
                            RetailPrice = 0.5481873f,
                            SKU = "azure",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(3704),
                            Weight = 0.25898728997399439,
                            Width = 0.48979115602084955
                        },
                        new
                        {
                            ProductVariantId = new Guid("de798fc0-4ce6-ed23-77eb-49d07fb46279"),
                            Barcode = "Books, Sports & Games",
                            Barcode1 = "Gorgeous",
                            Barcode2 = "Incredible Steel Pants",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(3736),
                            Height = 0.30257740118660842,
                            IsArchived = false,
                            Length = 0.76336055005125725,
                            ProductId = new Guid("9248519f-5ea8-24f5-929b-f1bbf2c3520d"),
                            PurchasePrice = 0.114115f,
                            RetailPrice = 0.05241467f,
                            SKU = "Louisiana",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(3737),
                            Width = 0.83481652468201539
                        },
                        new
                        {
                            ProductVariantId = new Guid("24c49940-d61a-108c-8888-ac7da53bfcab"),
                            Barcode = "Research",
                            Barcode1 = "Movies & Electronics",
                            Barcode3 = "Sleek Soft Sausages",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(3785),
                            IsArchived = false,
                            ProductId = new Guid("ffc1acd4-31e8-f885-8e6e-92ed752471ec"),
                            SKU = "Director",
                            TaxRate = 0.04561619f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(3785)
                        },
                        new
                        {
                            ProductVariantId = new Guid("a7d3be75-c069-0e15-5c15-16f029c83c0e"),
                            Barcode = "lavender",
                            Barcode3 = "Djibouti Franc",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(3830),
                            Height = 0.99821290420285091,
                            IsArchived = false,
                            Length = 0.19132554540006702,
                            ProductId = new Guid("4c4ac2d0-6231-1adf-d77d-f1973bad1b3d"),
                            RetailPrice = 0.6278916f,
                            SKU = "Spring",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(3830)
                        },
                        new
                        {
                            ProductVariantId = new Guid("92916ccd-349e-d6fa-89fa-a2d41643c00c"),
                            Barcode = "Handmade Plastic Ball",
                            Barcode3 = "Iowa",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(3891),
                            Height = 0.6043008848113478,
                            IsArchived = true,
                            Length = 0.69944757209133712,
                            ProductId = new Guid("b1da89d7-4cb2-f646-d3a5-c28a78260c59"),
                            PurchasePrice = 0.2612752f,
                            RetailPrice = 0.7480947f,
                            SKU = "cross-platform",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(3891)
                        },
                        new
                        {
                            ProductVariantId = new Guid("2dabd4ed-8015-27cb-fb03-9ce436900f60"),
                            Barcode = "deposit",
                            Barcode1 = "connect",
                            Barcode2 = "hybrid",
                            Barcode3 = "back-end",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(3935),
                            Height = 0.74186943133448691,
                            IsArchived = false,
                            ProductId = new Guid("f1901298-0eb6-64f9-5886-1ec21048e162"),
                            PurchasePrice = 0.9816165f,
                            RetailPrice = 0.7109188f,
                            SKU = "matrix",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(3936),
                            Weight = 0.25836123119032067
                        },
                        new
                        {
                            ProductVariantId = new Guid("8b9908e5-65c8-e32c-83f8-4050c23d24ad"),
                            Barcode = "grey",
                            Barcode1 = "evolve",
                            Barcode2 = "blue",
                            Barcode3 = "hack",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(3965),
                            Height = 0.9159460528362291,
                            IsArchived = false,
                            Length = 0.3150096020265527,
                            ProductId = new Guid("464e8df9-4bc5-34f1-637f-8d261d4013a6"),
                            PurchasePrice = 0.91089827f,
                            SKU = "1080p",
                            TaxRate = 0.023053251f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(3966)
                        },
                        new
                        {
                            ProductVariantId = new Guid("26ed07c6-eb28-da1d-d7ae-f6aabf93315f"),
                            Barcode = "Light",
                            Barcode2 = "Outdoors",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(3995),
                            Height = 0.58126963329560577,
                            IsArchived = true,
                            ProductId = new Guid("9248519f-5ea8-24f5-929b-f1bbf2c3520d"),
                            RetailPrice = 0.49975818f,
                            SKU = "Refined",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(3996),
                            Weight = 0.45557776766623265
                        },
                        new
                        {
                            ProductVariantId = new Guid("749977f1-2552-c146-a8b9-ebb45e06f1ec"),
                            Barcode = "Human",
                            Barcode1 = "Orchestrator",
                            Barcode2 = "Lakes",
                            Barcode3 = "hack",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(4031),
                            IsArchived = true,
                            Length = 0.82157254071048114,
                            ProductId = new Guid("b7550520-ae85-7639-2075-38e37678e19e"),
                            PurchasePrice = 0.7768616f,
                            SKU = "navigating",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(4031),
                            Width = 0.50030620931661973
                        },
                        new
                        {
                            ProductVariantId = new Guid("451a1999-fb87-1199-1f64-4f30e455aa8b"),
                            Barcode = "withdrawal",
                            Barcode1 = "Rue",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(4062),
                            Height = 0.64041394677032437,
                            IsArchived = false,
                            Length = 0.071428354397149924,
                            ProductId = new Guid("415ce7b1-6dfc-335a-f56e-8c0c3df7f6f7"),
                            RetailPrice = 0.33410132f,
                            SKU = "Rubber",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(4062),
                            Weight = 0.057962739867140886
                        },
                        new
                        {
                            ProductVariantId = new Guid("d0cc802b-ea40-4ec7-df80-38c6edc44b3c"),
                            Barcode = "Gourde",
                            Barcode1 = "Junctions",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(4096),
                            IsArchived = true,
                            Length = 0.97855737664669629,
                            ProductId = new Guid("f92a45cb-f494-f2c7-c94c-9d089374b925"),
                            PurchasePrice = 0.25144467f,
                            SKU = "deploy",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(4096),
                            Weight = 0.030452016755217692
                        },
                        new
                        {
                            ProductVariantId = new Guid("ae3bec1d-eef8-f842-ff5a-64c0371b9eb6"),
                            Barcode = "Generic Plastic Pants",
                            Barcode1 = "bypassing",
                            Barcode2 = "Georgia",
                            Barcode3 = "Graphical User Interface",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(4151),
                            IsArchived = true,
                            ProductId = new Guid("aba244f4-1a51-fc6a-6926-ef714384407d"),
                            PurchasePrice = 0.3158354f,
                            RetailPrice = 0.46138397f,
                            SKU = "bypass",
                            TaxRate = 0.078238845f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(4151),
                            Weight = 0.68777469763894317
                        },
                        new
                        {
                            ProductVariantId = new Guid("dc693297-c5a6-6419-5d33-be79812e7fcf"),
                            Barcode = "Pataca",
                            Barcode3 = "backing up",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(4192),
                            IsArchived = true,
                            ProductId = new Guid("415ce7b1-6dfc-335a-f56e-8c0c3df7f6f7"),
                            PurchasePrice = 0.037272263f,
                            RetailPrice = 0.63910884f,
                            SKU = "Mews",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(4193)
                        },
                        new
                        {
                            ProductVariantId = new Guid("481965db-7275-1382-4ba7-83f489e58ec4"),
                            Barcode = "Liberian Dollar",
                            Barcode2 = "Kip",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(4225),
                            Height = 0.42697439083222971,
                            IsArchived = true,
                            Length = 0.58408467917893303,
                            ProductId = new Guid("36d50a52-29c3-9a3f-716c-f9e617313c18"),
                            PurchasePrice = 0.16476466f,
                            RetailPrice = 0.06552304f,
                            SKU = "paradigm",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(4225),
                            Width = 0.8907883539287319
                        },
                        new
                        {
                            ProductVariantId = new Guid("f683369c-f784-e027-006b-4e2613596521"),
                            Barcode = "Fantastic Soft Bike",
                            Barcode3 = "Credit Card Account",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(4261),
                            Height = 0.70285568838140722,
                            IsArchived = false,
                            ProductId = new Guid("fd7b3406-a393-8f4e-0263-7980231e9f06"),
                            PurchasePrice = 0.54477555f,
                            SKU = "web services",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(4261),
                            Weight = 0.15689953517024383,
                            Width = 0.74931107962006283
                        },
                        new
                        {
                            ProductVariantId = new Guid("ac006ac2-a5fb-8b39-b977-ba19a75fd637"),
                            Barcode = "JBOD",
                            Barcode2 = "impactful",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(4596),
                            Height = 0.88511584973200963,
                            IsArchived = false,
                            ProductId = new Guid("dc9f5d08-82c5-d454-3a82-b71fa1d187f5"),
                            PurchasePrice = 0.35819831f,
                            RetailPrice = 0.05397926f,
                            SKU = "Ergonomic Wooden Salad",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(4597),
                            Weight = 0.38563942601235557
                        },
                        new
                        {
                            ProductVariantId = new Guid("b55147f9-689f-1f08-bcde-ac858001f7fb"),
                            Barcode = "green",
                            Barcode2 = "regional",
                            Barcode3 = "auxiliary",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(4657),
                            IsArchived = true,
                            Length = 0.18295314916547067,
                            ProductId = new Guid("7b9a9dca-645d-654a-4300-bd684865463d"),
                            SKU = "Savings Account",
                            TaxRate = 0.0961621f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(4657)
                        },
                        new
                        {
                            ProductVariantId = new Guid("72432f74-b1d8-5549-d144-6f56c1548e4a"),
                            Barcode = "channels",
                            Barcode2 = "transmitter",
                            Barcode3 = "aggregate",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(4692),
                            IsArchived = false,
                            Length = 0.13924448990227864,
                            ProductId = new Guid("691eb2d6-314c-53c3-3aab-b72e34dd96cf"),
                            SKU = "Producer",
                            TaxRate = 0.016417872f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(4693),
                            Width = 0.66763251864706752
                        },
                        new
                        {
                            ProductVariantId = new Guid("31c77da3-5b49-c8aa-528f-7d48eb751ce3"),
                            Barcode = "Tools & Electronics",
                            Barcode1 = "pixel",
                            Barcode2 = "system",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(5262),
                            IsArchived = false,
                            ProductId = new Guid("6d0bccb9-5439-b035-cfe2-8afba9a143e2"),
                            PurchasePrice = 0.29728857f,
                            RetailPrice = 0.898516f,
                            SKU = "override",
                            TaxRate = 0.07673655f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(5269),
                            Weight = 0.99497880367328362
                        },
                        new
                        {
                            ProductVariantId = new Guid("edd7ea30-67c0-3cc4-364e-6083da127133"),
                            Barcode = "Strategist",
                            Barcode1 = "withdrawal",
                            Barcode2 = "drive",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(5768),
                            Height = 0.14616066177662493,
                            IsArchived = false,
                            Length = 0.82839858104865927,
                            ProductId = new Guid("4b40f938-1581-a32e-a5c0-9c18465de601"),
                            RetailPrice = 0.9549465f,
                            SKU = "one-to-one",
                            TaxRate = 0.0843728f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(5770),
                            Width = 0.52911124635912066
                        },
                        new
                        {
                            ProductVariantId = new Guid("980e06a3-1b75-2bf5-e220-140bfa227834"),
                            Barcode = "USB",
                            Barcode2 = "networks",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(5878),
                            IsArchived = true,
                            Length = 0.7154698342622583,
                            ProductId = new Guid("cc2d75b7-e516-86cb-0262-87954e295a53"),
                            PurchasePrice = 0.3213606f,
                            SKU = "calculating",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(5878),
                            Width = 0.075289238279354409
                        },
                        new
                        {
                            ProductVariantId = new Guid("48c5c343-909d-c1fa-cb3c-34ab12750086"),
                            Barcode = "protocol",
                            Barcode1 = "feed",
                            Barcode2 = "Home Loan Account",
                            Barcode3 = "Anguilla",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(5980),
                            Height = 0.3491404020921981,
                            IsArchived = false,
                            ProductId = new Guid("0c280c52-d3b3-14a4-4445-0743e6bd6bad"),
                            RetailPrice = 0.99230653f,
                            SKU = "Auto Loan Account",
                            TaxRate = 0.08411152f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(5980),
                            Width = 0.34959112775958662
                        },
                        new
                        {
                            ProductVariantId = new Guid("df781296-8d33-3711-2be8-2600c9118f40"),
                            Barcode = "Hills",
                            Barcode1 = "explicit",
                            Barcode2 = "wireless",
                            Barcode3 = "feed",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(6065),
                            IsArchived = false,
                            Length = 0.82956564139088873,
                            ProductId = new Guid("77be7c73-be33-6d2f-f56d-c1a8297aacc6"),
                            SKU = "Intelligent",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(6065),
                            Weight = 0.2427521926549972,
                            Width = 0.34775653451111005
                        },
                        new
                        {
                            ProductVariantId = new Guid("44f405b1-0017-451c-5efa-e7f7e3917bec"),
                            Barcode = "online",
                            Barcode2 = "Principal",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(6152),
                            Height = 0.53567765491813313,
                            IsArchived = false,
                            Length = 0.35553990134761665,
                            ProductId = new Guid("36d50a52-29c3-9a3f-716c-f9e617313c18"),
                            SKU = "New Hampshire",
                            TaxRate = 0.055353615f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(6153)
                        },
                        new
                        {
                            ProductVariantId = new Guid("f895f304-6174-e670-0a8c-784583b1ad35"),
                            Barcode = "Extensions",
                            Barcode1 = "solutions",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(6237),
                            IsArchived = true,
                            Length = 0.21374615664302657,
                            ProductId = new Guid("691eb2d6-314c-53c3-3aab-b72e34dd96cf"),
                            SKU = "Engineer",
                            TaxRate = 0.088105574f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(6238),
                            Weight = 0.63200553489476696
                        },
                        new
                        {
                            ProductVariantId = new Guid("5109ddee-1aec-ad07-17ed-9f2e35d76739"),
                            Barcode = "teal",
                            Barcode2 = "Director",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(6823),
                            Height = 0.18849397692293579,
                            IsArchived = true,
                            ProductId = new Guid("a7b25e73-ccc4-031c-357c-75ded4000e97"),
                            PurchasePrice = 0.010850302f,
                            RetailPrice = 0.7736563f,
                            SKU = "mission-critical",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(6825),
                            Width = 0.21203409750574925
                        },
                        new
                        {
                            ProductVariantId = new Guid("1ad6d281-34bd-7c3b-d85e-cba60a8b2c79"),
                            Barcode = "AI",
                            Barcode1 = "maroon",
                            Barcode2 = "Ergonomic Metal Ball",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(6940),
                            Height = 0.9295051009065961,
                            IsArchived = false,
                            ProductId = new Guid("9248519f-5ea8-24f5-929b-f1bbf2c3520d"),
                            RetailPrice = 0.88247937f,
                            SKU = "TCP",
                            TaxRate = 0.09247395f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(6941),
                            Width = 0.89337583440047497
                        },
                        new
                        {
                            ProductVariantId = new Guid("263d5f62-4d72-c952-afb2-9bde2757b28c"),
                            Barcode = "United Kingdom",
                            Barcode1 = "Profit-focused",
                            Barcode3 = "Borders",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(7221),
                            Height = 0.3793543220401529,
                            IsArchived = false,
                            Length = 0.14053278935166671,
                            ProductId = new Guid("25631cdd-d2fb-3fb0-0426-227a89759f14"),
                            RetailPrice = 0.5658644f,
                            SKU = "Slovakia (Slovak Republic)",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(7222),
                            Width = 0.46096142728857764
                        },
                        new
                        {
                            ProductVariantId = new Guid("1997c9c8-8bb1-1af6-1f8d-0d33dc975163"),
                            Barcode = "back-end",
                            Barcode1 = "infomediaries",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(7485),
                            IsArchived = true,
                            ProductId = new Guid("a885d2bb-477d-dfcc-c704-c4a33b6bb471"),
                            PurchasePrice = 0.47030655f,
                            SKU = "driver",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(7486),
                            Width = 0.0097994827711020988
                        },
                        new
                        {
                            ProductVariantId = new Guid("4dc2821a-f131-63fd-0684-40f16dc8efed"),
                            Barcode = "Aruba",
                            Barcode1 = "Tasty Granite Salad",
                            Barcode3 = "Florida",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(7580),
                            IsArchived = true,
                            Length = 0.35912900574464768,
                            ProductId = new Guid("ffc1acd4-31e8-f885-8e6e-92ed752471ec"),
                            PurchasePrice = 0.09870768f,
                            RetailPrice = 0.74921894f,
                            SKU = "Junction",
                            TaxRate = 0.014961058f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(7581),
                            Weight = 0.88945731049843935
                        },
                        new
                        {
                            ProductVariantId = new Guid("123ec987-eff9-361b-f6b6-1da883f98568"),
                            Barcode = "optical",
                            Barcode1 = "Avon",
                            Barcode2 = "Borders",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(7691),
                            Height = 0.85332839510092906,
                            IsArchived = true,
                            ProductId = new Guid("47ac6a72-f771-2cdf-3f22-ddc5f7361084"),
                            RetailPrice = 0.8534915f,
                            SKU = "Handmade",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(7692)
                        },
                        new
                        {
                            ProductVariantId = new Guid("ff19fe0d-26c1-ef83-7d4c-f4192bd513e8"),
                            Barcode = "empower",
                            Barcode2 = "Industrial, Sports & Home",
                            Barcode3 = "CSS",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(7774),
                            Height = 0.98724912758322858,
                            IsArchived = false,
                            ProductId = new Guid("ac4db52d-1c01-cf30-2e01-30c89033e78d"),
                            SKU = "olive",
                            TaxRate = 0.017863065f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(7775)
                        },
                        new
                        {
                            ProductVariantId = new Guid("5d01a66e-1163-4c95-e290-271655fdbcd5"),
                            Barcode = "withdrawal",
                            Barcode1 = "Computers & Grocery",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(7884),
                            IsArchived = false,
                            ProductId = new Guid("5fb73477-b1c7-65f7-af3a-35c199cdbe86"),
                            SKU = "Mountain",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(7884)
                        },
                        new
                        {
                            ProductVariantId = new Guid("a4db8a95-96ba-ac42-f313-7c5570f7df83"),
                            Barcode = "Technician",
                            Barcode3 = "platforms",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(7999),
                            Height = 0.22417853643380969,
                            IsArchived = true,
                            Length = 0.5624420980747985,
                            ProductId = new Guid("88672cbf-752f-a74e-d6ce-4543b254e568"),
                            PurchasePrice = 0.09308405f,
                            SKU = "leading-edge",
                            TaxRate = 0.09496015f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(7999)
                        },
                        new
                        {
                            ProductVariantId = new Guid("25ec4ec1-7ad9-dd81-d916-655a2bcaa2d5"),
                            Barcode = "Virtual",
                            Barcode1 = "Down-sized",
                            Barcode3 = "context-sensitive",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(8087),
                            Height = 0.044669060523001972,
                            IsArchived = false,
                            Length = 0.73950058069988178,
                            ProductId = new Guid("c14aa15d-48e8-e500-e424-7f3d015a584e"),
                            PurchasePrice = 0.5839989f,
                            RetailPrice = 0.20604077f,
                            SKU = "open system",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(8087),
                            Weight = 0.83250388960936283,
                            Width = 0.63388753711892643
                        },
                        new
                        {
                            ProductVariantId = new Guid("bcd4051d-b928-6ed0-053f-68bab6bd8735"),
                            Barcode = "Uruguay",
                            Barcode2 = "array",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(8473),
                            Height = 0.6687614748574614,
                            IsArchived = false,
                            Length = 0.8382390988237407,
                            ProductId = new Guid("10a20f76-91d6-677c-07ee-68ff91e550a8"),
                            SKU = "Pre-emptive",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(8474),
                            Weight = 0.46460822805045554
                        },
                        new
                        {
                            ProductVariantId = new Guid("3b431e0e-67fe-5a50-0071-a61721e4289f"),
                            Barcode = "Frozen",
                            Barcode3 = "Mill",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(8831),
                            Height = 0.8407937147844553,
                            IsArchived = false,
                            ProductId = new Guid("cc2d75b7-e516-86cb-0262-87954e295a53"),
                            PurchasePrice = 0.07078261f,
                            SKU = "Multi-lateral",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(8832)
                        },
                        new
                        {
                            ProductVariantId = new Guid("fdb672fd-d4af-7d87-2144-d0ff3965cfe9"),
                            Barcode = "Kenyan Shilling",
                            Barcode3 = "Parks",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(9022),
                            Height = 0.38338077738107218,
                            IsArchived = true,
                            Length = 0.79692178489497012,
                            ProductId = new Guid("889eb714-3e8c-1e2c-54ed-40323924419f"),
                            SKU = "Steel",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(9023),
                            Weight = 0.27739981202287589
                        },
                        new
                        {
                            ProductVariantId = new Guid("11f1a82f-96d2-300d-e22b-ec8b62608a25"),
                            Barcode = "payment",
                            Barcode1 = "backing up",
                            Barcode3 = "Senior",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(9146),
                            Height = 0.11887067049689157,
                            IsArchived = false,
                            ProductId = new Guid("63f0befa-3aeb-463c-7289-3af9421eb2ee"),
                            PurchasePrice = 0.3532946f,
                            SKU = "Qatar",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(9146),
                            Weight = 0.56638971928804638,
                            Width = 0.67488902186736888
                        },
                        new
                        {
                            ProductVariantId = new Guid("dd62c8bc-a860-03c9-1813-cee7c39e664c"),
                            Barcode = "Belgium",
                            Barcode1 = "Credit Card Account",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(9243),
                            IsArchived = true,
                            Length = 0.64913980693050655,
                            ProductId = new Guid("b1da89d7-4cb2-f646-d3a5-c28a78260c59"),
                            PurchasePrice = 0.89728355f,
                            RetailPrice = 0.71632123f,
                            SKU = "multimedia",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(9243),
                            Weight = 0.46976409920945955
                        },
                        new
                        {
                            ProductVariantId = new Guid("aaec3771-b2ad-a65f-8fda-46a7a0b9933a"),
                            Barcode = "Switzerland",
                            Barcode1 = "Investment Account",
                            Barcode3 = "Lead",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(9353),
                            Height = 0.68868470130892689,
                            IsArchived = false,
                            ProductId = new Guid("748d4380-0e91-9d9c-2e78-95d4ac9d28bb"),
                            PurchasePrice = 0.87781817f,
                            RetailPrice = 0.35417923f,
                            SKU = "Shoes & Books",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(9354),
                            Weight = 0.73202959715017568,
                            Width = 0.22301109424932444
                        },
                        new
                        {
                            ProductVariantId = new Guid("2e874b10-e6cb-4065-8a74-863d4e0dbb40"),
                            Barcode = "service-desk",
                            Barcode3 = "Tasty Wooden Sausages",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(9488),
                            Height = 0.30817278814882637,
                            IsArchived = false,
                            Length = 0.15256623604920053,
                            ProductId = new Guid("c8a136e8-577b-0237-67df-56efa3dbbfcb"),
                            RetailPrice = 0.12710494f,
                            SKU = "Trail",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(9488)
                        },
                        new
                        {
                            ProductVariantId = new Guid("007b7d79-155b-b5d3-296c-06e2dc97c97b"),
                            Barcode = "revolutionize",
                            Barcode3 = "Sleek",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(9838),
                            IsArchived = true,
                            ProductId = new Guid("69970e40-b67f-b97d-0775-b4c7805aaf62"),
                            PurchasePrice = 0.38509735f,
                            RetailPrice = 0.37259743f,
                            SKU = "Officer",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(9839),
                            Weight = 0.76997778041752885
                        },
                        new
                        {
                            ProductVariantId = new Guid("930e2945-f90c-6206-188b-ee1fdf708aaa"),
                            Barcode = "Fantastic Metal Fish",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(9915),
                            IsArchived = true,
                            Length = 0.35505330066897595,
                            ProductId = new Guid("47ac6a72-f771-2cdf-3f22-ddc5f7361084"),
                            RetailPrice = 0.21776335f,
                            SKU = "invoice",
                            TaxRate = 0.06621528f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(9916),
                            Weight = 0.88642054278702498
                        },
                        new
                        {
                            ProductVariantId = new Guid("94f8373f-f589-6d7f-dba4-1096d92150a3"),
                            Barcode = "XML",
                            Barcode2 = "Right-sized",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(9963),
                            IsArchived = true,
                            ProductId = new Guid("a1e9ae79-c5ef-fa67-ee4c-152571308b3f"),
                            SKU = "matrix",
                            TaxRate = 0.07837587f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 205, DateTimeKind.Utc).AddTicks(9964),
                            Width = 0.87302867503512127
                        },
                        new
                        {
                            ProductVariantId = new Guid("2d27c4de-a9be-72d5-880d-2ecb4ae9657a"),
                            Barcode = "Investor",
                            Barcode1 = "core",
                            Barcode3 = "cohesive",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4),
                            IsArchived = true,
                            ProductId = new Guid("7b9a9dca-645d-654a-4300-bd684865463d"),
                            RetailPrice = 0.34527978f,
                            SKU = "primary",
                            TaxRate = 0.050104763f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4),
                            Weight = 0.11462597507733198
                        },
                        new
                        {
                            ProductVariantId = new Guid("b92d7bb3-e262-fbd0-a34a-a0279e5ce154"),
                            Barcode = "relationships",
                            Barcode1 = "Tasty Frozen Sausages",
                            Barcode2 = "Applications",
                            Barcode3 = "Stream",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(40),
                            IsArchived = false,
                            Length = 0.32329989938219073,
                            ProductId = new Guid("b07224e6-6de1-078e-77db-8cb78a526581"),
                            PurchasePrice = 0.6526446f,
                            RetailPrice = 0.32427198f,
                            SKU = "XSS",
                            TaxRate = 0.09758925f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(40),
                            Weight = 0.85146666124997039
                        },
                        new
                        {
                            ProductVariantId = new Guid("e7561554-e0c8-c881-d7f3-11b33bf3111e"),
                            Barcode = "Wall",
                            Barcode3 = "transmit",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(179),
                            Height = 0.21413045433076586,
                            IsArchived = false,
                            Length = 0.98267506760669643,
                            ProductId = new Guid("1c59edc4-cfc2-6afd-03af-fc90c84142d6"),
                            SKU = "Credit Card Account",
                            TaxRate = 0.0516033f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(180)
                        },
                        new
                        {
                            ProductVariantId = new Guid("80c3a158-8872-fbd2-8037-169529e371a7"),
                            Barcode = "District",
                            Barcode1 = "Fantastic Wooden Salad",
                            Barcode2 = "synergies",
                            Barcode3 = "Balanced",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(285),
                            Height = 0.15791733244337017,
                            IsArchived = true,
                            ProductId = new Guid("2d0dd14a-51cb-c9f8-a85f-076014ff01e1"),
                            RetailPrice = 0.2072244f,
                            SKU = "Tasty Frozen Tuna",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(286),
                            Weight = 0.46960389915369632,
                            Width = 0.30031396043501513
                        },
                        new
                        {
                            ProductVariantId = new Guid("fe9d86e7-f28a-d772-6b19-dcbd0858b80e"),
                            Barcode = "Tactics",
                            Barcode2 = "Practical",
                            Barcode3 = "Graphical User Interface",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(398),
                            Height = 0.473904296045147,
                            IsArchived = false,
                            Length = 0.63781776681440783,
                            ProductId = new Guid("f92a45cb-f494-f2c7-c94c-9d089374b925"),
                            RetailPrice = 0.6760626f,
                            SKU = "Metal",
                            TaxRate = 0.058300864f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(398),
                            Weight = 0.69478419548588999
                        },
                        new
                        {
                            ProductVariantId = new Guid("949b3449-662b-4c92-dbaf-b5b781bde4c3"),
                            Barcode = "partnerships",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(439),
                            IsArchived = false,
                            ProductId = new Guid("9248519f-5ea8-24f5-929b-f1bbf2c3520d"),
                            SKU = "Minnesota",
                            TaxRate = 0.03529987f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(439),
                            Width = 0.7362046240531861
                        },
                        new
                        {
                            ProductVariantId = new Guid("a43c098b-5e61-7297-b81d-438afe1fa741"),
                            Barcode = "Assurance",
                            Barcode3 = "Solutions",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(488),
                            Height = 0.82278735461774621,
                            IsArchived = false,
                            ProductId = new Guid("917b20df-5c5c-9cb6-9bb9-11a73c3dd3ed"),
                            PurchasePrice = 0.91197056f,
                            RetailPrice = 0.71426004f,
                            SKU = "backing up",
                            TaxRate = 0.079594314f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(489),
                            Weight = 0.90835827351936993
                        },
                        new
                        {
                            ProductVariantId = new Guid("bde495e6-282b-008d-dc79-23e377313287"),
                            Barcode = "compressing",
                            Barcode3 = "Assimilated",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(1146),
                            Height = 0.84992713939860798,
                            IsArchived = false,
                            ProductId = new Guid("6fdda05d-cb66-3d67-33f3-b0980375b744"),
                            PurchasePrice = 0.13164435f,
                            SKU = "Granite",
                            TaxRate = 0.083069675f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(1147)
                        },
                        new
                        {
                            ProductVariantId = new Guid("911a5924-e46d-9ad7-572c-ae90d2e6bac5"),
                            Barcode = "Soft",
                            Barcode3 = "firewall",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(1295),
                            IsArchived = true,
                            Length = 0.51307850308393987,
                            ProductId = new Guid("36d50a52-29c3-9a3f-716c-f9e617313c18"),
                            PurchasePrice = 0.47084773f,
                            RetailPrice = 0.86988235f,
                            SKU = "red",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(1295),
                            Weight = 0.27938288137287964
                        },
                        new
                        {
                            ProductVariantId = new Guid("6ff72b95-d063-7278-9d0a-7fc186032211"),
                            Barcode = "sky blue",
                            Barcode1 = "communities",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(1348),
                            IsArchived = false,
                            Length = 0.49590676300968356,
                            ProductId = new Guid("56bb4b5a-3797-5621-7b87-ca8423f1930f"),
                            PurchasePrice = 0.036142208f,
                            SKU = "Steel",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(1348)
                        },
                        new
                        {
                            ProductVariantId = new Guid("46f899b7-75da-4ccb-8d04-98412e2ebd7c"),
                            Barcode = "cross-platform",
                            Barcode3 = "Gorgeous",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(1404),
                            IsArchived = true,
                            ProductId = new Guid("f1901298-0eb6-64f9-5886-1ec21048e162"),
                            PurchasePrice = 0.62721825f,
                            SKU = "Mountain",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(1405),
                            Weight = 0.81778956056469565,
                            Width = 0.32620144417798214
                        },
                        new
                        {
                            ProductVariantId = new Guid("cf9eaedd-9423-44f1-c48e-2163ee42a5a7"),
                            Barcode = "systems",
                            Barcode2 = "next generation",
                            Barcode3 = "programming",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(1447),
                            Height = 0.76844592847323323,
                            IsArchived = false,
                            ProductId = new Guid("47ac6a72-f771-2cdf-3f22-ddc5f7361084"),
                            PurchasePrice = 0.050029315f,
                            SKU = "Borders",
                            TaxRate = 0.009368191f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(1447),
                            Weight = 0.89150697313784943,
                            Width = 0.077249640634865335
                        },
                        new
                        {
                            ProductVariantId = new Guid("e7b06da8-76cd-1a20-8acc-a9abf91e0247"),
                            Barcode = "Fantastic Soft Salad",
                            Barcode1 = "moderator",
                            Barcode3 = "GB",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(1519),
                            Height = 0.41217287788734441,
                            IsArchived = false,
                            Length = 0.15627172456880645,
                            ProductId = new Guid("5fb73477-b1c7-65f7-af3a-35c199cdbe86"),
                            SKU = "neural-net",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(1519),
                            Weight = 0.81156511223482208,
                            Width = 0.91112290830869358
                        },
                        new
                        {
                            ProductVariantId = new Guid("df2e232f-78b9-40fa-2d29-94c85516420e"),
                            Barcode = "hack",
                            Barcode1 = "Metal",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(1562),
                            Height = 0.43123260207065967,
                            IsArchived = true,
                            Length = 0.60763008827698883,
                            ProductId = new Guid("e73d84af-3b2d-c96a-3ac8-684c8708d73d"),
                            PurchasePrice = 0.021164961f,
                            RetailPrice = 0.974523f,
                            SKU = "Money Market Account",
                            TaxRate = 0.08162314f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(1562),
                            Width = 0.68549193287524024
                        },
                        new
                        {
                            ProductVariantId = new Guid("87661acf-43cf-bee5-937a-18d483042326"),
                            Barcode = "encompassing",
                            Barcode2 = "Nigeria",
                            Barcode3 = "Rest",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(1603),
                            IsArchived = true,
                            Length = 0.84636559935583067,
                            ProductId = new Guid("a5202e07-085c-5ace-958e-890551a7adb1"),
                            RetailPrice = 0.08486675f,
                            SKU = "Wooden",
                            TaxRate = 0.03526826f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(1603),
                            Weight = 0.41699701334209971
                        },
                        new
                        {
                            ProductVariantId = new Guid("f78c59e6-494b-c805-c711-4a0681009db9"),
                            Barcode = "synergy",
                            Barcode1 = "Producer",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(1640),
                            IsArchived = true,
                            ProductId = new Guid("5678d654-4e49-7902-3c3d-e751477748a8"),
                            PurchasePrice = 0.351066f,
                            RetailPrice = 0.06819195f,
                            SKU = "Minnesota",
                            TaxRate = 0.026847761f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(1640),
                            Width = 0.7991328541185394
                        },
                        new
                        {
                            ProductVariantId = new Guid("db516a74-791f-f86e-0c3c-d67a924f1179"),
                            Barcode = "Plastic",
                            Barcode1 = "copying",
                            Barcode3 = "Extended",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(1679),
                            Height = 0.54974088796868026,
                            IsArchived = false,
                            Length = 0.18030741493231961,
                            ProductId = new Guid("9e866982-ddaf-c778-9360-8ebf229081c2"),
                            PurchasePrice = 0.81077254f,
                            RetailPrice = 0.33787224f,
                            SKU = "Coordinator",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(1680),
                            Width = 0.043821224497547946
                        },
                        new
                        {
                            ProductVariantId = new Guid("3119ef96-75e3-4a95-bbb6-f1156258fed4"),
                            Barcode = "payment",
                            Barcode1 = "Metal",
                            Barcode2 = "eco-centric",
                            Barcode3 = "Moldova",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(1719),
                            Height = 0.18192738349639223,
                            IsArchived = false,
                            ProductId = new Guid("464e8df9-4bc5-34f1-637f-8d261d4013a6"),
                            PurchasePrice = 0.49052197f,
                            SKU = "Jewelery & Health",
                            TaxRate = 0.08444259f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(1719),
                            Weight = 0.60863075387134713
                        },
                        new
                        {
                            ProductVariantId = new Guid("3508a86e-06bc-1032-7aad-1e4b6cb53fb1"),
                            Barcode = "parsing",
                            Barcode1 = "ROI",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(1782),
                            IsArchived = false,
                            ProductId = new Guid("db3a8db6-a245-b773-f5d7-312fc7fb26ba"),
                            RetailPrice = 0.1597183f,
                            SKU = "Games",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(1783),
                            Weight = 0.46615821936454543,
                            Width = 0.27638914123009384
                        },
                        new
                        {
                            ProductVariantId = new Guid("3d7ae817-8434-df2f-a69f-2b3efa6ce0c0"),
                            Barcode = "Lead",
                            Barcode1 = "bypassing",
                            Barcode3 = "cutting-edge",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(1838),
                            IsArchived = false,
                            Length = 0.24083240760529059,
                            ProductId = new Guid("69970e40-b67f-b97d-0775-b4c7805aaf62"),
                            SKU = "input",
                            TaxRate = 0.0019171532f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(1838),
                            Weight = 0.039236216824146089
                        },
                        new
                        {
                            ProductVariantId = new Guid("aef94853-9b75-503b-3a90-6b85e81e3456"),
                            Barcode = "Berkshire",
                            Barcode1 = "neural",
                            Barcode2 = "hacking",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(1873),
                            Height = 0.81324387333041237,
                            IsArchived = false,
                            ProductId = new Guid("88672cbf-752f-a74e-d6ce-4543b254e568"),
                            PurchasePrice = 0.73416257f,
                            RetailPrice = 0.5030575f,
                            SKU = "SQL",
                            TaxRate = 0.013365535f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(1873),
                            Weight = 0.68862017602129844,
                            Width = 0.929121428601966
                        },
                        new
                        {
                            ProductVariantId = new Guid("3d0f0fb8-dd4e-410f-d100-f205c60bad23"),
                            Barcode = "Liaison",
                            Barcode2 = "Berkshire",
                            Barcode3 = "Cotton",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(1905),
                            IsArchived = true,
                            Length = 0.053085654067381124,
                            ProductId = new Guid("306b3cb9-ec5d-fea6-fcf7-e291db2911cf"),
                            SKU = "Assurance",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(1905),
                            Width = 0.72271923661358617
                        },
                        new
                        {
                            ProductVariantId = new Guid("53146eb1-aa0f-dae8-0ff5-e337bdc02c9d"),
                            Barcode = "Saint Vincent and the Grenadines",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(1939),
                            IsArchived = true,
                            ProductId = new Guid("eca49e87-c298-2ad4-d72f-38356213b9d2"),
                            SKU = "aggregate",
                            TaxRate = 0.073983304f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(1939),
                            Weight = 0.66020835408019296,
                            Width = 0.96421372423144691
                        },
                        new
                        {
                            ProductVariantId = new Guid("c2f86465-6cb6-a637-c80b-f25f54f908a8"),
                            Barcode = "pixel",
                            Barcode3 = "Missouri",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(1982),
                            IsArchived = true,
                            Length = 0.85315383824201019,
                            ProductId = new Guid("b38145a9-41bf-a8d8-610a-690623410c6f"),
                            SKU = "Massachusetts",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(1982),
                            Weight = 0.64700752247451221
                        },
                        new
                        {
                            ProductVariantId = new Guid("37ba42b5-a93a-1700-1264-6feb8630b1ad"),
                            Barcode = "Malaysia",
                            Barcode3 = "granular",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(2012),
                            Height = 0.86359652963634415,
                            IsArchived = false,
                            ProductId = new Guid("a1e9ae79-c5ef-fa67-ee4c-152571308b3f"),
                            SKU = "Incredible",
                            TaxRate = 0.094901234f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(2012),
                            Width = 0.87630926998160275
                        },
                        new
                        {
                            ProductVariantId = new Guid("f1db1fba-177b-638e-c8fd-0da8cb3163b3"),
                            Barcode = "application",
                            Barcode1 = "matrix",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(2050),
                            Height = 0.029867736636599404,
                            IsArchived = false,
                            ProductId = new Guid("8d4ac50d-6d42-2869-62dd-4cb30cbf2a7f"),
                            RetailPrice = 0.93204963f,
                            SKU = "Borders",
                            TaxRate = 0.07598693f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(2051),
                            Weight = 0.72050517691322846
                        },
                        new
                        {
                            ProductVariantId = new Guid("8f024ab7-2a51-61bc-7464-672f31b13c61"),
                            Barcode = "Auto Loan Account",
                            Barcode1 = "Persevering",
                            Barcode2 = "Cayman Islands Dollar",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(2081),
                            Height = 0.94268926416648979,
                            IsArchived = false,
                            ProductId = new Guid("a9f31e8f-b3e7-7f8e-a142-20ff29b52eb0"),
                            RetailPrice = 0.52000695f,
                            SKU = "Berkshire",
                            TaxRate = 0.08008165f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(2081),
                            Weight = 0.12356841057705154,
                            Width = 0.3235548545250459
                        },
                        new
                        {
                            ProductVariantId = new Guid("bd3a574e-d97a-d741-61b8-0d3a8eaa26e1"),
                            Barcode = "deposit",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(2131),
                            IsArchived = false,
                            Length = 0.029849746744078465,
                            ProductId = new Guid("917b20df-5c5c-9cb6-9bb9-11a73c3dd3ed"),
                            SKU = "Rustic Rubber Chips",
                            TaxRate = 0.09185344f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(2131)
                        },
                        new
                        {
                            ProductVariantId = new Guid("ecac1580-2c6c-da4a-1276-ce052dfcdcea"),
                            Barcode = "virtual",
                            Barcode1 = "Tennessee",
                            Barcode2 = "withdrawal",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(2178),
                            Height = 0.5873946824983669,
                            IsArchived = false,
                            ProductId = new Guid("464e8df9-4bc5-34f1-637f-8d261d4013a6"),
                            PurchasePrice = 0.13446513f,
                            SKU = "South Dakota",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(2179),
                            Weight = 0.32299416480725357
                        },
                        new
                        {
                            ProductVariantId = new Guid("ec690af8-8c10-b539-d705-ad830e4db969"),
                            Barcode = "Missouri",
                            Barcode1 = "Rustic",
                            Barcode2 = "indexing",
                            Barcode3 = "Vista",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(2210),
                            Height = 0.86133399971822933,
                            IsArchived = false,
                            ProductId = new Guid("691eb2d6-314c-53c3-3aab-b72e34dd96cf"),
                            PurchasePrice = 0.21005455f,
                            SKU = "red",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(2210),
                            Width = 0.082318278999216052
                        },
                        new
                        {
                            ProductVariantId = new Guid("92e412eb-3e87-97a0-d50c-dc99c77f47d0"),
                            Barcode = "indexing",
                            Barcode1 = "Fresh",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(2240),
                            Height = 0.97690483460990007,
                            IsArchived = false,
                            Length = 0.20774125503736607,
                            ProductId = new Guid("4b40f938-1581-a32e-a5c0-9c18465de601"),
                            SKU = "Unbranded Rubber Mouse",
                            TaxRate = 0.017251756f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(2241),
                            Weight = 0.84202476024721973
                        },
                        new
                        {
                            ProductVariantId = new Guid("50512acf-ff99-d60c-3a4b-3d80797dba54"),
                            Barcode = "Integration",
                            Barcode1 = "bi-directional",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(2272),
                            Height = 0.068868098812582018,
                            IsArchived = true,
                            ProductId = new Guid("2d0dd14a-51cb-c9f8-a85f-076014ff01e1"),
                            RetailPrice = 0.9789238f,
                            SKU = "North Korean Won",
                            TaxRate = 0.039935544f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(2272),
                            Width = 0.10801657480561015
                        },
                        new
                        {
                            ProductVariantId = new Guid("ff0b7e23-bfea-f7a7-30bf-d19858f05b76"),
                            Barcode = "Developer",
                            Barcode3 = "Applications",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(2316),
                            IsArchived = true,
                            Length = 0.32147101979771209,
                            ProductId = new Guid("9e866982-ddaf-c778-9360-8ebf229081c2"),
                            RetailPrice = 0.9486996f,
                            SKU = "Rest",
                            TaxRate = 0.061131738f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(2316),
                            Weight = 0.17837297179660433
                        },
                        new
                        {
                            ProductVariantId = new Guid("92948356-c1de-39aa-a681-7f0088c9f331"),
                            Barcode = "array",
                            Barcode1 = "Washington",
                            Barcode2 = "copy",
                            Barcode3 = "Berkshire",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(2351),
                            Height = 0.68064818190440912,
                            IsArchived = false,
                            Length = 0.23594694362764571,
                            ProductId = new Guid("6d0bccb9-5439-b035-cfe2-8afba9a143e2"),
                            RetailPrice = 0.30587482f,
                            SKU = "COM",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(2351)
                        },
                        new
                        {
                            ProductVariantId = new Guid("f02b25ef-d1b3-03b3-b19e-a1e69c654d30"),
                            Barcode = "bifurcated",
                            Barcode1 = "deposit",
                            Barcode2 = "Cambridgeshire",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(2447),
                            Height = 0.19601630847715601,
                            IsArchived = false,
                            Length = 0.65937806650035924,
                            ProductId = new Guid("63082b39-7e5e-9f05-1a0e-b6aae0a659b9"),
                            SKU = "yellow",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(2448)
                        },
                        new
                        {
                            ProductVariantId = new Guid("89379549-adc2-9868-fce9-ca65012db56e"),
                            Barcode = "Intranet",
                            Barcode1 = "Shoes",
                            Barcode3 = "Small",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(2733),
                            IsArchived = false,
                            ProductId = new Guid("3f1bc061-c4e3-08db-8df9-b4f23a722270"),
                            RetailPrice = 0.11833935f,
                            SKU = "Shoal",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(2734),
                            Width = 0.59784730365399608
                        },
                        new
                        {
                            ProductVariantId = new Guid("6912bd64-8e0c-606d-7cc1-f10ea7f8c973"),
                            Barcode = "sticky",
                            Barcode1 = "Fantastic Granite Chicken",
                            Barcode2 = "Estates",
                            Barcode3 = "Inlet",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(2944),
                            IsArchived = true,
                            Length = 0.82482622415983409,
                            ProductId = new Guid("e73d84af-3b2d-c96a-3ac8-684c8708d73d"),
                            PurchasePrice = 0.28187156f,
                            SKU = "Accountability",
                            TaxRate = 0.040177964f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(2945),
                            Weight = 0.11740895831836805
                        },
                        new
                        {
                            ProductVariantId = new Guid("11fa7e6d-d119-35a3-8e08-c728351bf703"),
                            Barcode = "Steel",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(3031),
                            IsArchived = true,
                            ProductId = new Guid("de9674f2-7a55-ec71-5f67-8442136b78da"),
                            PurchasePrice = 0.53028524f,
                            RetailPrice = 0.458178f,
                            SKU = "driver",
                            TaxRate = 0.036842372f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(3032),
                            Width = 0.7818392309275638
                        },
                        new
                        {
                            ProductVariantId = new Guid("2e319603-1a1b-37c6-dadb-695677b2629a"),
                            Barcode = "Tanzanian Shilling",
                            Barcode3 = "index",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(3085),
                            Height = 0.00087734079029287248,
                            IsArchived = false,
                            Length = 0.49773790710500343,
                            ProductId = new Guid("809094ca-1942-62ca-f728-b54a1ea2febc"),
                            SKU = "Handcrafted Cotton Shoes",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(3086),
                            Weight = 0.48389446385386142,
                            Width = 0.86734598403207308
                        },
                        new
                        {
                            ProductVariantId = new Guid("700cb00f-2712-118d-ed96-90978b808015"),
                            Barcode = "archive",
                            Barcode2 = "multi-byte",
                            Barcode3 = "paradigms",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(3459),
                            Height = 0.76907074207862403,
                            IsArchived = true,
                            ProductId = new Guid("6d0bccb9-5439-b035-cfe2-8afba9a143e2"),
                            PurchasePrice = 0.92132086f,
                            SKU = "e-tailers",
                            TaxRate = 0.06304538f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(3460),
                            Width = 0.36963068478257893
                        },
                        new
                        {
                            ProductVariantId = new Guid("dc385660-0b88-05c3-644e-78f9da01e8ed"),
                            Barcode = "Accounts",
                            Barcode1 = "purple",
                            Barcode2 = "Open-source",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(3507),
                            Height = 0.21141843181635181,
                            IsArchived = false,
                            Length = 0.41737442110542877,
                            ProductId = new Guid("d05e2711-a3ff-4548-bb22-169f4aa0a94c"),
                            SKU = "Avenue",
                            TaxRate = 0.02432123f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(3507),
                            Weight = 0.89630971285342687
                        },
                        new
                        {
                            ProductVariantId = new Guid("88483b9c-b461-2cce-61f0-cdc543f18936"),
                            Barcode = "transmitting",
                            Barcode1 = "Down-sized",
                            Barcode2 = "revolutionize",
                            Barcode3 = "Tasty Rubber Ball",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(3549),
                            Height = 0.88261982979374931,
                            IsArchived = false,
                            Length = 0.95936297018051286,
                            ProductId = new Guid("cc83e122-0410-25ed-c5c8-9ba9f9556e08"),
                            PurchasePrice = 0.96033967f,
                            SKU = "Fresh",
                            TaxRate = 0.08056952f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(3549),
                            Weight = 0.041276260764001059
                        },
                        new
                        {
                            ProductVariantId = new Guid("44a9afd9-cd41-0286-45b9-54737598b70a"),
                            Barcode = "Bridge",
                            Barcode1 = "Credit Card Account",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(3675),
                            IsArchived = false,
                            ProductId = new Guid("809094ca-1942-62ca-f728-b54a1ea2febc"),
                            PurchasePrice = 0.91640466f,
                            SKU = "turquoise",
                            TaxRate = 0.091702856f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(3675),
                            Weight = 0.76459043089514156,
                            Width = 0.78185702337969887
                        },
                        new
                        {
                            ProductVariantId = new Guid("a145ceeb-7230-65be-2d5d-37e9fec724da"),
                            Barcode = "Automotive & Home",
                            Barcode2 = "XSS",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(3721),
                            Height = 0.31578292432976091,
                            IsArchived = false,
                            Length = 0.7825676569633967,
                            ProductId = new Guid("d05e2711-a3ff-4548-bb22-169f4aa0a94c"),
                            RetailPrice = 0.16118f,
                            SKU = "New Mexico",
                            TaxRate = 0.052925617f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(3722),
                            Weight = 0.56106002748061901
                        },
                        new
                        {
                            ProductVariantId = new Guid("d8b3a24b-976a-867e-ef52-9df018b0aadd"),
                            Barcode = "neural",
                            Barcode2 = "Outdoors & Beauty",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(3799),
                            IsArchived = false,
                            ProductId = new Guid("23b45705-1d18-3ae3-b8ec-135857a817d6"),
                            RetailPrice = 0.5839274f,
                            SKU = "extend",
                            TaxRate = 0.027351128f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(3799),
                            Width = 0.21402598648053872
                        },
                        new
                        {
                            ProductVariantId = new Guid("6cf22e9f-ee50-0a50-2012-294a2446e90e"),
                            Barcode = "solutions",
                            Barcode3 = "multi-byte",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(3839),
                            IsArchived = true,
                            Length = 0.025628032174719512,
                            ProductId = new Guid("63082b39-7e5e-9f05-1a0e-b6aae0a659b9"),
                            PurchasePrice = 0.47821984f,
                            RetailPrice = 0.041339777f,
                            SKU = "quantifying",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(3839),
                            Width = 0.50919418619442458
                        },
                        new
                        {
                            ProductVariantId = new Guid("29962d74-19ba-8257-bbef-5865e18c7440"),
                            Barcode = "New York",
                            Barcode2 = "Small",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(3872),
                            IsArchived = false,
                            ProductId = new Guid("8d4ac50d-6d42-2869-62dd-4cb30cbf2a7f"),
                            PurchasePrice = 0.8522619f,
                            SKU = "secondary",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(3873)
                        },
                        new
                        {
                            ProductVariantId = new Guid("0c51a401-7beb-95bd-73fd-070c01a63150"),
                            Barcode = "Dynamic",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(3907),
                            Height = 0.84690716669285071,
                            IsArchived = true,
                            Length = 0.034323489309439195,
                            ProductId = new Guid("c6ce3b76-1246-5a86-5600-690a2e51c7cf"),
                            PurchasePrice = 0.7643918f,
                            SKU = "Florida",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(3907),
                            Width = 0.25667607516826879
                        },
                        new
                        {
                            ProductVariantId = new Guid("215215a2-0802-b2d6-bdfe-97313047c246"),
                            Barcode = "clicks-and-mortar",
                            Barcode1 = "Track",
                            Barcode2 = "International",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(3941),
                            Height = 0.40522739170362587,
                            IsArchived = true,
                            Length = 0.77865754197289117,
                            ProductId = new Guid("b07224e6-6de1-078e-77db-8cb78a526581"),
                            RetailPrice = 0.4484731f,
                            SKU = "calculating",
                            TaxRate = 0.05053378f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(3941)
                        },
                        new
                        {
                            ProductVariantId = new Guid("a9ac46b3-c98a-0e31-16a8-a1502dd429a5"),
                            Barcode = "black",
                            Barcode1 = "human-resource",
                            Barcode2 = "bandwidth",
                            Barcode3 = "Paradigm",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(3977),
                            IsArchived = true,
                            ProductId = new Guid("6c357dbb-56f6-bcf7-5ccb-cba371a9ede4"),
                            SKU = "haptic",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(3977),
                            Width = 0.49470943794339406
                        },
                        new
                        {
                            ProductVariantId = new Guid("34b5b6c2-b64c-0d84-3236-85d488f92741"),
                            Barcode = "compressing",
                            Barcode2 = "vortals",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4052),
                            IsArchived = false,
                            Length = 0.1622580597932721,
                            ProductId = new Guid("8c380469-da20-2c57-b71d-959d5622a9ca"),
                            RetailPrice = 0.7910807f,
                            SKU = "Delaware",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4052),
                            Weight = 0.84448512496635553,
                            Width = 0.95907763110430799
                        },
                        new
                        {
                            ProductVariantId = new Guid("eb1d2ebe-6771-624e-8e91-fac3799d5eb6"),
                            Barcode = "Frozen",
                            Barcode2 = "rich",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4084),
                            IsArchived = true,
                            ProductId = new Guid("4b40f938-1581-a32e-a5c0-9c18465de601"),
                            RetailPrice = 0.16863547f,
                            SKU = "override",
                            TaxRate = 0.068753384f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4084)
                        },
                        new
                        {
                            ProductVariantId = new Guid("dc0658e9-191f-6d25-acd1-4749107003b2"),
                            Barcode = "Parkways",
                            Barcode1 = "Handmade",
                            Barcode3 = "Assurance",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4118),
                            IsArchived = false,
                            Length = 0.99991400912400052,
                            ProductId = new Guid("5ac17955-22ae-3b7d-3954-a3096d334f67"),
                            PurchasePrice = 0.7999671f,
                            RetailPrice = 0.1258428f,
                            SKU = "AI",
                            TaxRate = 0.030074848f,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4118)
                        });
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.PurchaseOrder", b =>
                {
                    b.Property<Guid>("PurchaseOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("purchaseorderid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint")
                        .HasColumnName("companyid");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("createddatetime");

                    b.Property<long?>("CreatedUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("createduserid");

                    b.Property<DateTime>("ExpectedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("expecteddate");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("boolean")
                        .HasColumnName("isarchived");

                    b.Property<long>("LocationId")
                        .HasColumnType("bigint")
                        .HasColumnName("locationid");

                    b.Property<long?>("ModifiedUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("modifieduserid");

                    b.Property<string>("Note")
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)")
                        .HasColumnName("note");

                    b.Property<int>("POStatus")
                        .HasColumnType("integer")
                        .HasColumnName("postatus");

                    b.Property<string>("PurchaseOrderNumber")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("purchaseordernumber");

                    b.Property<float>("Shipping")
                        .HasColumnType("real")
                        .HasColumnName("shipping");

                    b.Property<string>("ShippingCarrier")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("shippingcarrier");

                    b.Property<float>("Subtotal")
                        .HasColumnType("real")
                        .HasColumnName("subtotal");

                    b.Property<long>("SupplierId")
                        .HasColumnType("bigint")
                        .HasColumnName("supplierid");

                    b.Property<float>("Tax")
                        .HasColumnType("real")
                        .HasColumnName("tax");

                    b.Property<float>("Total")
                        .HasColumnType("real")
                        .HasColumnName("total");

                    b.Property<string>("TrackingNumber")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("trackingnumber");

                    b.Property<int>("UnitOrders")
                        .HasColumnType("integer")
                        .HasColumnName("unitorders");

                    b.Property<DateTime>("UpdatedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updateddatetime");

                    b.HasKey("PurchaseOrderId")
                        .HasName("pk_purchaseorder");

                    b.HasIndex("CompanyId")
                        .HasDatabaseName("ix_purchaseorder_companyid");

                    b.HasIndex("CreatedUserId")
                        .HasDatabaseName("ix_purchaseorder_createduserid");

                    b.HasIndex("LocationId")
                        .HasDatabaseName("ix_purchaseorder_locationid");

                    b.HasIndex("ModifiedUserId")
                        .HasDatabaseName("ix_purchaseorder_modifieduserid");

                    b.HasIndex("SupplierId")
                        .HasDatabaseName("ix_purchaseorder_supplierid");

                    b.ToTable("purchaseorder", (string)null);
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.PurchaseOrderHistory", b =>
                {
                    b.Property<Guid>("PurchaseOrderHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("purchaseorderhistoryid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("createddatetime");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)")
                        .HasColumnName("message");

                    b.Property<Guid?>("PurchaseOrderId")
                        .HasColumnType("uuid")
                        .HasColumnName("purchaseorderid");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("userid");

                    b.HasKey("PurchaseOrderHistoryId")
                        .HasName("pk_purchaseorderhistory");

                    b.HasIndex("PurchaseOrderId")
                        .HasDatabaseName("ix_purchaseorderhistory_purchaseorderid");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_purchaseorderhistory_userid");

                    b.ToTable("purchaseorderhistory", (string)null);
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.PurchaseOrderItem", b =>
                {
                    b.Property<Guid>("PurchaseOrderItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("purchaseorderitemid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<Guid>("ProductVariantId")
                        .HasColumnType("uuid")
                        .HasColumnName("productvariantid");

                    b.Property<Guid>("PurchaseOrderId")
                        .HasColumnType("uuid")
                        .HasColumnName("purchaseorderid");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer")
                        .HasColumnName("quantity");

                    b.HasKey("PurchaseOrderItemId")
                        .HasName("pk_purchaseorderitem");

                    b.HasIndex("ProductVariantId")
                        .HasDatabaseName("ix_purchaseorderitem_productvariantid");

                    b.HasIndex("PurchaseOrderId")
                        .HasDatabaseName("ix_purchaseorderitem_purchaseorderid");

                    b.ToTable("purchaseorderitem", (string)null);
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.PurchaseRequest", b =>
                {
                    b.Property<Guid>("PurchaseRequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("purchaserequestid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint")
                        .HasColumnName("companyid");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("createddatetime");

                    b.Property<long?>("CreatedUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("createduserid");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("boolean")
                        .HasColumnName("isarchived");

                    b.Property<string>("MessageFromTeam")
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)")
                        .HasColumnName("messagefromteam");

                    b.Property<string>("MessageToTeam")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)")
                        .HasColumnName("messagetoteam");

                    b.Property<long?>("ModifiedUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("modifieduserid");

                    b.Property<int>("Staus")
                        .HasColumnType("integer")
                        .HasColumnName("staus");

                    b.Property<DateTime>("UpdatedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updateddatetime");

                    b.HasKey("PurchaseRequestId")
                        .HasName("pk_purchaserequest");

                    b.HasIndex("CompanyId")
                        .HasDatabaseName("ix_purchaserequest_companyid");

                    b.HasIndex("CreatedUserId")
                        .HasDatabaseName("ix_purchaserequest_createduserid");

                    b.HasIndex("ModifiedUserId")
                        .HasDatabaseName("ix_purchaserequest_modifieduserid");

                    b.ToTable("purchaserequest", (string)null);
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.Rack", b =>
                {
                    b.Property<Guid>("RackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("rackid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("createddatetime");

                    b.Property<long?>("CreatedUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("createduserid");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("boolean")
                        .HasColumnName("isarchived");

                    b.Property<long>("LocationId")
                        .HasColumnType("bigint")
                        .HasColumnName("locationid");

                    b.Property<long?>("ModifiedUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("modifieduserid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("name");

                    b.Property<DateTime>("UpdatedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updateddatetime");

                    b.Property<int>("XSlotMax")
                        .HasColumnType("integer")
                        .HasColumnName("xslotmax");

                    b.Property<int>("YSlotMax")
                        .HasColumnType("integer")
                        .HasColumnName("yslotmax");

                    b.HasKey("RackId")
                        .HasName("pk_rack");

                    b.HasIndex("CreatedUserId")
                        .HasDatabaseName("ix_rack_createduserid");

                    b.HasIndex("LocationId")
                        .HasDatabaseName("ix_rack_locationid");

                    b.HasIndex("ModifiedUserId")
                        .HasDatabaseName("ix_rack_modifieduserid");

                    b.ToTable("rack", (string)null);
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.ShippingOption", b =>
                {
                    b.Property<long>("ShippingOptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("shippingoptionid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ShippingOptionId"));

                    b.Property<long>("CourierId")
                        .HasColumnType("bigint")
                        .HasColumnName("courierid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("name");

                    b.HasKey("ShippingOptionId")
                        .HasName("pk_shippingoption");

                    b.HasIndex("CourierId")
                        .HasDatabaseName("ix_shippingoption_courierid");

                    b.ToTable("shippingoption", (string)null);
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.Supplier", b =>
                {
                    b.Property<long>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("supplierid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("SupplierId"));

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("address");

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint")
                        .HasColumnName("companyid");

                    b.Property<string>("Contact")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("contact");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("createddatetime");

                    b.Property<long?>("CreatedUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("createduserid");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("email");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("boolean")
                        .HasColumnName("isarchived");

                    b.Property<long?>("ModifiedUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("modifieduserid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("name");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("phonenumber");

                    b.Property<DateTime>("UpdatedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updateddatetime");

                    b.HasKey("SupplierId")
                        .HasName("pk_supplier");

                    b.HasIndex("CompanyId")
                        .HasDatabaseName("ix_supplier_companyid");

                    b.HasIndex("CreatedUserId")
                        .HasDatabaseName("ix_supplier_createduserid");

                    b.HasIndex("ModifiedUserId")
                        .HasDatabaseName("ix_supplier_modifieduserid");

                    b.ToTable("supplier", (string)null);

                    b.HasData(
                        new
                        {
                            SupplierId = 100L,
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 191, DateTimeKind.Utc).AddTicks(7844),
                            IsArchived = true,
                            Name = "Garden & Movies",
                            PhoneNumber = "540.382.3353 x41121",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 191, DateTimeKind.Utc).AddTicks(7845)
                        },
                        new
                        {
                            SupplierId = 101L,
                            CompanyId = 101L,
                            Contact = "Eunice Rippin",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 191, DateTimeKind.Utc).AddTicks(9837),
                            IsArchived = false,
                            Name = "Tools",
                            PhoneNumber = "956.809.2645",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 191, DateTimeKind.Utc).AddTicks(9838)
                        },
                        new
                        {
                            SupplierId = 102L,
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 192, DateTimeKind.Utc).AddTicks(198),
                            Email = "Darrel78@yahoo.com",
                            IsArchived = false,
                            Name = "Games",
                            PhoneNumber = "1-841-600-4120 x23052",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 192, DateTimeKind.Utc).AddTicks(198)
                        },
                        new
                        {
                            SupplierId = 103L,
                            Address = "775 Alfonso Run, Rockyville, Congo",
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 192, DateTimeKind.Utc).AddTicks(428),
                            Email = "Dixie99@gmail.com",
                            IsArchived = false,
                            Name = "Books & Industrial",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 192, DateTimeKind.Utc).AddTicks(428)
                        },
                        new
                        {
                            SupplierId = 104L,
                            CompanyId = 100L,
                            Contact = "Vito Kuhlman",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 192, DateTimeKind.Utc).AddTicks(818),
                            IsArchived = true,
                            Name = "Clothing",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 192, DateTimeKind.Utc).AddTicks(819)
                        },
                        new
                        {
                            SupplierId = 105L,
                            Address = "551 Zboncak Circle, Kiraton, Ghana",
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 192, DateTimeKind.Utc).AddTicks(1342),
                            IsArchived = true,
                            Name = "Books",
                            PhoneNumber = "(746) 878-5738",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 192, DateTimeKind.Utc).AddTicks(1342)
                        },
                        new
                        {
                            SupplierId = 106L,
                            Address = "92971 Renner Valleys, West Lew, Grenada",
                            CompanyId = 101L,
                            Contact = "Giovani Aufderhar",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 192, DateTimeKind.Utc).AddTicks(1643),
                            Email = "Maximilian.Hoppe43@yahoo.com",
                            IsArchived = true,
                            Name = "Clothing & Outdoors",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 192, DateTimeKind.Utc).AddTicks(1643)
                        },
                        new
                        {
                            SupplierId = 107L,
                            CompanyId = 100L,
                            Contact = "Katarina Howell",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 192, DateTimeKind.Utc).AddTicks(1861),
                            Email = "Willis_Schoen24@yahoo.com",
                            IsArchived = false,
                            Name = "Health & Grocery",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 192, DateTimeKind.Utc).AddTicks(1862)
                        },
                        new
                        {
                            SupplierId = 108L,
                            Address = "69028 Hillard Viaduct, West Elfrieda, Suriname",
                            CompanyId = 100L,
                            Contact = "Carlie Kuhic",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 192, DateTimeKind.Utc).AddTicks(2036),
                            IsArchived = false,
                            Name = "Outdoors, Beauty & Clothing",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 192, DateTimeKind.Utc).AddTicks(2037)
                        },
                        new
                        {
                            SupplierId = 109L,
                            Address = "6802 Sunny Shoal, Uniquemouth, Martinique",
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 192, DateTimeKind.Utc).AddTicks(2235),
                            Email = "Elbert53@gmail.com",
                            IsArchived = false,
                            Name = "Music & Garden",
                            PhoneNumber = "885.585.6719 x636",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 192, DateTimeKind.Utc).AddTicks(2235)
                        },
                        new
                        {
                            SupplierId = 110L,
                            Address = "73886 Richmond Mountain, Jerrellfort, Nigeria",
                            CompanyId = 101L,
                            Contact = "Cordia Witting",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 192, DateTimeKind.Utc).AddTicks(2410),
                            IsArchived = false,
                            Name = "Beauty & Health",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 192, DateTimeKind.Utc).AddTicks(2411)
                        },
                        new
                        {
                            SupplierId = 111L,
                            Address = "7271 Ratke Road, New Eduardo, Turkey",
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 192, DateTimeKind.Utc).AddTicks(2570),
                            IsArchived = true,
                            Name = "Kids",
                            PhoneNumber = "281-675-5809 x7043",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 192, DateTimeKind.Utc).AddTicks(2570)
                        },
                        new
                        {
                            SupplierId = 112L,
                            Address = "6428 Jacobson Islands, Ornmouth, Myanmar",
                            CompanyId = 100L,
                            Contact = "Wendy Crona",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 192, DateTimeKind.Utc).AddTicks(2757),
                            Email = "Cathy.Daugherty@gmail.com",
                            IsArchived = true,
                            Name = "Games",
                            PhoneNumber = "1-400-935-0162 x6198",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 192, DateTimeKind.Utc).AddTicks(2757)
                        },
                        new
                        {
                            SupplierId = 113L,
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 192, DateTimeKind.Utc).AddTicks(2900),
                            Email = "Hoyt1@hotmail.com",
                            IsArchived = true,
                            Name = "Toys, Beauty & Music",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 192, DateTimeKind.Utc).AddTicks(2900)
                        },
                        new
                        {
                            SupplierId = 114L,
                            Address = "11287 Caleigh Junction, Port Dianaville, Paraguay",
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 192, DateTimeKind.Utc).AddTicks(3064),
                            Email = "Marty69@hotmail.com",
                            IsArchived = true,
                            Name = "Garden, Beauty & Automotive",
                            PhoneNumber = "820.230.0322 x145",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 192, DateTimeKind.Utc).AddTicks(3064)
                        },
                        new
                        {
                            SupplierId = 115L,
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 192, DateTimeKind.Utc).AddTicks(3232),
                            IsArchived = false,
                            Name = "Music & Electronics",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 192, DateTimeKind.Utc).AddTicks(3232)
                        },
                        new
                        {
                            SupplierId = 116L,
                            CompanyId = 100L,
                            Contact = "Antoinette Gleason",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 192, DateTimeKind.Utc).AddTicks(3384),
                            Email = "Celine.Wisoky69@gmail.com",
                            IsArchived = false,
                            Name = "Health & Toys",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 192, DateTimeKind.Utc).AddTicks(3384)
                        },
                        new
                        {
                            SupplierId = 117L,
                            CompanyId = 100L,
                            Contact = "Prince Cormier",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 192, DateTimeKind.Utc).AddTicks(3536),
                            IsArchived = true,
                            Name = "Garden & Jewelery",
                            PhoneNumber = "1-762-348-2188 x2471",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 192, DateTimeKind.Utc).AddTicks(3536)
                        },
                        new
                        {
                            SupplierId = 118L,
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 192, DateTimeKind.Utc).AddTicks(3751),
                            Email = "Richard69@yahoo.com",
                            IsArchived = false,
                            Name = "Outdoors",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 192, DateTimeKind.Utc).AddTicks(3751)
                        },
                        new
                        {
                            SupplierId = 119L,
                            Address = "8132 Rozella Trail, Catherineburgh, Botswana",
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 192, DateTimeKind.Utc).AddTicks(3889),
                            IsArchived = false,
                            Name = "Electronics",
                            PhoneNumber = "(752) 270-7576 x115",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 192, DateTimeKind.Utc).AddTicks(3889)
                        },
                        new
                        {
                            SupplierId = 120L,
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 192, DateTimeKind.Utc).AddTicks(4023),
                            IsArchived = true,
                            Name = "Clothing, Clothing & Electronics",
                            PhoneNumber = "1-316-283-5855 x487",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 192, DateTimeKind.Utc).AddTicks(4024)
                        },
                        new
                        {
                            SupplierId = 121L,
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 192, DateTimeKind.Utc).AddTicks(4182),
                            IsArchived = false,
                            Name = "Games & Industrial",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 192, DateTimeKind.Utc).AddTicks(4182)
                        },
                        new
                        {
                            SupplierId = 122L,
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 192, DateTimeKind.Utc).AddTicks(4329),
                            IsArchived = true,
                            Name = "Outdoors & Shoes",
                            PhoneNumber = "591-773-6969 x0011",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 192, DateTimeKind.Utc).AddTicks(4329)
                        },
                        new
                        {
                            SupplierId = 123L,
                            Address = "22289 Hegmann Corners, Jairostad, Cameroon",
                            CompanyId = 101L,
                            Contact = "Rusty Heaney",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 192, DateTimeKind.Utc).AddTicks(4476),
                            Email = "Alba35@gmail.com",
                            IsArchived = false,
                            Name = "Music, Baby & Garden",
                            PhoneNumber = "370.298.0842",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 192, DateTimeKind.Utc).AddTicks(4476)
                        },
                        new
                        {
                            SupplierId = 124L,
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 192, DateTimeKind.Utc).AddTicks(4663),
                            Email = "Janick64@hotmail.com",
                            IsArchived = true,
                            Name = "Outdoors, Outdoors & Outdoors",
                            PhoneNumber = "817.953.5720",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 192, DateTimeKind.Utc).AddTicks(4664)
                        },
                        new
                        {
                            SupplierId = 125L,
                            CompanyId = 100L,
                            Contact = "Ted West",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 192, DateTimeKind.Utc).AddTicks(4809),
                            Email = "Linwood_Price@yahoo.com",
                            IsArchived = true,
                            Name = "Shoes & Electronics",
                            PhoneNumber = "729-229-0211",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 192, DateTimeKind.Utc).AddTicks(4809)
                        },
                        new
                        {
                            SupplierId = 126L,
                            CompanyId = 100L,
                            Contact = "Iva Dickens",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 192, DateTimeKind.Utc).AddTicks(4950),
                            IsArchived = true,
                            Name = "Garden & Clothing",
                            PhoneNumber = "1-445-288-2328 x59627",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 192, DateTimeKind.Utc).AddTicks(4951)
                        },
                        new
                        {
                            SupplierId = 127L,
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 192, DateTimeKind.Utc).AddTicks(5117),
                            IsArchived = false,
                            Name = "Electronics, Tools & Tools",
                            PhoneNumber = "(621) 306-6274 x66488",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 192, DateTimeKind.Utc).AddTicks(5117)
                        },
                        new
                        {
                            SupplierId = 128L,
                            CompanyId = 101L,
                            Contact = "Ludie Olson",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 192, DateTimeKind.Utc).AddTicks(5281),
                            IsArchived = false,
                            Name = "Movies",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 192, DateTimeKind.Utc).AddTicks(5281)
                        },
                        new
                        {
                            SupplierId = 129L,
                            Address = "780 Osinski Lock, Koepptown, Jamaica",
                            CompanyId = 100L,
                            Contact = "Loraine Rodriguez",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 192, DateTimeKind.Utc).AddTicks(5478),
                            IsArchived = true,
                            Name = "Books, Health & Outdoors",
                            PhoneNumber = "(886) 702-1990 x778",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 192, DateTimeKind.Utc).AddTicks(5478)
                        },
                        new
                        {
                            SupplierId = 130L,
                            Address = "00036 Thaddeus Island, South Jevon, Syrian Arab Republic",
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 192, DateTimeKind.Utc).AddTicks(5644),
                            Email = "Earl_Von63@gmail.com",
                            IsArchived = true,
                            Name = "Tools, Games & Toys",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 192, DateTimeKind.Utc).AddTicks(5644)
                        },
                        new
                        {
                            SupplierId = 131L,
                            CompanyId = 101L,
                            Contact = "Danial Jacobson",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 192, DateTimeKind.Utc).AddTicks(5804),
                            IsArchived = false,
                            Name = "Sports, Beauty & Clothing",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 192, DateTimeKind.Utc).AddTicks(5804)
                        },
                        new
                        {
                            SupplierId = 132L,
                            Address = "98207 Turcotte Unions, Mannhaven, Liechtenstein",
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 192, DateTimeKind.Utc).AddTicks(5980),
                            Email = "Frances_McKenzie@gmail.com",
                            IsArchived = false,
                            Name = "Electronics & Baby",
                            PhoneNumber = "1-541-386-9744 x52079",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 192, DateTimeKind.Utc).AddTicks(5981)
                        },
                        new
                        {
                            SupplierId = 133L,
                            CompanyId = 101L,
                            Contact = "Fanny Schamberger",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 192, DateTimeKind.Utc).AddTicks(6118),
                            Email = "Laney.McCullough90@hotmail.com",
                            IsArchived = false,
                            Name = "Home & Outdoors",
                            PhoneNumber = "(796) 858-6326 x325",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 192, DateTimeKind.Utc).AddTicks(6119)
                        },
                        new
                        {
                            SupplierId = 134L,
                            Address = "06160 Koch Lakes, South Dandre, Cape Verde",
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 192, DateTimeKind.Utc).AddTicks(6272),
                            IsArchived = false,
                            Name = "Home & Music",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 192, DateTimeKind.Utc).AddTicks(6272)
                        },
                        new
                        {
                            SupplierId = 135L,
                            CompanyId = 101L,
                            Contact = "Maximilian Bashirian",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 192, DateTimeKind.Utc).AddTicks(6445),
                            Email = "Kristoffer_Macejkovic61@yahoo.com",
                            IsArchived = true,
                            Name = "Garden",
                            PhoneNumber = "870.824.2908",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 192, DateTimeKind.Utc).AddTicks(6445)
                        },
                        new
                        {
                            SupplierId = 136L,
                            Address = "91373 Kozey Via, Eleanorashire, Jamaica",
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 192, DateTimeKind.Utc).AddTicks(6590),
                            Email = "Norval80@gmail.com",
                            IsArchived = true,
                            Name = "Beauty",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 192, DateTimeKind.Utc).AddTicks(6590)
                        },
                        new
                        {
                            SupplierId = 137L,
                            Address = "7030 Cassandre Alley, West Jairo, Guyana",
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 192, DateTimeKind.Utc).AddTicks(6729),
                            IsArchived = false,
                            Name = "Music, Grocery & Movies",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 192, DateTimeKind.Utc).AddTicks(6729)
                        },
                        new
                        {
                            SupplierId = 138L,
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 193, DateTimeKind.Utc).AddTicks(2744),
                            IsArchived = true,
                            Name = "Jewelery",
                            PhoneNumber = "(773) 201-1204",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 193, DateTimeKind.Utc).AddTicks(2745)
                        },
                        new
                        {
                            SupplierId = 139L,
                            Address = "176 Corbin Viaduct, New Jada, Norway",
                            CompanyId = 101L,
                            Contact = "Talia Spinka",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 193, DateTimeKind.Utc).AddTicks(3279),
                            Email = "Hilario_Bradtke21@gmail.com",
                            IsArchived = true,
                            Name = "Automotive, Beauty & Health",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 193, DateTimeKind.Utc).AddTicks(3279)
                        },
                        new
                        {
                            SupplierId = 140L,
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 193, DateTimeKind.Utc).AddTicks(3569),
                            Email = "Amara.Bogan66@yahoo.com",
                            IsArchived = false,
                            Name = "Garden, Outdoors & Clothing",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 193, DateTimeKind.Utc).AddTicks(3570)
                        },
                        new
                        {
                            SupplierId = 141L,
                            CompanyId = 101L,
                            Contact = "Raphael Pfannerstill",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 193, DateTimeKind.Utc).AddTicks(3773),
                            Email = "Kory32@yahoo.com",
                            IsArchived = false,
                            Name = "Baby, Automotive & Automotive",
                            PhoneNumber = "369.224.2244 x3036",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 193, DateTimeKind.Utc).AddTicks(3773)
                        },
                        new
                        {
                            SupplierId = 142L,
                            Address = "0049 Zemlak Islands, Port Dewayne, Swaziland",
                            CompanyId = 101L,
                            Contact = "Felicita Wisoky",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 193, DateTimeKind.Utc).AddTicks(3987),
                            IsArchived = true,
                            Name = "Beauty",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 193, DateTimeKind.Utc).AddTicks(3988)
                        },
                        new
                        {
                            SupplierId = 143L,
                            CompanyId = 100L,
                            Contact = "Bonita Nolan",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 193, DateTimeKind.Utc).AddTicks(4182),
                            Email = "Vergie_Runte@hotmail.com",
                            IsArchived = false,
                            Name = "Games & Kids",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 193, DateTimeKind.Utc).AddTicks(4182)
                        },
                        new
                        {
                            SupplierId = 144L,
                            CompanyId = 101L,
                            Contact = "Kari Hammes",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 193, DateTimeKind.Utc).AddTicks(4400),
                            IsArchived = false,
                            Name = "Outdoors & Computers",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 193, DateTimeKind.Utc).AddTicks(4401)
                        },
                        new
                        {
                            SupplierId = 145L,
                            Address = "61034 Padberg Cape, North Jarrethaven, Cayman Islands",
                            CompanyId = 100L,
                            Contact = "Dion McGlynn",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 193, DateTimeKind.Utc).AddTicks(4844),
                            Email = "Jordan76@yahoo.com",
                            IsArchived = true,
                            Name = "Kids & Grocery",
                            PhoneNumber = "951.887.8321",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 193, DateTimeKind.Utc).AddTicks(4845)
                        },
                        new
                        {
                            SupplierId = 146L,
                            Address = "28395 Franz Plain, South Yolandafurt, Maldives",
                            CompanyId = 101L,
                            Contact = "Fannie Schuster",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 193, DateTimeKind.Utc).AddTicks(5033),
                            IsArchived = false,
                            Name = "Automotive, Outdoors & Beauty",
                            PhoneNumber = "356.945.3921 x8402",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 193, DateTimeKind.Utc).AddTicks(5033)
                        },
                        new
                        {
                            SupplierId = 147L,
                            Address = "11374 Brendon Curve, Port Anita, Somalia",
                            CompanyId = 101L,
                            Contact = "August Sporer",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 193, DateTimeKind.Utc).AddTicks(5219),
                            Email = "Arnold.Wolf86@hotmail.com",
                            IsArchived = true,
                            Name = "Computers, Health & Home",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 193, DateTimeKind.Utc).AddTicks(5220)
                        },
                        new
                        {
                            SupplierId = 148L,
                            Address = "24963 Montana River, Arielleland, Mayotte",
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 193, DateTimeKind.Utc).AddTicks(5402),
                            IsArchived = false,
                            Name = "Grocery",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 193, DateTimeKind.Utc).AddTicks(5402)
                        },
                        new
                        {
                            SupplierId = 149L,
                            CompanyId = 101L,
                            Contact = "Reba Hahn",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 193, DateTimeKind.Utc).AddTicks(5676),
                            Email = "Rahul_Stroman@gmail.com",
                            IsArchived = false,
                            Name = "Books",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 193, DateTimeKind.Utc).AddTicks(5677)
                        },
                        new
                        {
                            SupplierId = 150L,
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 193, DateTimeKind.Utc).AddTicks(5940),
                            IsArchived = true,
                            Name = "Movies",
                            PhoneNumber = "1-716-378-5970 x81551",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 193, DateTimeKind.Utc).AddTicks(5940)
                        },
                        new
                        {
                            SupplierId = 151L,
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 193, DateTimeKind.Utc).AddTicks(6112),
                            Email = "Winnifred69@hotmail.com",
                            IsArchived = true,
                            Name = "Computers & Clothing",
                            PhoneNumber = "480-769-6585",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 193, DateTimeKind.Utc).AddTicks(6113)
                        },
                        new
                        {
                            SupplierId = 152L,
                            CompanyId = 101L,
                            Contact = "Porter Hane",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 193, DateTimeKind.Utc).AddTicks(6311),
                            Email = "Keith_Lakin@hotmail.com",
                            IsArchived = false,
                            Name = "Health & Shoes",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 193, DateTimeKind.Utc).AddTicks(6312)
                        },
                        new
                        {
                            SupplierId = 153L,
                            Address = "4173 Mose Hills, Frederickport, Ethiopia",
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 193, DateTimeKind.Utc).AddTicks(6504),
                            IsArchived = true,
                            Name = "Home",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 193, DateTimeKind.Utc).AddTicks(6505)
                        },
                        new
                        {
                            SupplierId = 154L,
                            Address = "26965 Meda Loop, Abagailview, Saint Pierre and Miquelon",
                            CompanyId = 101L,
                            Contact = "Sibyl Klocko",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 193, DateTimeKind.Utc).AddTicks(6656),
                            IsArchived = false,
                            Name = "Electronics & Outdoors",
                            PhoneNumber = "(230) 656-7391",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 193, DateTimeKind.Utc).AddTicks(6656)
                        },
                        new
                        {
                            SupplierId = 155L,
                            CompanyId = 100L,
                            Contact = "Nolan Walker",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 193, DateTimeKind.Utc).AddTicks(6879),
                            Email = "Adonis58@gmail.com",
                            IsArchived = true,
                            Name = "Sports, Toys & Clothing",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 193, DateTimeKind.Utc).AddTicks(6879)
                        },
                        new
                        {
                            SupplierId = 156L,
                            Address = "80706 Swaniawski Squares, North Magnushaven, Argentina",
                            CompanyId = 100L,
                            Contact = "Billie Corwin",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 193, DateTimeKind.Utc).AddTicks(7063),
                            Email = "Erna.Fritsch@yahoo.com",
                            IsArchived = false,
                            Name = "Computers & Grocery",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 193, DateTimeKind.Utc).AddTicks(7063)
                        },
                        new
                        {
                            SupplierId = 157L,
                            Address = "3570 Tromp Rapid, Schulistberg, Cote d'Ivoire",
                            CompanyId = 100L,
                            Contact = "Gus Leannon",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 193, DateTimeKind.Utc).AddTicks(7249),
                            IsArchived = true,
                            Name = "Music & Home",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 193, DateTimeKind.Utc).AddTicks(7250)
                        },
                        new
                        {
                            SupplierId = 158L,
                            Address = "56089 Breitenberg Camp, East Krystina, Central African Republic",
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 193, DateTimeKind.Utc).AddTicks(7395),
                            IsArchived = true,
                            Name = "Garden, Kids & Home",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 193, DateTimeKind.Utc).AddTicks(7395)
                        },
                        new
                        {
                            SupplierId = 159L,
                            Address = "4097 Winston Loop, Bartellfort, Senegal",
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 193, DateTimeKind.Utc).AddTicks(7557),
                            IsArchived = false,
                            Name = "Clothing, Shoes & Tools",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 193, DateTimeKind.Utc).AddTicks(7558)
                        },
                        new
                        {
                            SupplierId = 160L,
                            CompanyId = 101L,
                            Contact = "Camryn Rolfson",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 193, DateTimeKind.Utc).AddTicks(7710),
                            Email = "Marion.Schneider@yahoo.com",
                            IsArchived = true,
                            Name = "Games, Home & Home",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 193, DateTimeKind.Utc).AddTicks(7710)
                        },
                        new
                        {
                            SupplierId = 161L,
                            Address = "532 Pfeffer Island, Mikaylamouth, Philippines",
                            CompanyId = 100L,
                            Contact = "Caleigh Tromp",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 193, DateTimeKind.Utc).AddTicks(7891),
                            IsArchived = true,
                            Name = "Shoes & Beauty",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 193, DateTimeKind.Utc).AddTicks(7891)
                        },
                        new
                        {
                            SupplierId = 162L,
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 193, DateTimeKind.Utc).AddTicks(8041),
                            Email = "Felipa23@yahoo.com",
                            IsArchived = true,
                            Name = "Books & Beauty",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 193, DateTimeKind.Utc).AddTicks(8041)
                        },
                        new
                        {
                            SupplierId = 163L,
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 193, DateTimeKind.Utc).AddTicks(8195),
                            IsArchived = false,
                            Name = "Books & Garden",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 193, DateTimeKind.Utc).AddTicks(8195)
                        },
                        new
                        {
                            SupplierId = 164L,
                            Address = "2221 Prohaska Ridge, West Gilberto, American Samoa",
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 193, DateTimeKind.Utc).AddTicks(8380),
                            Email = "Virgil.Sauer44@gmail.com",
                            IsArchived = false,
                            Name = "Grocery, Home & Toys",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 193, DateTimeKind.Utc).AddTicks(8380)
                        },
                        new
                        {
                            SupplierId = 165L,
                            CompanyId = 101L,
                            Contact = "Solon Emmerich",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 193, DateTimeKind.Utc).AddTicks(8545),
                            IsArchived = true,
                            Name = "Grocery",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 193, DateTimeKind.Utc).AddTicks(8545)
                        },
                        new
                        {
                            SupplierId = 166L,
                            Address = "732 Yvonne Lake, Lake Donatoborough, New Zealand",
                            CompanyId = 101L,
                            Contact = "Tiana Lind",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 193, DateTimeKind.Utc).AddTicks(8720),
                            Email = "Christine.Breitenberg88@gmail.com",
                            IsArchived = true,
                            Name = "Books, Jewelery & Beauty",
                            PhoneNumber = "776-617-8501 x5613",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 193, DateTimeKind.Utc).AddTicks(8720)
                        },
                        new
                        {
                            SupplierId = 167L,
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 193, DateTimeKind.Utc).AddTicks(8899),
                            Email = "Porter_Brakus78@yahoo.com",
                            IsArchived = true,
                            Name = "Kids",
                            PhoneNumber = "(694) 655-8887 x8115",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 193, DateTimeKind.Utc).AddTicks(8899)
                        },
                        new
                        {
                            SupplierId = 168L,
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 193, DateTimeKind.Utc).AddTicks(9047),
                            Email = "Clarissa_Heidenreich@gmail.com",
                            IsArchived = false,
                            Name = "Garden & Tools",
                            PhoneNumber = "220-793-7818 x659",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 193, DateTimeKind.Utc).AddTicks(9048)
                        },
                        new
                        {
                            SupplierId = 169L,
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 193, DateTimeKind.Utc).AddTicks(9220),
                            IsArchived = false,
                            Name = "Movies",
                            PhoneNumber = "409.944.8640",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 193, DateTimeKind.Utc).AddTicks(9221)
                        },
                        new
                        {
                            SupplierId = 170L,
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 193, DateTimeKind.Utc).AddTicks(9422),
                            Email = "Ralph60@gmail.com",
                            IsArchived = true,
                            Name = "Toys",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 193, DateTimeKind.Utc).AddTicks(9422)
                        },
                        new
                        {
                            SupplierId = 171L,
                            Address = "5402 Hardy Circles, West Alexaneview, Macao",
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 193, DateTimeKind.Utc).AddTicks(9562),
                            Email = "Omari.Hintz@yahoo.com",
                            IsArchived = false,
                            Name = "Beauty",
                            PhoneNumber = "548.830.1619 x7618",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 193, DateTimeKind.Utc).AddTicks(9562)
                        },
                        new
                        {
                            SupplierId = 172L,
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 193, DateTimeKind.Utc).AddTicks(9754),
                            IsArchived = false,
                            Name = "Garden, Sports & Industrial",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 193, DateTimeKind.Utc).AddTicks(9754)
                        },
                        new
                        {
                            SupplierId = 173L,
                            Address = "59593 Pollich Well, Feeneyhaven, Pakistan",
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 193, DateTimeKind.Utc).AddTicks(9927),
                            IsArchived = true,
                            Name = "Grocery, Outdoors & Home",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 193, DateTimeKind.Utc).AddTicks(9928)
                        },
                        new
                        {
                            SupplierId = 174L,
                            Address = "254 Easton Bypass, Shainaton, Bangladesh",
                            CompanyId = 100L,
                            Contact = "Margret Hoeger",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 194, DateTimeKind.Utc).AddTicks(69),
                            Email = "Alayna.Larkin4@yahoo.com",
                            IsArchived = true,
                            Name = "Sports & Health",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 194, DateTimeKind.Utc).AddTicks(70)
                        },
                        new
                        {
                            SupplierId = 175L,
                            CompanyId = 100L,
                            Contact = "Nicholas O'Reilly",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 194, DateTimeKind.Utc).AddTicks(244),
                            IsArchived = true,
                            Name = "Electronics",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 194, DateTimeKind.Utc).AddTicks(244)
                        },
                        new
                        {
                            SupplierId = 176L,
                            Address = "63873 Carmel Haven, Orlomouth, Italy",
                            CompanyId = 101L,
                            Contact = "Cameron Welch",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 194, DateTimeKind.Utc).AddTicks(398),
                            IsArchived = false,
                            Name = "Toys, Health & Baby",
                            PhoneNumber = "1-470-538-1760 x610",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 194, DateTimeKind.Utc).AddTicks(398)
                        },
                        new
                        {
                            SupplierId = 177L,
                            CompanyId = 101L,
                            Contact = "Bulah Stehr",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 194, DateTimeKind.Utc).AddTicks(560),
                            Email = "Samara25@yahoo.com",
                            IsArchived = true,
                            Name = "Home & Automotive",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 194, DateTimeKind.Utc).AddTicks(561)
                        },
                        new
                        {
                            SupplierId = 178L,
                            Address = "1816 Elda Street, Lake Vince, Denmark",
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 194, DateTimeKind.Utc).AddTicks(742),
                            IsArchived = true,
                            Name = "Grocery, Computers & Automotive",
                            PhoneNumber = "768-644-9747",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 194, DateTimeKind.Utc).AddTicks(742)
                        },
                        new
                        {
                            SupplierId = 179L,
                            Address = "46787 Corbin Valley, Reichertburgh, Burundi",
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 194, DateTimeKind.Utc).AddTicks(912),
                            IsArchived = false,
                            Name = "Home, Outdoors & Computers",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 194, DateTimeKind.Utc).AddTicks(912)
                        },
                        new
                        {
                            SupplierId = 180L,
                            Address = "5762 Kunde Throughway, North Amyaland, Equatorial Guinea",
                            CompanyId = 101L,
                            Contact = "Ellie Lubowitz",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 194, DateTimeKind.Utc).AddTicks(1068),
                            Email = "Newton_Hoeger38@yahoo.com",
                            IsArchived = false,
                            Name = "Books, Movies & Games",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 194, DateTimeKind.Utc).AddTicks(1068)
                        },
                        new
                        {
                            SupplierId = 181L,
                            Address = "592 Pagac Inlet, Abelborough, Qatar",
                            CompanyId = 101L,
                            Contact = "Arlo Weissnat",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 194, DateTimeKind.Utc).AddTicks(1266),
                            Email = "Donavon_Champlin16@yahoo.com",
                            IsArchived = true,
                            Name = "Home",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 194, DateTimeKind.Utc).AddTicks(1266)
                        },
                        new
                        {
                            SupplierId = 182L,
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 194, DateTimeKind.Utc).AddTicks(1416),
                            IsArchived = true,
                            Name = "Grocery",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 194, DateTimeKind.Utc).AddTicks(1416)
                        },
                        new
                        {
                            SupplierId = 183L,
                            CompanyId = 101L,
                            Contact = "Brandon Skiles",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 194, DateTimeKind.Utc).AddTicks(1566),
                            IsArchived = false,
                            Name = "Automotive & Computers",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 194, DateTimeKind.Utc).AddTicks(1566)
                        },
                        new
                        {
                            SupplierId = 184L,
                            Address = "12826 Cremin Passage, Douglasberg, Greece",
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 194, DateTimeKind.Utc).AddTicks(1732),
                            Email = "Kendall.Roob@hotmail.com",
                            IsArchived = true,
                            Name = "Home, Outdoors & Music",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 194, DateTimeKind.Utc).AddTicks(1732)
                        },
                        new
                        {
                            SupplierId = 185L,
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 194, DateTimeKind.Utc).AddTicks(1891),
                            IsArchived = true,
                            Name = "Music",
                            PhoneNumber = "(374) 347-8844 x7272",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 194, DateTimeKind.Utc).AddTicks(1892)
                        },
                        new
                        {
                            SupplierId = 186L,
                            Address = "018 Vladimir Islands, Georgefurt, Chile",
                            CompanyId = 101L,
                            Contact = "Justus Gutmann",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 194, DateTimeKind.Utc).AddTicks(2031),
                            Email = "Robb47@gmail.com",
                            IsArchived = true,
                            Name = "Music, Books & Automotive",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 194, DateTimeKind.Utc).AddTicks(2031)
                        },
                        new
                        {
                            SupplierId = 187L,
                            Address = "2379 Makenna Knolls, East Robbfurt, Yemen",
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 194, DateTimeKind.Utc).AddTicks(2202),
                            IsArchived = true,
                            Name = "Health, Garden & Music",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 194, DateTimeKind.Utc).AddTicks(2202)
                        },
                        new
                        {
                            SupplierId = 188L,
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 194, DateTimeKind.Utc).AddTicks(2354),
                            IsArchived = false,
                            Name = "Sports & Baby",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 194, DateTimeKind.Utc).AddTicks(2354)
                        },
                        new
                        {
                            SupplierId = 189L,
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 194, DateTimeKind.Utc).AddTicks(8075),
                            Email = "Adam99@yahoo.com",
                            IsArchived = false,
                            Name = "Industrial, Beauty & Baby",
                            PhoneNumber = "651.633.3815 x7608",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 194, DateTimeKind.Utc).AddTicks(8076)
                        },
                        new
                        {
                            SupplierId = 190L,
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 194, DateTimeKind.Utc).AddTicks(8717),
                            IsArchived = false,
                            Name = "Industrial & Shoes",
                            PhoneNumber = "(640) 992-4630 x91116",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 194, DateTimeKind.Utc).AddTicks(8717)
                        },
                        new
                        {
                            SupplierId = 191L,
                            Address = "448 Cathrine Views, D'Amoreshire, Tonga",
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 194, DateTimeKind.Utc).AddTicks(8937),
                            Email = "Louvenia_Lindgren24@gmail.com",
                            IsArchived = false,
                            Name = "Outdoors, Toys & Tools",
                            PhoneNumber = "1-930-421-6417 x40530",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 194, DateTimeKind.Utc).AddTicks(8937)
                        },
                        new
                        {
                            SupplierId = 192L,
                            Address = "60752 Chesley Walk, Lake Mariam, Nauru",
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 194, DateTimeKind.Utc).AddTicks(9201),
                            IsArchived = false,
                            Name = "Outdoors",
                            PhoneNumber = "582-893-6307 x66212",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 194, DateTimeKind.Utc).AddTicks(9202)
                        },
                        new
                        {
                            SupplierId = 193L,
                            CompanyId = 101L,
                            Contact = "Tyshawn Zulauf",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 194, DateTimeKind.Utc).AddTicks(9401),
                            Email = "Augustus70@hotmail.com",
                            IsArchived = true,
                            Name = "Baby & Outdoors",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 194, DateTimeKind.Utc).AddTicks(9402)
                        },
                        new
                        {
                            SupplierId = 194L,
                            Address = "5668 Botsford Brook, Elwynbury, French Southern Territories",
                            CompanyId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 194, DateTimeKind.Utc).AddTicks(9576),
                            Email = "Dangelo52@yahoo.com",
                            IsArchived = true,
                            Name = "Clothing",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 194, DateTimeKind.Utc).AddTicks(9576)
                        },
                        new
                        {
                            SupplierId = 195L,
                            Address = "59978 Paolo Fort, North Fernestad, Grenada",
                            CompanyId = 101L,
                            Contact = "Newton Mante",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 194, DateTimeKind.Utc).AddTicks(9768),
                            IsArchived = true,
                            Name = "Shoes & Automotive",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 194, DateTimeKind.Utc).AddTicks(9768)
                        },
                        new
                        {
                            SupplierId = 196L,
                            Address = "06853 Luettgen Estate, Terryhaven, France",
                            CompanyId = 100L,
                            Contact = "Irma Windler",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 194, DateTimeKind.Utc).AddTicks(9950),
                            IsArchived = false,
                            Name = "Music",
                            PhoneNumber = "760-711-1228 x615",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 194, DateTimeKind.Utc).AddTicks(9950)
                        },
                        new
                        {
                            SupplierId = 197L,
                            CompanyId = 100L,
                            Contact = "Gabriella Beatty",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 195, DateTimeKind.Utc).AddTicks(108),
                            Email = "Deontae.Hartmann69@hotmail.com",
                            IsArchived = false,
                            Name = "Automotive & Kids",
                            PhoneNumber = "911.916.4819",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 195, DateTimeKind.Utc).AddTicks(109)
                        },
                        new
                        {
                            SupplierId = 198L,
                            CompanyId = 100L,
                            Contact = "Federico Gulgowski",
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 195, DateTimeKind.Utc).AddTicks(511),
                            IsArchived = true,
                            Name = "Baby & Tools",
                            PhoneNumber = "(936) 220-1966 x623",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 195, DateTimeKind.Utc).AddTicks(513)
                        },
                        new
                        {
                            SupplierId = 199L,
                            CompanyId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 195, DateTimeKind.Utc).AddTicks(1104),
                            IsArchived = true,
                            Name = "Jewelery",
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 195, DateTimeKind.Utc).AddTicks(1105)
                        });
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.Tote", b =>
                {
                    b.Property<Guid>("ToteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("toteid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<int>("CountMax")
                        .HasColumnType("integer")
                        .HasColumnName("countmax");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("createddatetime");

                    b.Property<long?>("CreatedUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("createduserid");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("boolean")
                        .HasColumnName("isarchived");

                    b.Property<long>("LocationId")
                        .HasColumnType("bigint")
                        .HasColumnName("locationid");

                    b.Property<long?>("ModifiedUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("modifieduserid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("name");

                    b.Property<DateTime>("UpdatedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updateddatetime");

                    b.HasKey("ToteId")
                        .HasName("pk_tote");

                    b.HasIndex("CreatedUserId")
                        .HasDatabaseName("ix_tote_createduserid");

                    b.HasIndex("LocationId")
                        .HasDatabaseName("ix_tote_locationid");

                    b.HasIndex("ModifiedUserId")
                        .HasDatabaseName("ix_tote_modifieduserid");

                    b.ToTable("tote", (string)null);
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.UserPermission", b =>
                {
                    b.Property<long>("UserPermissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("userpermissionid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("UserPermissionId"));

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("createddatetime");

                    b.Property<long?>("CreatedUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("createduserid");

                    b.Property<bool>("IsCrud")
                        .HasColumnType("boolean")
                        .HasColumnName("iscrud");

                    b.Property<long?>("ModifiedUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("modifieduserid");

                    b.Property<int>("PermissionType")
                        .HasColumnType("integer")
                        .HasColumnName("permissiontype");

                    b.Property<DateTime>("UpdatedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updateddatetime");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("userid");

                    b.HasKey("UserPermissionId")
                        .HasName("pk_userpermission");

                    b.HasIndex("CreatedUserId")
                        .HasDatabaseName("ix_userpermission_createduserid");

                    b.HasIndex("ModifiedUserId")
                        .HasDatabaseName("ix_userpermission_modifieduserid");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_userpermission_userid");

                    b.ToTable("userpermission", (string)null);

                    b.HasData(
                        new
                        {
                            UserPermissionId = 100L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4718),
                            IsCrud = true,
                            PermissionType = 4,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4719),
                            UserId = 100L
                        },
                        new
                        {
                            UserPermissionId = 101L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4725),
                            IsCrud = true,
                            PermissionType = 13,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4725),
                            UserId = 100L
                        },
                        new
                        {
                            UserPermissionId = 102L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4726),
                            IsCrud = true,
                            PermissionType = 20,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4726),
                            UserId = 100L
                        },
                        new
                        {
                            UserPermissionId = 103L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4727),
                            IsCrud = true,
                            PermissionType = 30,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4727),
                            UserId = 100L
                        },
                        new
                        {
                            UserPermissionId = 104L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4728),
                            IsCrud = true,
                            PermissionType = 40,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4729),
                            UserId = 100L
                        },
                        new
                        {
                            UserPermissionId = 105L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4730),
                            IsCrud = true,
                            PermissionType = 50,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4730),
                            UserId = 100L
                        },
                        new
                        {
                            UserPermissionId = 106L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4731),
                            IsCrud = true,
                            PermissionType = 60,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4731),
                            UserId = 100L
                        },
                        new
                        {
                            UserPermissionId = 107L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4732),
                            IsCrud = true,
                            PermissionType = 70,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4732),
                            UserId = 100L
                        },
                        new
                        {
                            UserPermissionId = 108L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4733),
                            IsCrud = true,
                            PermissionType = 80,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4733),
                            UserId = 100L
                        },
                        new
                        {
                            UserPermissionId = 109L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4734),
                            IsCrud = true,
                            PermissionType = 90,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4735),
                            UserId = 100L
                        },
                        new
                        {
                            UserPermissionId = 110L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4735),
                            IsCrud = true,
                            PermissionType = 95,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4735),
                            UserId = 100L
                        },
                        new
                        {
                            UserPermissionId = 111L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4736),
                            IsCrud = true,
                            PermissionType = 100,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4736),
                            UserId = 100L
                        },
                        new
                        {
                            UserPermissionId = 112L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4737),
                            IsCrud = true,
                            PermissionType = 110,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4737),
                            UserId = 100L
                        },
                        new
                        {
                            UserPermissionId = 113L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4738),
                            IsCrud = true,
                            PermissionType = 120,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4738),
                            UserId = 100L
                        },
                        new
                        {
                            UserPermissionId = 114L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4738),
                            IsCrud = true,
                            PermissionType = 130,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4739),
                            UserId = 100L
                        },
                        new
                        {
                            UserPermissionId = 115L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4739),
                            IsCrud = true,
                            PermissionType = 140,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4739),
                            UserId = 100L
                        },
                        new
                        {
                            UserPermissionId = 116L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4740),
                            IsCrud = true,
                            PermissionType = 150,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4740),
                            UserId = 100L
                        },
                        new
                        {
                            UserPermissionId = 117L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4742),
                            IsCrud = true,
                            PermissionType = 170,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4742),
                            UserId = 100L
                        },
                        new
                        {
                            UserPermissionId = 118L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4742),
                            IsCrud = true,
                            PermissionType = 180,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4743),
                            UserId = 100L
                        },
                        new
                        {
                            UserPermissionId = 119L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4745),
                            IsCrud = true,
                            PermissionType = 4,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4746),
                            UserId = 101L
                        },
                        new
                        {
                            UserPermissionId = 120L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4791),
                            IsCrud = true,
                            PermissionType = 13,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4791),
                            UserId = 101L
                        },
                        new
                        {
                            UserPermissionId = 121L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4793),
                            IsCrud = true,
                            PermissionType = 20,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4793),
                            UserId = 101L
                        },
                        new
                        {
                            UserPermissionId = 122L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4794),
                            IsCrud = true,
                            PermissionType = 30,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4794),
                            UserId = 101L
                        },
                        new
                        {
                            UserPermissionId = 123L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4795),
                            IsCrud = true,
                            PermissionType = 40,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4795),
                            UserId = 101L
                        },
                        new
                        {
                            UserPermissionId = 124L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4795),
                            IsCrud = true,
                            PermissionType = 50,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4796),
                            UserId = 101L
                        },
                        new
                        {
                            UserPermissionId = 125L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4796),
                            IsCrud = true,
                            PermissionType = 60,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4797),
                            UserId = 101L
                        },
                        new
                        {
                            UserPermissionId = 126L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4797),
                            IsCrud = true,
                            PermissionType = 70,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4798),
                            UserId = 101L
                        },
                        new
                        {
                            UserPermissionId = 127L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4798),
                            IsCrud = true,
                            PermissionType = 80,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4798),
                            UserId = 101L
                        },
                        new
                        {
                            UserPermissionId = 128L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4799),
                            IsCrud = true,
                            PermissionType = 90,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4799),
                            UserId = 101L
                        },
                        new
                        {
                            UserPermissionId = 129L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4800),
                            IsCrud = true,
                            PermissionType = 95,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4800),
                            UserId = 101L
                        },
                        new
                        {
                            UserPermissionId = 130L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4801),
                            IsCrud = true,
                            PermissionType = 100,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4801),
                            UserId = 101L
                        },
                        new
                        {
                            UserPermissionId = 131L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4801),
                            IsCrud = true,
                            PermissionType = 110,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4802),
                            UserId = 101L
                        },
                        new
                        {
                            UserPermissionId = 132L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4802),
                            IsCrud = true,
                            PermissionType = 120,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4802),
                            UserId = 101L
                        },
                        new
                        {
                            UserPermissionId = 133L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4804),
                            IsCrud = true,
                            PermissionType = 130,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4804),
                            UserId = 101L
                        },
                        new
                        {
                            UserPermissionId = 134L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4805),
                            IsCrud = true,
                            PermissionType = 140,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4805),
                            UserId = 101L
                        },
                        new
                        {
                            UserPermissionId = 135L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4805),
                            IsCrud = true,
                            PermissionType = 150,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4806),
                            UserId = 101L
                        },
                        new
                        {
                            UserPermissionId = 136L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4806),
                            IsCrud = true,
                            PermissionType = 170,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4806),
                            UserId = 101L
                        },
                        new
                        {
                            UserPermissionId = 137L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4807),
                            IsCrud = true,
                            PermissionType = 180,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4807),
                            UserId = 101L
                        },
                        new
                        {
                            UserPermissionId = 138L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4809),
                            IsCrud = true,
                            PermissionType = 4,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4809),
                            UserId = 102L
                        },
                        new
                        {
                            UserPermissionId = 139L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4811),
                            IsCrud = true,
                            PermissionType = 13,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4811),
                            UserId = 102L
                        },
                        new
                        {
                            UserPermissionId = 140L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4811),
                            IsCrud = true,
                            PermissionType = 20,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4812),
                            UserId = 102L
                        },
                        new
                        {
                            UserPermissionId = 141L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4812),
                            IsCrud = true,
                            PermissionType = 30,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4813),
                            UserId = 102L
                        },
                        new
                        {
                            UserPermissionId = 142L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4813),
                            IsCrud = true,
                            PermissionType = 40,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4813),
                            UserId = 102L
                        },
                        new
                        {
                            UserPermissionId = 143L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4814),
                            IsCrud = true,
                            PermissionType = 50,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4814),
                            UserId = 102L
                        },
                        new
                        {
                            UserPermissionId = 144L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4815),
                            IsCrud = true,
                            PermissionType = 60,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4815),
                            UserId = 102L
                        },
                        new
                        {
                            UserPermissionId = 145L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4815),
                            IsCrud = true,
                            PermissionType = 70,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4816),
                            UserId = 102L
                        },
                        new
                        {
                            UserPermissionId = 146L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4816),
                            IsCrud = true,
                            PermissionType = 80,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4816),
                            UserId = 102L
                        },
                        new
                        {
                            UserPermissionId = 147L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4817),
                            IsCrud = true,
                            PermissionType = 90,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4817),
                            UserId = 102L
                        },
                        new
                        {
                            UserPermissionId = 148L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4818),
                            IsCrud = true,
                            PermissionType = 95,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4818),
                            UserId = 102L
                        },
                        new
                        {
                            UserPermissionId = 149L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4818),
                            IsCrud = true,
                            PermissionType = 100,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4819),
                            UserId = 102L
                        },
                        new
                        {
                            UserPermissionId = 150L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4819),
                            IsCrud = true,
                            PermissionType = 110,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4819),
                            UserId = 102L
                        },
                        new
                        {
                            UserPermissionId = 151L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4820),
                            IsCrud = true,
                            PermissionType = 120,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4820),
                            UserId = 102L
                        },
                        new
                        {
                            UserPermissionId = 152L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4821),
                            IsCrud = true,
                            PermissionType = 130,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4821),
                            UserId = 102L
                        },
                        new
                        {
                            UserPermissionId = 153L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4821),
                            IsCrud = true,
                            PermissionType = 140,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4822),
                            UserId = 102L
                        },
                        new
                        {
                            UserPermissionId = 154L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4822),
                            IsCrud = true,
                            PermissionType = 150,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4822),
                            UserId = 102L
                        },
                        new
                        {
                            UserPermissionId = 155L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4823),
                            IsCrud = true,
                            PermissionType = 170,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4823),
                            UserId = 102L
                        },
                        new
                        {
                            UserPermissionId = 156L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4824),
                            IsCrud = true,
                            PermissionType = 180,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4824),
                            UserId = 102L
                        },
                        new
                        {
                            UserPermissionId = 157L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4826),
                            IsCrud = true,
                            PermissionType = 4,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4826),
                            UserId = 103L
                        },
                        new
                        {
                            UserPermissionId = 158L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4827),
                            IsCrud = true,
                            PermissionType = 13,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4827),
                            UserId = 103L
                        },
                        new
                        {
                            UserPermissionId = 159L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4828),
                            IsCrud = true,
                            PermissionType = 20,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4828),
                            UserId = 103L
                        },
                        new
                        {
                            UserPermissionId = 160L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4829),
                            IsCrud = true,
                            PermissionType = 30,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4829),
                            UserId = 103L
                        },
                        new
                        {
                            UserPermissionId = 161L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4829),
                            IsCrud = true,
                            PermissionType = 40,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4830),
                            UserId = 103L
                        },
                        new
                        {
                            UserPermissionId = 162L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4830),
                            IsCrud = true,
                            PermissionType = 50,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4830),
                            UserId = 103L
                        },
                        new
                        {
                            UserPermissionId = 163L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4831),
                            IsCrud = true,
                            PermissionType = 60,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4831),
                            UserId = 103L
                        },
                        new
                        {
                            UserPermissionId = 164L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4832),
                            IsCrud = true,
                            PermissionType = 70,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4832),
                            UserId = 103L
                        },
                        new
                        {
                            UserPermissionId = 165L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4833),
                            IsCrud = true,
                            PermissionType = 80,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4833),
                            UserId = 103L
                        },
                        new
                        {
                            UserPermissionId = 166L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4834),
                            IsCrud = true,
                            PermissionType = 90,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4834),
                            UserId = 103L
                        },
                        new
                        {
                            UserPermissionId = 167L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4856),
                            IsCrud = true,
                            PermissionType = 95,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4856),
                            UserId = 103L
                        },
                        new
                        {
                            UserPermissionId = 168L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4857),
                            IsCrud = true,
                            PermissionType = 100,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4857),
                            UserId = 103L
                        },
                        new
                        {
                            UserPermissionId = 169L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4858),
                            IsCrud = true,
                            PermissionType = 110,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4858),
                            UserId = 103L
                        },
                        new
                        {
                            UserPermissionId = 170L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4859),
                            IsCrud = true,
                            PermissionType = 120,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4859),
                            UserId = 103L
                        },
                        new
                        {
                            UserPermissionId = 171L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4860),
                            IsCrud = true,
                            PermissionType = 130,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4860),
                            UserId = 103L
                        },
                        new
                        {
                            UserPermissionId = 172L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4860),
                            IsCrud = true,
                            PermissionType = 140,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4861),
                            UserId = 103L
                        },
                        new
                        {
                            UserPermissionId = 173L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4861),
                            IsCrud = true,
                            PermissionType = 150,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4862),
                            UserId = 103L
                        },
                        new
                        {
                            UserPermissionId = 174L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4862),
                            IsCrud = true,
                            PermissionType = 170,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4862),
                            UserId = 103L
                        },
                        new
                        {
                            UserPermissionId = 175L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4863),
                            IsCrud = true,
                            PermissionType = 180,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4863),
                            UserId = 103L
                        },
                        new
                        {
                            UserPermissionId = 176L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4865),
                            IsCrud = true,
                            PermissionType = 4,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4865),
                            UserId = 104L
                        },
                        new
                        {
                            UserPermissionId = 177L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4867),
                            IsCrud = true,
                            PermissionType = 13,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4867),
                            UserId = 104L
                        },
                        new
                        {
                            UserPermissionId = 178L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4867),
                            IsCrud = true,
                            PermissionType = 20,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4868),
                            UserId = 104L
                        },
                        new
                        {
                            UserPermissionId = 179L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4868),
                            IsCrud = true,
                            PermissionType = 30,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4868),
                            UserId = 104L
                        },
                        new
                        {
                            UserPermissionId = 180L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4869),
                            IsCrud = true,
                            PermissionType = 40,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4869),
                            UserId = 104L
                        },
                        new
                        {
                            UserPermissionId = 181L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4870),
                            IsCrud = true,
                            PermissionType = 50,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4870),
                            UserId = 104L
                        },
                        new
                        {
                            UserPermissionId = 182L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4871),
                            IsCrud = true,
                            PermissionType = 60,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4871),
                            UserId = 104L
                        },
                        new
                        {
                            UserPermissionId = 183L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4871),
                            IsCrud = true,
                            PermissionType = 70,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4872),
                            UserId = 104L
                        },
                        new
                        {
                            UserPermissionId = 184L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4872),
                            IsCrud = true,
                            PermissionType = 80,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4872),
                            UserId = 104L
                        },
                        new
                        {
                            UserPermissionId = 185L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4873),
                            IsCrud = true,
                            PermissionType = 90,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4873),
                            UserId = 104L
                        },
                        new
                        {
                            UserPermissionId = 186L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4874),
                            IsCrud = true,
                            PermissionType = 95,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4874),
                            UserId = 104L
                        },
                        new
                        {
                            UserPermissionId = 187L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4874),
                            IsCrud = true,
                            PermissionType = 100,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4875),
                            UserId = 104L
                        },
                        new
                        {
                            UserPermissionId = 188L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4875),
                            IsCrud = true,
                            PermissionType = 110,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4875),
                            UserId = 104L
                        },
                        new
                        {
                            UserPermissionId = 189L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4876),
                            IsCrud = true,
                            PermissionType = 120,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4876),
                            UserId = 104L
                        },
                        new
                        {
                            UserPermissionId = 190L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4877),
                            IsCrud = true,
                            PermissionType = 130,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4877),
                            UserId = 104L
                        },
                        new
                        {
                            UserPermissionId = 191L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4878),
                            IsCrud = true,
                            PermissionType = 140,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4878),
                            UserId = 104L
                        },
                        new
                        {
                            UserPermissionId = 192L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4878),
                            IsCrud = true,
                            PermissionType = 150,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4879),
                            UserId = 104L
                        },
                        new
                        {
                            UserPermissionId = 193L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4879),
                            IsCrud = true,
                            PermissionType = 170,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4879),
                            UserId = 104L
                        },
                        new
                        {
                            UserPermissionId = 194L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4880),
                            IsCrud = true,
                            PermissionType = 180,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4880),
                            UserId = 104L
                        },
                        new
                        {
                            UserPermissionId = 195L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4882),
                            IsCrud = true,
                            PermissionType = 4,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4882),
                            UserId = 105L
                        },
                        new
                        {
                            UserPermissionId = 196L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4884),
                            IsCrud = true,
                            PermissionType = 13,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4884),
                            UserId = 105L
                        },
                        new
                        {
                            UserPermissionId = 197L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4885),
                            IsCrud = true,
                            PermissionType = 20,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4885),
                            UserId = 105L
                        },
                        new
                        {
                            UserPermissionId = 198L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4885),
                            IsCrud = true,
                            PermissionType = 30,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4886),
                            UserId = 105L
                        },
                        new
                        {
                            UserPermissionId = 199L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4886),
                            IsCrud = true,
                            PermissionType = 40,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4886),
                            UserId = 105L
                        },
                        new
                        {
                            UserPermissionId = 200L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4887),
                            IsCrud = true,
                            PermissionType = 50,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4887),
                            UserId = 105L
                        },
                        new
                        {
                            UserPermissionId = 201L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4888),
                            IsCrud = true,
                            PermissionType = 60,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4888),
                            UserId = 105L
                        },
                        new
                        {
                            UserPermissionId = 202L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4888),
                            IsCrud = true,
                            PermissionType = 70,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4889),
                            UserId = 105L
                        },
                        new
                        {
                            UserPermissionId = 203L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4889),
                            IsCrud = true,
                            PermissionType = 80,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4889),
                            UserId = 105L
                        },
                        new
                        {
                            UserPermissionId = 204L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4890),
                            IsCrud = true,
                            PermissionType = 90,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4890),
                            UserId = 105L
                        },
                        new
                        {
                            UserPermissionId = 205L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4891),
                            IsCrud = true,
                            PermissionType = 95,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4891),
                            UserId = 105L
                        },
                        new
                        {
                            UserPermissionId = 206L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4892),
                            IsCrud = true,
                            PermissionType = 100,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4892),
                            UserId = 105L
                        },
                        new
                        {
                            UserPermissionId = 207L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4892),
                            IsCrud = true,
                            PermissionType = 110,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4893),
                            UserId = 105L
                        },
                        new
                        {
                            UserPermissionId = 208L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4893),
                            IsCrud = true,
                            PermissionType = 120,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4893),
                            UserId = 105L
                        },
                        new
                        {
                            UserPermissionId = 209L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4894),
                            IsCrud = true,
                            PermissionType = 130,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4894),
                            UserId = 105L
                        },
                        new
                        {
                            UserPermissionId = 210L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4895),
                            IsCrud = true,
                            PermissionType = 140,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4895),
                            UserId = 105L
                        },
                        new
                        {
                            UserPermissionId = 211L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4895),
                            IsCrud = true,
                            PermissionType = 150,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4896),
                            UserId = 105L
                        },
                        new
                        {
                            UserPermissionId = 212L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4896),
                            IsCrud = true,
                            PermissionType = 170,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4896),
                            UserId = 105L
                        },
                        new
                        {
                            UserPermissionId = 213L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4897),
                            IsCrud = true,
                            PermissionType = 180,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4897),
                            UserId = 105L
                        },
                        new
                        {
                            UserPermissionId = 214L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4899),
                            IsCrud = true,
                            PermissionType = 4,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4899),
                            UserId = 106L
                        },
                        new
                        {
                            UserPermissionId = 215L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4900),
                            IsCrud = true,
                            PermissionType = 13,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4900),
                            UserId = 106L
                        },
                        new
                        {
                            UserPermissionId = 216L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4901),
                            IsCrud = true,
                            PermissionType = 20,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4901),
                            UserId = 106L
                        },
                        new
                        {
                            UserPermissionId = 217L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4902),
                            IsCrud = true,
                            PermissionType = 30,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4902),
                            UserId = 106L
                        },
                        new
                        {
                            UserPermissionId = 218L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4903),
                            IsCrud = true,
                            PermissionType = 40,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4903),
                            UserId = 106L
                        },
                        new
                        {
                            UserPermissionId = 219L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4903),
                            IsCrud = true,
                            PermissionType = 50,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4904),
                            UserId = 106L
                        },
                        new
                        {
                            UserPermissionId = 220L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4904),
                            IsCrud = true,
                            PermissionType = 60,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4904),
                            UserId = 106L
                        },
                        new
                        {
                            UserPermissionId = 221L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4905),
                            IsCrud = true,
                            PermissionType = 70,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4905),
                            UserId = 106L
                        },
                        new
                        {
                            UserPermissionId = 222L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4906),
                            IsCrud = true,
                            PermissionType = 80,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4906),
                            UserId = 106L
                        },
                        new
                        {
                            UserPermissionId = 223L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4907),
                            IsCrud = true,
                            PermissionType = 90,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4907),
                            UserId = 106L
                        },
                        new
                        {
                            UserPermissionId = 224L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4928),
                            IsCrud = true,
                            PermissionType = 95,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4928),
                            UserId = 106L
                        },
                        new
                        {
                            UserPermissionId = 225L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4929),
                            IsCrud = true,
                            PermissionType = 100,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4929),
                            UserId = 106L
                        },
                        new
                        {
                            UserPermissionId = 226L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4930),
                            IsCrud = true,
                            PermissionType = 110,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4930),
                            UserId = 106L
                        },
                        new
                        {
                            UserPermissionId = 227L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4930),
                            IsCrud = true,
                            PermissionType = 120,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4931),
                            UserId = 106L
                        },
                        new
                        {
                            UserPermissionId = 228L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4931),
                            IsCrud = true,
                            PermissionType = 130,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4932),
                            UserId = 106L
                        },
                        new
                        {
                            UserPermissionId = 229L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4933),
                            IsCrud = true,
                            PermissionType = 140,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4933),
                            UserId = 106L
                        },
                        new
                        {
                            UserPermissionId = 230L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4934),
                            IsCrud = true,
                            PermissionType = 150,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4934),
                            UserId = 106L
                        },
                        new
                        {
                            UserPermissionId = 231L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4935),
                            IsCrud = true,
                            PermissionType = 170,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4935),
                            UserId = 106L
                        },
                        new
                        {
                            UserPermissionId = 232L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4935),
                            IsCrud = true,
                            PermissionType = 180,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4936),
                            UserId = 106L
                        },
                        new
                        {
                            UserPermissionId = 233L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4937),
                            IsCrud = true,
                            PermissionType = 4,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4937),
                            UserId = 107L
                        },
                        new
                        {
                            UserPermissionId = 234L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4941),
                            IsCrud = true,
                            PermissionType = 13,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4941),
                            UserId = 107L
                        },
                        new
                        {
                            UserPermissionId = 235L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4942),
                            IsCrud = true,
                            PermissionType = 20,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4942),
                            UserId = 107L
                        },
                        new
                        {
                            UserPermissionId = 236L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4942),
                            IsCrud = true,
                            PermissionType = 30,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4943),
                            UserId = 107L
                        },
                        new
                        {
                            UserPermissionId = 237L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4943),
                            IsCrud = true,
                            PermissionType = 40,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4943),
                            UserId = 107L
                        },
                        new
                        {
                            UserPermissionId = 238L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4944),
                            IsCrud = true,
                            PermissionType = 50,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4944),
                            UserId = 107L
                        },
                        new
                        {
                            UserPermissionId = 239L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4945),
                            IsCrud = true,
                            PermissionType = 60,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4945),
                            UserId = 107L
                        },
                        new
                        {
                            UserPermissionId = 240L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4945),
                            IsCrud = true,
                            PermissionType = 70,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4946),
                            UserId = 107L
                        },
                        new
                        {
                            UserPermissionId = 241L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4946),
                            IsCrud = true,
                            PermissionType = 80,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4946),
                            UserId = 107L
                        },
                        new
                        {
                            UserPermissionId = 242L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4947),
                            IsCrud = true,
                            PermissionType = 90,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4947),
                            UserId = 107L
                        },
                        new
                        {
                            UserPermissionId = 243L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4948),
                            IsCrud = true,
                            PermissionType = 95,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4948),
                            UserId = 107L
                        },
                        new
                        {
                            UserPermissionId = 244L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4949),
                            IsCrud = true,
                            PermissionType = 100,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4949),
                            UserId = 107L
                        },
                        new
                        {
                            UserPermissionId = 245L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4949),
                            IsCrud = true,
                            PermissionType = 110,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4950),
                            UserId = 107L
                        },
                        new
                        {
                            UserPermissionId = 246L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4950),
                            IsCrud = true,
                            PermissionType = 120,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4950),
                            UserId = 107L
                        },
                        new
                        {
                            UserPermissionId = 247L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4951),
                            IsCrud = true,
                            PermissionType = 130,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4951),
                            UserId = 107L
                        },
                        new
                        {
                            UserPermissionId = 248L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4952),
                            IsCrud = true,
                            PermissionType = 140,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4952),
                            UserId = 107L
                        },
                        new
                        {
                            UserPermissionId = 249L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4953),
                            IsCrud = true,
                            PermissionType = 150,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4953),
                            UserId = 107L
                        },
                        new
                        {
                            UserPermissionId = 250L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4953),
                            IsCrud = true,
                            PermissionType = 170,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4954),
                            UserId = 107L
                        },
                        new
                        {
                            UserPermissionId = 251L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4954),
                            IsCrud = true,
                            PermissionType = 180,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4954),
                            UserId = 107L
                        },
                        new
                        {
                            UserPermissionId = 252L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4956),
                            IsCrud = true,
                            PermissionType = 4,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4956),
                            UserId = 108L
                        },
                        new
                        {
                            UserPermissionId = 253L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4961),
                            IsCrud = true,
                            PermissionType = 13,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4961),
                            UserId = 108L
                        },
                        new
                        {
                            UserPermissionId = 254L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4962),
                            IsCrud = true,
                            PermissionType = 20,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4962),
                            UserId = 108L
                        },
                        new
                        {
                            UserPermissionId = 255L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4962),
                            IsCrud = true,
                            PermissionType = 30,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4963),
                            UserId = 108L
                        },
                        new
                        {
                            UserPermissionId = 256L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4963),
                            IsCrud = true,
                            PermissionType = 40,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4964),
                            UserId = 108L
                        },
                        new
                        {
                            UserPermissionId = 257L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4964),
                            IsCrud = true,
                            PermissionType = 50,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4965),
                            UserId = 108L
                        },
                        new
                        {
                            UserPermissionId = 258L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4965),
                            IsCrud = true,
                            PermissionType = 60,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4965),
                            UserId = 108L
                        },
                        new
                        {
                            UserPermissionId = 259L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4966),
                            IsCrud = true,
                            PermissionType = 70,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4966),
                            UserId = 108L
                        },
                        new
                        {
                            UserPermissionId = 260L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4967),
                            IsCrud = true,
                            PermissionType = 80,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4967),
                            UserId = 108L
                        },
                        new
                        {
                            UserPermissionId = 261L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4967),
                            IsCrud = true,
                            PermissionType = 90,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4968),
                            UserId = 108L
                        },
                        new
                        {
                            UserPermissionId = 262L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4968),
                            IsCrud = true,
                            PermissionType = 95,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4968),
                            UserId = 108L
                        },
                        new
                        {
                            UserPermissionId = 263L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4969),
                            IsCrud = true,
                            PermissionType = 100,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4969),
                            UserId = 108L
                        },
                        new
                        {
                            UserPermissionId = 264L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4970),
                            IsCrud = true,
                            PermissionType = 110,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4970),
                            UserId = 108L
                        },
                        new
                        {
                            UserPermissionId = 265L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4970),
                            IsCrud = true,
                            PermissionType = 120,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4971),
                            UserId = 108L
                        },
                        new
                        {
                            UserPermissionId = 266L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4971),
                            IsCrud = true,
                            PermissionType = 130,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4971),
                            UserId = 108L
                        },
                        new
                        {
                            UserPermissionId = 267L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4984),
                            IsCrud = true,
                            PermissionType = 140,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4985),
                            UserId = 108L
                        },
                        new
                        {
                            UserPermissionId = 268L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4986),
                            IsCrud = true,
                            PermissionType = 150,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4986),
                            UserId = 108L
                        },
                        new
                        {
                            UserPermissionId = 269L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4987),
                            IsCrud = true,
                            PermissionType = 170,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4987),
                            UserId = 108L
                        },
                        new
                        {
                            UserPermissionId = 270L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4988),
                            IsCrud = true,
                            PermissionType = 180,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4988),
                            UserId = 108L
                        },
                        new
                        {
                            UserPermissionId = 271L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4990),
                            IsCrud = true,
                            PermissionType = 4,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4990),
                            UserId = 109L
                        },
                        new
                        {
                            UserPermissionId = 272L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4991),
                            IsCrud = true,
                            PermissionType = 13,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4991),
                            UserId = 109L
                        },
                        new
                        {
                            UserPermissionId = 273L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4992),
                            IsCrud = true,
                            PermissionType = 20,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4992),
                            UserId = 109L
                        },
                        new
                        {
                            UserPermissionId = 274L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4993),
                            IsCrud = true,
                            PermissionType = 30,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4993),
                            UserId = 109L
                        },
                        new
                        {
                            UserPermissionId = 275L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4994),
                            IsCrud = true,
                            PermissionType = 40,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4994),
                            UserId = 109L
                        },
                        new
                        {
                            UserPermissionId = 276L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4995),
                            IsCrud = true,
                            PermissionType = 50,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4995),
                            UserId = 109L
                        },
                        new
                        {
                            UserPermissionId = 277L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4995),
                            IsCrud = true,
                            PermissionType = 60,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4996),
                            UserId = 109L
                        },
                        new
                        {
                            UserPermissionId = 278L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4996),
                            IsCrud = true,
                            PermissionType = 70,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4996),
                            UserId = 109L
                        },
                        new
                        {
                            UserPermissionId = 279L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4997),
                            IsCrud = true,
                            PermissionType = 80,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4997),
                            UserId = 109L
                        },
                        new
                        {
                            UserPermissionId = 280L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4998),
                            IsCrud = true,
                            PermissionType = 90,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4998),
                            UserId = 109L
                        },
                        new
                        {
                            UserPermissionId = 281L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4998),
                            IsCrud = true,
                            PermissionType = 95,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4999),
                            UserId = 109L
                        },
                        new
                        {
                            UserPermissionId = 282L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4999),
                            IsCrud = true,
                            PermissionType = 100,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(4999),
                            UserId = 109L
                        },
                        new
                        {
                            UserPermissionId = 283L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(5000),
                            IsCrud = true,
                            PermissionType = 110,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(5000),
                            UserId = 109L
                        },
                        new
                        {
                            UserPermissionId = 284L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(5001),
                            IsCrud = true,
                            PermissionType = 120,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(5001),
                            UserId = 109L
                        },
                        new
                        {
                            UserPermissionId = 285L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(5002),
                            IsCrud = true,
                            PermissionType = 130,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(5002),
                            UserId = 109L
                        },
                        new
                        {
                            UserPermissionId = 286L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(5002),
                            IsCrud = true,
                            PermissionType = 140,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(5003),
                            UserId = 109L
                        },
                        new
                        {
                            UserPermissionId = 287L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(5003),
                            IsCrud = true,
                            PermissionType = 150,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(5003),
                            UserId = 109L
                        },
                        new
                        {
                            UserPermissionId = 288L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(5004),
                            IsCrud = true,
                            PermissionType = 170,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(5004),
                            UserId = 109L
                        },
                        new
                        {
                            UserPermissionId = 289L,
                            CreatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(5005),
                            IsCrud = true,
                            PermissionType = 180,
                            UpdatedDateTime = new DateTime(2024, 9, 21, 3, 44, 6, 206, DateTimeKind.Utc).AddTicks(5005),
                            UserId = 109L
                        });
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.UserPreference", b =>
                {
                    b.Property<long>("UserPreferenceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("userpreferenceid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("UserPreferenceId"));

                    b.Property<int>("PreferenceType")
                        .HasColumnType("integer")
                        .HasColumnName("preferencetype");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("userid");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("value");

                    b.HasKey("UserPreferenceId")
                        .HasName("pk_userpreference");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_userpreference_userid");

                    b.ToTable("userpreference", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<long>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<long>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_aspnetroleclaims_aspnetroles_roleid");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<long>", b =>
                {
                    b.HasOne("WMS_backend.Models.DBModels.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_aspnetuserclaims_aspnetusers_userid");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<long>", b =>
                {
                    b.HasOne("WMS_backend.Models.DBModels.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_aspnetuserlogins_aspnetusers_userid");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<long>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<long>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_aspnetuserroles_aspnetroles_roleid");

                    b.HasOne("WMS_backend.Models.DBModels.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_aspnetuserroles_aspnetusers_userid");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<long>", b =>
                {
                    b.HasOne("WMS_backend.Models.DBModels.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_aspnetusertokens_aspnetusers_userid");
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.AppUser", b =>
                {
                    b.HasOne("WMS_backend.Models.DBModels.Company", "Company")
                        .WithMany("Users")
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_aspnetusers_company_companyid");

                    b.HasOne("WMS_backend.Models.DBModels.AppUser", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedUserId")
                        .HasConstraintName("fk_aspnetusers_aspnetusers_createduserid");

                    b.HasOne("WMS_backend.Models.DBModels.AppUser", "ModifiedUser")
                        .WithMany()
                        .HasForeignKey("ModifiedUserId")
                        .HasConstraintName("fk_aspnetusers_aspnetusers_modifieduserid");

                    b.Navigation("Company");

                    b.Navigation("CreatedUser");

                    b.Navigation("ModifiedUser");
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.Client", b =>
                {
                    b.HasOne("WMS_backend.Models.DBModels.Company", "Company")
                        .WithMany("Clients")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_client_company_companyid");

                    b.HasOne("WMS_backend.Models.DBModels.AppUser", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedUserId")
                        .HasConstraintName("fk_client_users_createduserid");

                    b.HasOne("WMS_backend.Models.DBModels.AppUser", "ModifiedUser")
                        .WithMany()
                        .HasForeignKey("ModifiedUserId")
                        .HasConstraintName("fk_client_users_modifieduserid");

                    b.Navigation("Company");

                    b.Navigation("CreatedUser");

                    b.Navigation("ModifiedUser");
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.CompanyCourier", b =>
                {
                    b.HasOne("WMS_backend.Models.DBModels.Company", "Company")
                        .WithMany("CompanyCouriers")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_companycourier_company_companyid");

                    b.HasOne("WMS_backend.Models.DBModels.AppUser", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedUserId")
                        .HasConstraintName("fk_companycourier_users_createduserid");

                    b.HasOne("WMS_backend.Models.DBModels.AppUser", "ModifiedUser")
                        .WithMany()
                        .HasForeignKey("ModifiedUserId")
                        .HasConstraintName("fk_companycourier_users_modifieduserid");

                    b.Navigation("Company");

                    b.Navigation("CreatedUser");

                    b.Navigation("ModifiedUser");
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.CompanyPermission", b =>
                {
                    b.HasOne("WMS_backend.Models.DBModels.Company", "Company")
                        .WithMany("CompanyPermissions")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_companypermission_company_companyid");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.CompanyPlatform", b =>
                {
                    b.HasOne("WMS_backend.Models.DBModels.Company", "Company")
                        .WithMany("CompanyPlatforms")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_companyplatform_company_companyid");

                    b.HasOne("WMS_backend.Models.DBModels.AppUser", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedUserId")
                        .HasConstraintName("fk_companyplatform_users_createduserid");

                    b.HasOne("WMS_backend.Models.DBModels.AppUser", "ModifiedUser")
                        .WithMany()
                        .HasForeignKey("ModifiedUserId")
                        .HasConstraintName("fk_companyplatform_users_modifieduserid");

                    b.Navigation("Company");

                    b.Navigation("CreatedUser");

                    b.Navigation("ModifiedUser");
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.Inventory", b =>
                {
                    b.HasOne("WMS_backend.Models.DBModels.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_inventory_company_companyid");

                    b.HasOne("WMS_backend.Models.DBModels.AppUser", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedUserId")
                        .HasConstraintName("fk_inventory_users_createduserid");

                    b.HasOne("WMS_backend.Models.DBModels.AppUser", "ModifiedUser")
                        .WithMany()
                        .HasForeignKey("ModifiedUserId")
                        .HasConstraintName("fk_inventory_users_modifieduserid");

                    b.HasOne("WMS_backend.Models.DBModels.ProductVariant", "ProductVariant")
                        .WithMany("Inventories")
                        .HasForeignKey("ProductVariantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_inventory_productvariant_productvariantid");

                    b.HasOne("WMS_backend.Models.DBModels.Rack", "Rack")
                        .WithMany("Inventories")
                        .HasForeignKey("RackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_inventory_rack_rackid");

                    b.Navigation("Company");

                    b.Navigation("CreatedUser");

                    b.Navigation("ModifiedUser");

                    b.Navigation("ProductVariant");

                    b.Navigation("Rack");
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.Location", b =>
                {
                    b.HasOne("WMS_backend.Models.DBModels.Company", "Company")
                        .WithMany("Locations")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_location_company_companyid");

                    b.HasOne("WMS_backend.Models.DBModels.AppUser", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedUserId")
                        .HasConstraintName("fk_location_users_createduserid");

                    b.HasOne("WMS_backend.Models.DBModels.AppUser", "ModifiedUser")
                        .WithMany()
                        .HasForeignKey("ModifiedUserId")
                        .HasConstraintName("fk_location_users_modifieduserid");

                    b.Navigation("Company");

                    b.Navigation("CreatedUser");

                    b.Navigation("ModifiedUser");
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.Notification", b =>
                {
                    b.HasOne("WMS_backend.Models.DBModels.AppUser", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_notification_users_userid");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.Order", b =>
                {
                    b.HasOne("WMS_backend.Models.DBModels.Client", "Client")
                        .WithMany("Orders")
                        .HasForeignKey("ClientId")
                        .HasConstraintName("fk_order_client_clientid");

                    b.HasOne("WMS_backend.Models.DBModels.Company", "Company")
                        .WithMany("Orders")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_order_company_companyid");

                    b.HasOne("WMS_backend.Models.DBModels.Courier", "Courier")
                        .WithMany("Orders")
                        .HasForeignKey("CourierId")
                        .HasConstraintName("fk_order_courier_courierid");

                    b.HasOne("WMS_backend.Models.DBModels.AppUser", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedUserId")
                        .HasConstraintName("fk_order_users_createduserid");

                    b.HasOne("WMS_backend.Models.DBModels.AppUser", "ModifiedUser")
                        .WithMany()
                        .HasForeignKey("ModifiedUserId")
                        .HasConstraintName("fk_order_users_modifieduserid");

                    b.HasOne("WMS_backend.Models.DBModels.Platform", "Platform")
                        .WithMany("Orders")
                        .HasForeignKey("PlatformId")
                        .HasConstraintName("fk_order_platform_platformid");

                    b.HasOne("WMS_backend.Models.DBModels.ShippingOption", "ShippingOption")
                        .WithMany("Orders")
                        .HasForeignKey("ShippingOptionId")
                        .HasConstraintName("fk_order_shippingoption_shippingoptionid");

                    b.Navigation("Client");

                    b.Navigation("Company");

                    b.Navigation("Courier");

                    b.Navigation("CreatedUser");

                    b.Navigation("ModifiedUser");

                    b.Navigation("Platform");

                    b.Navigation("ShippingOption");
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.OrderHistory", b =>
                {
                    b.HasOne("WMS_backend.Models.DBModels.Order", "Order")
                        .WithMany("OrderHistories")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_orderhistory_order_orderid");

                    b.HasOne("WMS_backend.Models.DBModels.AppUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_orderhistory_users_userid");

                    b.Navigation("Order");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.OrderItem", b =>
                {
                    b.HasOne("WMS_backend.Models.DBModels.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_orderitem_order_orderid");

                    b.HasOne("WMS_backend.Models.DBModels.ProductVariant", "ProductVariant")
                        .WithMany()
                        .HasForeignKey("ProductVariantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_orderitem_productvariant_productvariantid");

                    b.Navigation("Order");

                    b.Navigation("ProductVariant");
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.PlatformCourier", b =>
                {
                    b.HasOne("WMS_backend.Models.DBModels.Courier", "Courier")
                        .WithMany()
                        .HasForeignKey("CourierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_platformcourier_courier_courierid");

                    b.HasOne("WMS_backend.Models.DBModels.Platform", "Platform")
                        .WithMany("PlatformCouriers")
                        .HasForeignKey("PlatformId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_platformcourier_platform_platformid");

                    b.Navigation("Courier");

                    b.Navigation("Platform");
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.Product", b =>
                {
                    b.HasOne("WMS_backend.Models.DBModels.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_product_company_companyid");

                    b.HasOne("WMS_backend.Models.DBModels.AppUser", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedUserId")
                        .HasConstraintName("fk_product_users_createduserid");

                    b.HasOne("WMS_backend.Models.DBModels.AppUser", "ModifiedUser")
                        .WithMany()
                        .HasForeignKey("ModifiedUserId")
                        .HasConstraintName("fk_product_users_modifieduserid");

                    b.HasOne("WMS_backend.Models.DBModels.Supplier", "Supplier")
                        .WithMany("Products")
                        .HasForeignKey("SupplierId")
                        .HasConstraintName("fk_product_supplier_supplierid");

                    b.Navigation("Company");

                    b.Navigation("CreatedUser");

                    b.Navigation("ModifiedUser");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.ProductBundle", b =>
                {
                    b.HasOne("WMS_backend.Models.DBModels.AppUser", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedUserId")
                        .HasConstraintName("fk_productbundle_users_createduserid");

                    b.HasOne("WMS_backend.Models.DBModels.AppUser", "ModifiedUser")
                        .WithMany()
                        .HasForeignKey("ModifiedUserId")
                        .HasConstraintName("fk_productbundle_users_modifieduserid");

                    b.HasOne("WMS_backend.Models.DBModels.ProductVariant", "ProductVariant")
                        .WithMany()
                        .HasForeignKey("ProductVariantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_productbundle_productvariant_productvariantid");

                    b.Navigation("CreatedUser");

                    b.Navigation("ModifiedUser");

                    b.Navigation("ProductVariant");
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.ProductHistory", b =>
                {
                    b.HasOne("WMS_backend.Models.DBModels.Product", null)
                        .WithMany("ProductHistories")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("fk_producthistory_product_productid");

                    b.HasOne("WMS_backend.Models.DBModels.AppUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_producthistory_users_userid");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.ProductVariant", b =>
                {
                    b.HasOne("WMS_backend.Models.DBModels.AppUser", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedUserId")
                        .HasConstraintName("fk_productvariant_users_createduserid");

                    b.HasOne("WMS_backend.Models.DBModels.AppUser", "ModifiedUser")
                        .WithMany()
                        .HasForeignKey("ModifiedUserId")
                        .HasConstraintName("fk_productvariant_users_modifieduserid");

                    b.HasOne("WMS_backend.Models.DBModels.Product", "Product")
                        .WithMany("ProductVariants")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_productvariant_product_productid");

                    b.Navigation("CreatedUser");

                    b.Navigation("ModifiedUser");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.PurchaseOrder", b =>
                {
                    b.HasOne("WMS_backend.Models.DBModels.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_purchaseorder_company_companyid");

                    b.HasOne("WMS_backend.Models.DBModels.AppUser", "CreatedUser")
                        .WithMany("CreatedPurchaseOrders")
                        .HasForeignKey("CreatedUserId")
                        .HasConstraintName("fk_purchaseorder_users_createduserid");

                    b.HasOne("WMS_backend.Models.DBModels.Location", "Location")
                        .WithMany("PurchaseOrders")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_purchaseorder_location_locationid");

                    b.HasOne("WMS_backend.Models.DBModels.AppUser", "ModifiedUser")
                        .WithMany("ModifiedPurchaseOrders")
                        .HasForeignKey("ModifiedUserId")
                        .HasConstraintName("fk_purchaseorder_users_modifieduserid");

                    b.HasOne("WMS_backend.Models.DBModels.Supplier", "Supplier")
                        .WithMany("PurchaseOrders")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_purchaseorder_supplier_supplierid");

                    b.Navigation("Company");

                    b.Navigation("CreatedUser");

                    b.Navigation("Location");

                    b.Navigation("ModifiedUser");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.PurchaseOrderHistory", b =>
                {
                    b.HasOne("WMS_backend.Models.DBModels.PurchaseOrder", null)
                        .WithMany("PurchaseOrderHistories")
                        .HasForeignKey("PurchaseOrderId")
                        .HasConstraintName("fk_purchaseorderhistory_purchaseorder_purchaseorderid");

                    b.HasOne("WMS_backend.Models.DBModels.AppUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_purchaseorderhistory_users_userid");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.PurchaseOrderItem", b =>
                {
                    b.HasOne("WMS_backend.Models.DBModels.ProductVariant", "ProductVariant")
                        .WithMany("PurchaseOrderItems")
                        .HasForeignKey("ProductVariantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_purchaseorderitem_productvariant_productvariantid");

                    b.HasOne("WMS_backend.Models.DBModels.PurchaseOrder", "PurchaseOrder")
                        .WithMany("PurchaseOrderItems")
                        .HasForeignKey("PurchaseOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_purchaseorderitem_purchaseorder_purchaseorderid");

                    b.Navigation("ProductVariant");

                    b.Navigation("PurchaseOrder");
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.PurchaseRequest", b =>
                {
                    b.HasOne("WMS_backend.Models.DBModels.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_purchaserequest_company_companyid");

                    b.HasOne("WMS_backend.Models.DBModels.AppUser", "CreatedUser")
                        .WithMany("CreatedPurchaseRequests")
                        .HasForeignKey("CreatedUserId")
                        .HasConstraintName("fk_purchaserequest_users_createduserid");

                    b.HasOne("WMS_backend.Models.DBModels.AppUser", "ModifiedUser")
                        .WithMany("ModifiedPurchaseRequests")
                        .HasForeignKey("ModifiedUserId")
                        .HasConstraintName("fk_purchaserequest_users_modifieduserid");

                    b.Navigation("Company");

                    b.Navigation("CreatedUser");

                    b.Navigation("ModifiedUser");
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.Rack", b =>
                {
                    b.HasOne("WMS_backend.Models.DBModels.AppUser", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedUserId")
                        .HasConstraintName("fk_rack_users_createduserid");

                    b.HasOne("WMS_backend.Models.DBModels.Location", "Location")
                        .WithMany("Racks")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_rack_location_locationid");

                    b.HasOne("WMS_backend.Models.DBModels.AppUser", "ModifiedUser")
                        .WithMany()
                        .HasForeignKey("ModifiedUserId")
                        .HasConstraintName("fk_rack_users_modifieduserid");

                    b.Navigation("CreatedUser");

                    b.Navigation("Location");

                    b.Navigation("ModifiedUser");
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.ShippingOption", b =>
                {
                    b.HasOne("WMS_backend.Models.DBModels.Courier", "Courier")
                        .WithMany("ShippingOptions")
                        .HasForeignKey("CourierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_shippingoption_courier_courierid");

                    b.Navigation("Courier");
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.Supplier", b =>
                {
                    b.HasOne("WMS_backend.Models.DBModels.Company", "Company")
                        .WithMany("Suppliers")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_supplier_company_companyid");

                    b.HasOne("WMS_backend.Models.DBModels.AppUser", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedUserId")
                        .HasConstraintName("fk_supplier_users_createduserid");

                    b.HasOne("WMS_backend.Models.DBModels.AppUser", "ModifiedUser")
                        .WithMany()
                        .HasForeignKey("ModifiedUserId")
                        .HasConstraintName("fk_supplier_users_modifieduserid");

                    b.Navigation("Company");

                    b.Navigation("CreatedUser");

                    b.Navigation("ModifiedUser");
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.Tote", b =>
                {
                    b.HasOne("WMS_backend.Models.DBModels.AppUser", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedUserId")
                        .HasConstraintName("fk_tote_users_createduserid");

                    b.HasOne("WMS_backend.Models.DBModels.Location", "Location")
                        .WithMany("Totes")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_tote_location_locationid");

                    b.HasOne("WMS_backend.Models.DBModels.AppUser", "ModifiedUser")
                        .WithMany()
                        .HasForeignKey("ModifiedUserId")
                        .HasConstraintName("fk_tote_users_modifieduserid");

                    b.Navigation("CreatedUser");

                    b.Navigation("Location");

                    b.Navigation("ModifiedUser");
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.UserPermission", b =>
                {
                    b.HasOne("WMS_backend.Models.DBModels.AppUser", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedUserId")
                        .HasConstraintName("fk_userpermission_users_createduserid");

                    b.HasOne("WMS_backend.Models.DBModels.AppUser", "ModifiedUser")
                        .WithMany()
                        .HasForeignKey("ModifiedUserId")
                        .HasConstraintName("fk_userpermission_users_modifieduserid");

                    b.HasOne("WMS_backend.Models.DBModels.AppUser", "User")
                        .WithMany("UserPermissions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_userpermission_users_userid");

                    b.Navigation("CreatedUser");

                    b.Navigation("ModifiedUser");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.UserPreference", b =>
                {
                    b.HasOne("WMS_backend.Models.DBModels.AppUser", "User")
                        .WithMany("UserPreferences")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_userpreference_users_userid");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.AppUser", b =>
                {
                    b.Navigation("CreatedPurchaseOrders");

                    b.Navigation("CreatedPurchaseRequests");

                    b.Navigation("ModifiedPurchaseOrders");

                    b.Navigation("ModifiedPurchaseRequests");

                    b.Navigation("Notifications");

                    b.Navigation("UserPermissions");

                    b.Navigation("UserPreferences");
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.Client", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.Company", b =>
                {
                    b.Navigation("Clients");

                    b.Navigation("CompanyCouriers");

                    b.Navigation("CompanyPermissions");

                    b.Navigation("CompanyPlatforms");

                    b.Navigation("Locations");

                    b.Navigation("Orders");

                    b.Navigation("Suppliers");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.Courier", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("ShippingOptions");
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.Location", b =>
                {
                    b.Navigation("PurchaseOrders");

                    b.Navigation("Racks");

                    b.Navigation("Totes");
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.Order", b =>
                {
                    b.Navigation("OrderHistories");

                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.Platform", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("PlatformCouriers");
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.Product", b =>
                {
                    b.Navigation("ProductHistories");

                    b.Navigation("ProductVariants");
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.ProductVariant", b =>
                {
                    b.Navigation("Inventories");

                    b.Navigation("PurchaseOrderItems");
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.PurchaseOrder", b =>
                {
                    b.Navigation("PurchaseOrderHistories");

                    b.Navigation("PurchaseOrderItems");
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.Rack", b =>
                {
                    b.Navigation("Inventories");
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.ShippingOption", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("WMS_backend.Models.DBModels.Supplier", b =>
                {
                    b.Navigation("Products");

                    b.Navigation("PurchaseOrders");
                });
#pragma warning restore 612, 618
        }
    }
}
